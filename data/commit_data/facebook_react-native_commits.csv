repo,sha,author,date,message,additions,deletions,total_changes
facebook/react-native,8083cb4ab1f41dc7bcf75d4968615285f0b144b3,Pieter De Baets,2025-07-11T22:05:23Z,"Remove LegacyArchitecture deprecation from JSONArguments (#52570)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52570  JSONArguments is a set of utility methods that are not part of the legacy architecture, removing the annotation.  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D78168536  fbshipit-source-id: 25fcc41441df6c71f9a96ec0ba82c42e8f6af80c",0,10,10
facebook/react-native,77db9343b1285dc5ffc36e99d1f9eba196b24772,generatedunixname89002005287564,2025-07-11T18:06:18Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/react/runtime/platform/ios/ReactCommon (#52569)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52569  Reviewed By: dtolnay  Differential Revision: D78146649  fbshipit-source-id: 0878130feeda20c746d7fd53a00b376cde61a502,4,8,12
facebook/react-native,ec5bde62b6b23d9518c6298a92948acfe6fb9f5a,Rob Hogan,2025-07-11T18:03:29Z,"Breaking: Use named exports in `metro-babel-register` (#52564)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52564  Currently, `metro-babel-register` has a function as its default export, to which we've tagged on various properties.  This tidies that up to a more idiomatic object of named exports, with `register` as a new one of them.  This also serves to make it more compatible with automatic TypeScript generation.  This is semver breaking, but `metro-babel-register` has very little usage outside Meta projects so isn't expected to be disruptive.  Changelog: [Internal]  Metro changelog: ```  - **[Breaking]**: Move metro-babel-register's main function to a named export `register` ```  Reviewed By: huntie  Differential Revision: D78157559  fbshipit-source-id: c59c9820e9895007345561fed9ccec2273b925c8",9,1,10
facebook/react-native,bb3ef784e3506881d07595dfbef0e4d4b507ff3a,Rob Hogan,2025-07-11T18:03:29Z,"Remove HTTP keepAliveTimeout workaround not needed since Node.js 12 (#52561)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52561  The removed code comment is pretty clear that this workaround is in place for a specific bug, which was closed in a Node.js 8.x minor: https://github.com/nodejs/node/issues/13391  A related issue descibed a problem that still existed in Node 10: https://github.com/nodejs/node/issues/27363  Subsequent comments reporting problems with newer Node.js versions all seem to relate to mismatched configuration with load balancers, not directly relevant to Metro.  Reproducers for the original bugs no longer repro on new Node.js (tested with 22.14), so I think it's safe to conclude this is fixed.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D78158427  fbshipit-source-id: 0be5dbc4334ac7b0bbccde44a840caac43deb4df",1,13,14
facebook/react-native,b8550251d86b588e50171f3debd9d8d4e3eab09a,generatedunixname89002005287564,2025-07-11T17:41:33Z,Fix CQS signal performance-faster-string-find in xplat/js/react-native-github/packages/react-native/ReactCommon/react/runtime (#52568)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52568  Reviewed By: dtolnay  Differential Revision: D78146248  fbshipit-source-id: 8b93b09d46832d6e67c1ded075eb99b9bdd1f0e2,1,1,2
facebook/react-native,5dc3e186719f39c83d1742a38074c589c20c08e6,Christoph Purrer,2025-07-11T16:28:23Z,Fix loop iteration in Transform::Interpolate(... (#52548)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52548  Changelog: [Internal]  While this does not cause real crashes as the code is already gated via ``` bool haveRHS = j < rhs.operations.size(); ``` it still represents a bug in the logic  Reviewed By: rshest  Differential Revision: D78133364  fbshipit-source-id: 80efc97b5174e3d0d7efe33604255a96bc856e87,1,1,2
facebook/react-native,e79808fa4b1dfe784044f43de94f4b0e1b8fc4d5,Riccardo Cipolleschi,2025-07-11T16:14:43Z,"Update caching keys for prebuild-core (#52565)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52565  When we implemented caching in prebuilds for RN core for iOS, we were naïve in choosing the cache key. The current cache key does not consider the source code that is built and this can be problematic. Imagine a contributor that changes a file in a React folder in their PR, but CI reuses a binary created from `main` and so everything will work well in CI even if the change contains an error.  This change globs over the header and implementation files in the React, ReactCommon and Libraries folder to ensure that we rebuild the code when iOS code changes.  ## Changelog: [Internal] -  Reviewed By: cortinico  Differential Revision: D78161427  fbshipit-source-id: e612b76232308835eb88c3776122bebd1316f751",4,4,8
facebook/react-native,9747c955ac1d593f869fe46386433fd92bd8bce9,Rubén Norte,2025-07-11T15:41:01Z,Migrate network profiling to console.timeStamp (#52560)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52560  Changelog: [internal]  This migrates the profiling logic for `XMLHttpRequest` from `performance.measure` to `console.timeStamp` with built-in support for tracks.  Reviewed By: hoxyq  Differential Revision: D78157407  fbshipit-source-id: 0ef060557a00e7973ef7f0478b26b81471d38226,20,5,25
facebook/react-native,6f6945e64f043fc342c71a5739078a9b61922b8b,Rubén Norte,2025-07-11T15:41:01Z,"Propagate console.timeStamp entries to Perfetto (#52542)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52542  Changelog: [internal]  This adds support to propagate performance entries logged to `console.timeStamp` to Perfetto, if enabled. It also modifies the Perfetto integration to support track groups, in addition to track names.  Reviewed By: hoxyq  Differential Revision: D78092596  fbshipit-source-id: 76b0fe2738d856fd75ee941de223d6a6a73d8e1c",67,15,82
facebook/react-native,0021dafc5101c70912433e3da255d99aa7ea97e4,Nicola Corti,2025-07-11T15:15:42Z,Remove deprecated constructors for TextInput *Event classes (#52535)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52535  Those constructors are no longer necessary. They're deprecated + the class is internal so they're not breaking changes. I'm just cleaning them up as they're not needed anymore.  Changelog: [Internal] [Changed] - Remove deprecated constructors for TextInput *Event classes  Reviewed By: javache  Differential Revision: D78095748  fbshipit-source-id: 2dc6c750f8470a88918d8a69b68364f38251d79e,2,50,52
facebook/react-native,e69777d2585f9317e5ad828df323da85a844370b,Riccardo Cipolleschi,2025-07-11T14:15:35Z,Connect prebuilds with CI (#52562)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52562  This change use the prebuilds we build in CI i other iOS jobs to speed-up the iOS CI  ## Changelog: [Internal] -  Reviewed By: cortinico  Differential Revision: D78159367  fbshipit-source-id: 64486c99fdbc54487dbcff786209cacac304b9b7,32,5,37
facebook/react-native,dc5110a8f288dcf6422d4845ce5fac2fcf43b471,Riccardo Cipolleschi,2025-07-11T14:15:35Z,"Unify test_ios_rntester_dynamic_frameworks with test_ios_rntester (#52563)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52563  The test_ios_rntester_dynamic_frameworks is identical to the test_ios_rntester but for the framework parameter.  This change unifies the two, using a matrix to test all the configurations: - Debug / Static Libraries - Release / Static Libraries - Debug / Dynamic Frameworks - Release / Dynamic Frameworks  ## Changelog: [Internal] -  Reviewed By: cortinico  Differential Revision: D78159366  fbshipit-source-id: b321f295477fe3ae6e43c7518d47afb0714bddb8",3,22,25
facebook/react-native,3de1dc0fd1a8f04b08b59a988a873a3eda9c9e71,Riccardo Cipolleschi,2025-07-11T14:15:35Z,Fix RCTPushNotification podspec to work with prebuilds (#52531)  Summary: This change tries to use the prebuilds we build in CI i other iOS jobs to speed-up the iOS CI  bypass-github-export-checks  ## Changelog: [Internal] -  Pull Request resolved: https://github.com/facebook/react-native/pull/52531  Test Plan: Build rntester using prebuilds:  ``` # after downloading the prebuilds from CI and unzipping them export HERMES_ENGINE_TARBALL_PATH=~/Downloads/hermes-ios-Debug.tar.gz export RCT_USE_LOCAL_RN_DEP=~/Downloads/reactnative-dependencies-debug.tar.gz export RCT_TESTONLY_RNCORE_TARBALL_PATH=~/Downloads/React.xcframework.tar.gz  USE_FRAMEWORKS=dynamic bundle exec pod install open RNTesterPods.xcworkspace ``` And then build from Xcode.  Reviewed By: rshest  Differential Revision: D78158734  Pulled By: cipolleschi  fbshipit-source-id: 43cbb66bd44fa621292b69de0dadde5ed20c4574,4,1,5
facebook/react-native,88cb7832ea2d3f1badbf4f4ca6b5f6e43f3bb2af,Christoph Purrer,2025-07-11T13:51:49Z,"Remove unused Color/Transform #includes and use enum class for TransformOperationType (#52549)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52549  Changelog: [Internal]  - The #includes are not used - `enum class` is C++, (enum is C)  Reviewed By: rshest  Differential Revision: D78135339  fbshipit-source-id: 1a35301ea063ce17c195be7dc373132d342f111a",1,3,4
facebook/react-native,aa2a5a682f4505893d9a3bf8fbfa6ce4a29ce993,Zeya Peng,2025-07-11T13:40:03Z,Animated.sequence (#52547)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52547  ## Changelog:  [Internal] [Added] - add fantom test for Animated.sequence  Reviewed By: christophpurrer  Differential Revision: D78107756  fbshipit-source-id: c3a7bc2d487cc0ae7316a26dc10b01dcf54dbd37,96,0,96
facebook/react-native,a0543b773c9194034b1f7a2cf7d5137874c80bde,Zeya Peng,2025-07-11T13:40:03Z,AnimatedValue.interpolate (#52546)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52546  ## Changelog:  [Internal] [Added] - add fantom test for AnimatedValue.interpolate  Reviewed By: christophpurrer  Differential Revision: D78032554  fbshipit-source-id: 0100a510cb0ad5c8e1886c309fab91ee9e017769,61,0,61
facebook/react-native,f5abce0932b48fcc1d443ab8957655246894f540,Rubén Norte,2025-07-11T12:37:31Z,Micro-optimize performance methods (#52555)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52555  Changelog: [internal]  Applied several micro-optimizations to methods in the `performance` object: - Cached property access - Avoided unnecessary function calls - Avoided unnecessary object allocations - Use strict comparisons with `undefined` instead of loose comparisons with `null` whenever possible.  This yields wins from 5 to 15% depending on the method and args.  ## Before  | (index) | Task name                                                 | Latency average (ns) | Latency median (ns) | Throughput average (ops/s) | Throughput median (ops/s) | Samples | | ------- | --------------------------------------------------------- | -------------------- | ------------------- | -------------------------- | ------------------------- | ------- | | 0       | 'mark (default)'                                          | '1728.19 ± 0.81%'    | '1682.00'           | '592249 ± 0.01%'           | '594530'                  | 578640  | | 1       | 'mark (with custom startTime)'                            | '2008.33 ± 1.32%'    | '1933.00'           | '514326 ± 0.01%'           | '517331'                  | 497927  | | 2       | 'measure (default)'                                       | '2568.90 ± 1.48%'    | '2484.00'           | '400362 ± 0.02%'           | '402576'                  | 389272  | | 3       | 'measure (with start and end timestamps)'                 | '2806.21 ± 0.69%'    | '2744.00'           | '362439 ± 0.02%'           | '364431'                  | 356353  | | 4       | 'measure (with mark names)'                               | '2860.82 ± 0.23%'    | '2824.00'           | '352145 ± 0.02%'           | '354108'                  | 349551  | | 5       | 'clearMarks'                                              | '763.05 ± 0.03%'     | '751.00'            | '1320377 ± 0.01%'          | '1331558'                 | 1310524 | | 6       | 'clearMeasures'                                           | '788.10 ± 0.05%'     | '781.00'            | '1281839 ± 0.01%'          | '1280410'                 | 1268875 | | 7       | 'mark + clearMarks'                                       | '2129.03 ± 1.04%'    | '2053.00'           | '484778 ± 0.01%'           | '487092'                  | 469698  | | 8       | 'measure + clearMeasures (with start and end timestamps)' | '3176.38 ± 0.67%'    | '3105.00'           | '320111 ± 0.02%'           | '322061'                  | 314825  | | 9       | 'measure + clearMeasures (with mark names)'               | '3229.33 ± 0.60%'    | '3145.00'           | '316463 ± 0.02%'           | '317965'                  | 309662  |  ## After  | (index) | Task name                                                 | Latency average (ns) | Latency median (ns) | Throughput average (ops/s) | Throughput median (ops/s) | Samples | | ------- | --------------------------------------------------------- | -------------------- | ------------------- | -------------------------- | ------------------------- | ------- | | 0       | 'mark (default)'                                          | '1598.54 ± 0.93%'    | '1553.00'           | '639076 ± 0.01%'           | '643915'                  | 625572  | | 1       | 'mark (with custom startTime)'                            | '1772.07 ± 1.24%'    | '1713.00'           | '579523 ± 0.01%'           | '583771'                  | 564314  | | 2       | 'measure (default)'                                       | '2349.32 ± 0.81%'    | '2284.00'           | '434149 ± 0.01%'           | '437828'                  | 425656  | | 3       | 'measure (with start and end timestamps)'                 | '2609.11 ± 1.06%'    | '2534.00'           | '391950 ± 0.02%'           | '394633'                  | 383273  | | 4       | 'measure (with mark names)'                               | '2656.46 ± 0.42%'    | '2614.00'           | '380128 ± 0.01%'           | '382555'                  | 376442  | | 5       | 'clearMarks'                                              | '666.38 ± 0.03%'     | '661.00'            | '1511649 ± 0.01%'          | '1512859'                 | 1500641 | | 6       | 'clearMeasures'                                           | '718.62 ± 0.03%'     | '711.00'            | '1401526 ± 0.01%'          | '1406470'                 | 1391563 | | 7       | 'mark + clearMarks'                                       | '2027.47 ± 1.29%'    | '1953.00'           | '509105 ± 0.01%'           | '512033'                  | 493227  | | 8       | 'measure + clearMeasures (with start and end timestamps)' | '3030.83 ± 0.98%'    | '2915.00'           | '340624 ± 0.02%'           | '343053'                  | 329943  | | 9       | 'measure + clearMeasures (with mark names)'               | '2915.76 ± 0.59%'    | '2844.00'           | '349120 ± 0.02%'           | '351617'                  | 342964  |  Reviewed By: hoxyq  Differential Revision: D78013565  fbshipit-source-id: ddd02d887b228debd58805406c1395b9179dd804,69,35,104
facebook/react-native,38cf247c63301ad84fa1f5aab1bc37306bfcb5bb,Rubén Norte,2025-07-11T12:37:31Z,Add more benchmarks for performance.measure (#52556)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52556  Changelog: [internal]  This adds a new benchmark for `performance.measure` to measure the performance of calling it without arguments.  Reviewed By: hoxyq  Differential Revision: D78013563  fbshipit-source-id: 84e2151d9d91cfc2e85d310f42010483e7304648,9,0,9
facebook/react-native,1fc168f0057bf5ae5429b8f921c491dfc925b01c,Rubén Norte,2025-07-11T12:37:31Z,"Handle nullability of detail correctly in performance.mark and performance.measure (#52557)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52557  Changelog: [internal]  `PerformanceEntry.detail` should be `null` if not defined, not undefined as it is currently. This fixes that.  Reviewed By: hoxyq  Differential Revision: D78013568  fbshipit-source-id: b22dfdd8d582594fc1e5199264e8af92c26bb0ea",32,25,57
facebook/react-native,5e0eb0a17cc0a908ff2cc977e44df984d6bf1dfe,Rubén Norte,2025-07-11T12:37:31Z,"Small refactor of performance API (#52558)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52558  Changelog: [internal]  Small refactors for `$ReadOnly`, move `getCurrentTimeStamp` to utils so it can be reused, etc.  Reviewed By: hoxyq  Differential Revision: D78013570  fbshipit-source-id: f73d119f22dd4dc9aaa5efef76a1156821ecd8de",33,28,61
facebook/react-native,acd07c7e1c32c7cd4642c091b7f064edbc3978bb,Rubén Norte,2025-07-11T12:37:31Z,Handle casting to string in performance.mark and performance.measure correctly (#52559)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52559  Changelog: [internal]  Making `performance.mark` and `performance.measure` slightly more spec-compliant.  Reviewed By: hoxyq  Differential Revision: D78013571  fbshipit-source-id: 4881b674f7cded5045b9f464ca7442a186c39048,38,6,44
facebook/react-native,ff38d59cff92e0a50f0dd70384fbc4dd11d969c4,Harini Malothu,2025-07-11T10:13:30Z,"# Fixed Type Conversion Error in DynamicEventPayload (#52525)  Summary: Resolves https://github.com/microsoft/react-native-windows/issues/14797 We were facing a type conversion error in the DynamicEventPayload::extractValue() method. The function signature declares a return type of std::optional<double>, but when handling INT64 values, but when handling `INT64` values, the code was directly returning `dynamic.asInt()` without proper type conversion We faced the issue while integrating https://github.com/microsoft/react-native-windows/pull/14791 ## Changelog: [General][Fixed]  Pull Request resolved: https://github.com/facebook/react-native/pull/52525  Test Plan: The fix involved wrapping the dynamic.asInt() call with static_cast<double>(), creating the corrected line: return static_cast<double>(dynamic.asInt())  Tested E2E in RNW  Reviewed By: andrewdacenko  Differential Revision: D78083842  Pulled By: rshest  fbshipit-source-id: 8dbedd67fa7c21e89b863d8b1bc7b9e0d7978b9f",1,1,2
facebook/react-native,7bbb13c9be014c0e63f0deaad809d669c15325ad,Riccardo Cipolleschi,2025-07-11T10:01:30Z,Fix ENTERPRISE_REPOSITORY usage (#52553)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52553  This change fixes the usage of `ENTERPRISE_REPOSITORY` in Ruby  ## Changelog [Internal] -  Reviewed By: cortinico  Differential Revision: D78152641  fbshipit-source-id: e4ace014f1b7cbeb1ec5a0dea955d1fc2bae5b67,6,6,12
facebook/react-native,d4b36b03003eb2de9eaf5b57bb639bae8cc12f20,Jakub Piasecki,2025-07-11T09:16:35Z,"Fix `display: contents` nodes not being cloned with the wrong owner (#52530)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52530  This PR fixes two issues with `display: contents` implementation: 1. When a node with `display: contents` set is a leaf, it won't be cloned after the initial tree is built. The added test case covers this scenario. 2. It was possible for the subtree of `display: contents` nodes not to be cloned during layout. I don't have a minimal reproduction for this one, unfortunately. It was discovered in the Expensify app: https://github.com/Expensify/App/issues/65268, along with a consistent reproduction. In that specific case, it seems to be heavily tied to `react-native-onyx`, which is a state management library.  Changelog: [GENERAL][FIXED] - Fixed nodes with `display: contents` set being cloned with the wrong owner  X-link: https://github.com/facebook/yoga/pull/1826  Reviewed By: adityasharat, NickGerleman  Differential Revision: D78084270  Pulled By: j-piasecki  fbshipit-source-id: eb81f6d7dcd1665974d07261ba693e2abea239bb",47,14,61
facebook/react-native,84a2765c2af85383c3852c11c60306f625badd6d,Vitali Zaidman,2025-07-11T08:57:14Z,"renamed release testing scripts (#52541)  Summary: Use a more suitable name for the [scripts used in the release process](https://github.com/reactwg/react-native-releases/blob/main/docs/guide-release-testing.md) to generate a testing project to test a new React Native release against. ```diff - test-e2e-local + test-release-local ``` ## Changelog: [INTERNAL]  Pull Request resolved: https://github.com/facebook/react-native/pull/52541  Test Plan: `yarn test-release-local-clean` works the same way: <img width=""1177"" height=""161"" alt=""Screenshot 2025-07-10 at 17 54 50"" src=""https://github.com/user-attachments/assets/5efe30c6-a738-476e-a670-696959e9a0fc"" />  `yarn test-release-local` works the same way: <img width=""1077"" height=""395"" alt=""Screenshot 2025-07-10 at 17 59 29"" src=""https://github.com/user-attachments/assets/fe6c6443-9316-4ed0-b6dc-51de5ffb109c"" />  Reviewed By: cipolleschi  Differential Revision: D78150648  Pulled By: vzaidman  fbshipit-source-id: 471715da271d03bc2a35afbda02074bf71f62734",5,5,10
facebook/react-native,6b8bc5a1d02cb9bdbefaa07515f90270f1828073,Nick Lefever,2025-07-10T19:35:18Z,Move toDynamic conversion for FilterFunction (#52537)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52537  See title  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D78088447  fbshipit-source-id: 3f3a1e82e527cfe83de7a798b8b9ea2996dc8de1,47,40,87
facebook/react-native,0144798e25d5be0988a6d43e843613b420394331,Nick Lefever,2025-07-10T19:35:18Z,Move toDynamic conversion for BoxShadow (#52536)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52536  See title  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D78005880  fbshipit-source-id: 5a4b7ff3c4d9c6ece17759926ee80aec80d3cde0,20,15,35
facebook/react-native,263ccad3c5799af64211e9981e21ca51d973e608,generatedunixname89002005287564,2025-07-10T19:16:40Z,Fix CQS signal modernize-use-using in xplat/js/react-native-github/packages/react-native/React/CoreModules [B] (#52539)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52539  Reviewed By: dtolnay  Differential Revision: D78062538  fbshipit-source-id: 610505b5bfd78798b09970194f3b95aaefb08920,1,1,2
facebook/react-native,c2a3e4420e07147f9a040a665da98dbe22b87a2a,Devan Buggay,2025-07-10T19:04:00Z,HWInput: Add Channel Up/Down Support (#52540)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52540  Adds Channel Up/Down events to HWInput.  Changelog: [Android][Added] - Channel up/down hardware events.  Reviewed By: Abbondanzo  Differential Revision: D78099245  fbshipit-source-id: 133d5c835f3862feba641354cb1164eefeafed9f,4,1,5
facebook/react-native,5d4c22b4a756e9329c5a040cb4c06cd734700c6d,Rob Hogan,2025-07-10T17:10:09Z,"Update @typescript-eslint (#52532)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52532  Since we updated TypeScript in https://github.com/facebook/react-native/pull/51831, ESLint has printed a warning that `typescript/eslint` doesn't support our TS version.  This updates it to fix the warning.  Changelog: [Internal]  Reviewed By: vzaidman  Differential Revision: D77833826  fbshipit-source-id: 29a5179c4f223a8cc0ab2c8071f0a5efa09e5edc",112,74,186
facebook/react-native,b0606ba041b9aba1e0d154969c8fafc3bd419541,Nicola Corti,2025-07-10T17:00:32Z,"Correctly mark as deprecated the ReactActivityDelegate.getReactInstanceManager (#52533)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52533  This method is deprecated in the JavaDoc but not correctly annotated as Deprecated, let's fix it.  Changelog: [Internal] [Changed] -  Reviewed By: cipolleschi  Differential Revision: D78092468  fbshipit-source-id: 31e4cb958a51b20f5105a4bec3366d67402e5419",1,0,1
facebook/react-native,4d1f1a4e2967b0df26535d695236fdd5c44a0102,Nicola Corti,2025-07-10T16:36:54Z,"Back out ""Remove ShadowNodeTraits::Trait::DirtyYogaNode"" (#52528)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52528  This was a breaking change that is currently breaking `react-native-safe-area-context` so we can't ship it as it is, especially because all the apps in OSS will be affected by this.  Changelog: [General] [Changed] - Revert breaking change due to the removal of `ShadowNodeTraits::Trait::DirtyYogaNode`  Original commit changeset: 869e81f0ae00  Original Phabricator Diff: D75324251  Reviewed By: huntie  Differential Revision: D78085848  fbshipit-source-id: f7fcc5e33d59cc966a4ee88dfdbedca4f4c580e0",9,0,9
facebook/react-native,a98ee9147a9e8cfbb661c8ba431375fca9b53d1d,Christoph Purrer,2025-07-10T16:17:08Z,Add noexcept specifications to Transform and Color methods (#52497)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52497  Changelog: [Internal]  Is a good practice (and can reduce binary size): https://cpp-core-guidelines-docs.vercel.app/errors#Re-noexcept  Reviewed By: philIip  Differential Revision: D77988686  fbshipit-source-id: 575c18aa0c8f593f363f4450e9e06d41c97a3d1a,48,45,93
facebook/react-native,d1730ff960fcb9a01ee94b9e46e5a9fbb7d73f4a,Tomasz Zawadzki,2025-07-10T15:25:50Z,Expose `react_renderer_bridging` headers via prefab (#52529)  Summary: This PR fixes the following build error while trying to build `react-native@0.81.0-rc.0` app with `react-native-screens@4.10.0` installed using react-native prebuilds (AAR) due to a missing `react/renderer/bridging/bridging.h` file in `prefab/modules/` inside `react-android-0.81.0-rc.0-debug.aar`.  ``` In file included from /Users/tomekzaw/RNOS/react-native-reanimated/node_modules/react-native-screens/android/src/main/cpp/NativeProxy.cpp:2:   In file included from /Users/tomekzaw/.gradle/caches/8.14.1/transforms/75e7f8f7b5ef763e687a16737daf01b6/transformed/react-android-0.81.0-rc.0-debug/prefab/modules/reactnative/include/react/fabric/Binding.h:12:   In file included from /Users/tomekzaw/.gradle/caches/8.14.1/transforms/75e7f8f7b5ef763e687a16737daf01b6/transformed/react-android-0.81.0-rc.0-debug/prefab/modules/reactnative/include/react/fabric/FabricUIManagerBinding.h:22:   /Users/tomekzaw/.gradle/caches/8.14.1/transforms/75e7f8f7b5ef763e687a16737daf01b6/transformed/react-android-0.81.0-rc.0-debug/prefab/modules/reactnative/include/react/renderer/uimanager/primitives.h:14:10: fatal error: 'react/renderer/bridging/bridging.h' file not found      14 | #include <react/renderer/bridging/bridging.h>         |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   1 error generated.   ninja: build stopped: subcommand failed. ```  ## Changelog:  [ANDROID] [CHANGED] - Expose `react_renderer_bridging` headers via prefab  Pull Request resolved: https://github.com/facebook/react-native/pull/52529  Reviewed By: cipolleschi  Differential Revision: D78092428  Pulled By: cortinico  fbshipit-source-id: de8208ae7545201f600c277a0c8907575c310c58,2,0,2
facebook/react-native,e0efd3eb5b637bd00fb7528ab4d129f6b3e13d03,Vitali Zaidman,2025-07-10T10:34:10Z,add 0.81.0-rc.0 release to the changelog file (#52517)  Summary: Changelog: [INTERNAL] - Update the changelog to include `0.81.0-rc.0`  Pull Request resolved: https://github.com/facebook/react-native/pull/52517  Reviewed By: cortinico  Differential Revision: D78021431  Pulled By: vzaidman  fbshipit-source-id: 3053aed68a947bf808ae29d4827599112175f531,188,0,188
facebook/react-native,42d1a7934cad4b2c92653e3fa7781c2af8f44df4,Christian Falch,2025-07-10T10:04:07Z,add release/debug switch script (#52498)  Summary: Fixes #T228219721  This commit adds the debug/release switch script like we have for rn deps and hermes for react-core prebuilt:  - Added script: replace-rncore-version-js - Inserted script into React-Core-prebuilt podspec - Updated rncore.rb with correct filenames  bypass-github-export-checks  ## Changelog:  [IOS] [ADDED] - add release/debug switch script for React-Core-prebuilt  Pull Request resolved: https://github.com/facebook/react-native/pull/52498  Test Plan: Run in RNTester and switch between release/debug  Reviewed By: rshest  Differential Revision: D78012917  Pulled By: cipolleschi  fbshipit-source-id: 71cad23cd41484a8253fc89d5dce8653649657a0,130,11,141
facebook/react-native,f2b064c2d40c39017ac2a31bf3caf8acef23038c,Christian Falch,2025-07-10T10:04:07Z,"fix wrong use of return in header file generation loop (#52490)  Summary: Instead of returning when creating the list of header files from our podspecs, we now call `continue`. This is a bug that causes all subsequent globs in the header file list to be omitted after the first omitted glob.  bypass-github-export-checks  ## Changelog:  [IOS] [FIXED] - Fixed premature return in header file generation from podspec globs  Pull Request resolved: https://github.com/facebook/react-native/pull/52490  Test Plan: Run prebuild scripts and verify that React-Fabric podspec headers are included in the resulting xcframework.  Reviewed By: mdvacca  Differential Revision: D78012399  Pulled By: cipolleschi  fbshipit-source-id: 2d334f4f7ff966ea4c778786a7056e13a255a708",1,1,2
facebook/react-native,40e45f53661ce80c3a6fbbf07f52dc900afcad52,Christian Falch,2025-07-10T10:04:07Z,"add support for USE_FRAMEWORKS when using prebuilt React Native Core (#52489)  Summary: When using prebuilts the USE_FRAMEWORKS setting is not really relevant for the React Native code, since there will not be any source code to build frameworks for - and because we already have a framework for the code in React.XCFramework.  This commit adds a new command to the React Native podspecs like we did with the ReactNativeDependencies framework. The method is called `add_rncore_dependency` and it does nothing when building from source - but when linking with the React.XCFramework it explicitly adds linking with the framework.  In addition there are a few places in the ruby code where we check for the USE_FRAMEWORK value and changes some settings - where needed this commit will add a separate check to ensure we're building from source when making these changes.  bypass-github-export-checks  ## Changelog:  [IOS] [ADDED] - Added support for using USE_FRAMEWORKS with prebuilt React Native Core  Pull Request resolved: https://github.com/facebook/react-native/pull/52489  Test Plan: RNTester:  - Builds without USE_FRAMEWORKS as before with/without prebuilt - Builds with USE_FRAMEWORKS=dynamic as before with source - and now also with prebuilt code. - Same goes for the static variant.  Reviewed By: mdvacca  Differential Revision: D78012332  Pulled By: cipolleschi  fbshipit-source-id: ea942738ae52b9dceae48fb78a5026f04b7545b8",101,34,135
facebook/react-native,5ec4e74bc7bd97496ebb97ea6dbaaba02e5703e0,Fabrizio Cucci,2025-07-10T08:35:25Z,Add changelog entry for 0.78.3 (#52518)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52518  As per title.  Changelog: [Internal]  Reviewed By: christophpurrer  Differential Revision: D78024356  fbshipit-source-id: e006edd4d86839c7d8635de7c68d333530d0a91d,29,0,29
facebook/react-native,e40c10b9f61d304e294f33a583cf1cbe864552a7,Luna Wei,2025-07-10T04:12:45Z,"Introduce experimental VirtualView (#52519)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52519  Changelog: [Internal] - Experiment with intersection logic for VirtualViews in scrollView. Currently only on Android  ### Changes in detail `VirtualViewContainer` is held by the ScrollView and is lazily instantiated once a VirtualView tries to access.  Upon initial layout, a VirtualView will add itself to the container and report its updated `rect`. `VirtualViewContainer` holds a sorted list of VirtualViews and iterates through them to update mode  Reviewed By: yungsters  Differential Revision: D77313890  fbshipit-source-id: 30843143bf1828dcac9091479964e83934bf330c",1149,18,1167
facebook/react-native,aa5b8551ce482090b9ec0c1bca918277d3a82770,generatedunixname89002005287564,2025-07-10T03:43:05Z,Fix CQS signal modernize-use-using in xplat/js/react-native-github/packages/react-native/React/Fabric (#52523)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52523  Reviewed By: dtolnay  Differential Revision: D77993027  fbshipit-source-id: 2cf11338360613206a91a9acbeabbfa45934b98f,2,2,4
facebook/react-native,57c5eee51f627a06c25476df705e27c2e86d58a0,Eric Rozell,2025-07-10T03:15:57Z,"Delete animatedShouldSignalBatch feature flag (#52521)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52521  Progress is moving quickly on the cxxNativeAnimatedEnabled flag, which this animatedShouldSignalBatch was intended to de-risk. We no longer need this flag to de-risk issues with animated batch flushing.  ## Changelog  [Internal]  Reviewed By: christophpurrer  Differential Revision: D78005971  fbshipit-source-id: 719f1dfb0594fbe90dd6f08dea21ad20665832df",90,227,317
facebook/react-native,586f5ba89cc20a81a9e2d5d0f2708e9cd1b440c0,Vineeth K,2025-07-10T01:33:59Z,"Added fix to use accessibility source props (#52397)  Summary: accessibilityRole is not getting the default value from sourceProps.  This change will fix https://github.com/facebook/react-native/issues/52396  ## Changelog:  <!-- Help reviewers and the release process by writing your own changelog entry.  Fixed accessibilityRole parsing. Pick one each for the category and type tags:  [GENERAL] [FIXED] - Added fix for setting the default value for accessibility props  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests  Pull Request resolved: https://github.com/facebook/react-native/pull/52397  Test Plan: After this change accessibilityRole will get the default value from sourceProps.  Reviewed By: joevilches  Differential Revision: D77879025  Pulled By: NickGerleman  fbshipit-source-id: c2fd10dd34462e2cd01488b720ba91e4f1998000",5,1,6
facebook/react-native,384bd214ffc2eb11a90d31bf4a211adb2615b76b,Joe Vilches,2025-07-10T01:10:56Z,"Back out ""Implement accessibilityOrder by building the accessibilityTree through addChildrenForAccessibility"" (#52516)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52516  Original commit changeset: 767ebc880a2e  Original Phabricator Diff: D77258926  Changelog: [Internal]  Reviewed By: javache  Differential Revision: D78016839  fbshipit-source-id: 4f71764d5885c227b92840fc9191d0f3b86f6278",63,224,287
facebook/react-native,d18f1f7ca3a0352d2a38843ed387d0b1f0f6a42a,Jack Pope,2025-07-09T23:03:25Z,Enable Fragment Refs for intersection observers on Fabric (#52474)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52474  1. Enables the feature flags for fragment refs on fbsource 2. Adds a test with Fantom for usage of `FragmentInstance#observeUsing` and `FragmentInstance#unobserveUsing`. 3. Exposes the `ReactFragmentInstance` type with the common methods that are used on native. We can override the DOM only methods in www libdefs.  Changelog: [Internal]  Reviewed By: rubennorte  Differential Revision: D74326262  fbshipit-source-id: e35ee45b23179ad3ba5527763567c9b04c127eff,85,2,87
facebook/react-native,23f3bf9239a849590f1c72b25732d0090780128c,Riccardo Cipolleschi,2025-07-09T17:14:41Z,"Add the `ENTERPRISE_REPOSITORY` env var to let user consume artifacts from their personal maven mirror (#52514)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52514  As per title, this change add the `ENTERPRISE_REPOSITORY` env variable so that users can use their owm maven mirror to consume artifacts rather than the official url.  This is helpful as: - we can reduce the traffic toward maven central - companies can speed up their builds by relying on local/closer replicas  ## Changelog: [iOS][Added] - Add the `ENTERPRISE_REPOSITORY` env variable to cocopaods infra  Reviewed By: cortinico  Differential Revision: D78011424  fbshipit-source-id: 24b83b4866095d7fe3318362afc5075b99b146e7",26,5,31
facebook/react-native,dfce5c7180d98c9c0e6e5e3f31efc6eeb7e8e9f6,Ruslan Lesiutin,2025-07-09T16:26:47Z,"console.timeStamp: support warning color (#52511)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52511  # Changelog: [Internal]  This is actually used in React for logging triggers, like Mount / Unmount / Reconnect / Disconnect.  Reviewed By: huntie  Differential Revision: D78008351  fbshipit-source-id: 9d39d45da499ce78172531c00cc7465b985c2646",7,0,7
facebook/react-native,52815c272470a814d62b96b972e7f51f4a34cab3,Christoph Purrer,2025-07-09T15:40:25Z,Improve NativeDOM Turbo Module typing (#52494)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52494  Changelog: [Internal]  - Use C++ private namespace instead of C static methods - Strongly type C++ TM functions via AsyncCallback  Reviewed By: javache  Differential Revision: D77978354  fbshipit-source-id: 2274b95cfc5b65392fc3c808bbdf54ec4ab3a37e,35,37,72
facebook/react-native,732bd12dc21460641ef01b23f2eb722f26b060d5,Alex Hunt,2025-07-09T15:26:19Z,"Add optional safeAreaInsets prop to NewAppScreen (replacing SafeAreaView) (#52507)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52507  Resolves https://github.com/reactwg/react-native-releases/issues/1011.  Changelog: [General][Changed] - `NewAppScreen` no longer internally handles device safe area, use optional `safeAreaInsets` prop (aligned in 0.81 template)  Reviewed By: cortinico  Differential Revision: D78006238  fbshipit-source-id: 01fb16d6754b69a722ea11838d558bebd4748026",25,12,37
facebook/react-native,bfc841d71dbb8af69af874feb3b05d6c0eebeed6,Riccardo Cipolleschi,2025-07-09T15:12:58Z,"Change polling to try and download the pom manifest (#52512)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52512  The way Maven works is that the artifacts are uploaded and available way before the browsing UI will allow us to browse them.  By trying to download the `.pom` file instead of checking for the browsing website to be visible, we can shave some minutes during the release  ## Changelog: [Internal] -  Reviewed By: cortinico  Differential Revision: D78008635  fbshipit-source-id: 96516163628d6d25db385d996a11b4af78db764a",6,5,11
facebook/react-native,6ed02797006b6556d6b656054b0608b09d204091,Riccardo Cipolleschi,2025-07-09T15:12:58Z,"Fix bump-podfile-lock job by using Xcode 16.2 (#52513)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52513  We bumped the requirement for cocoapods to use Xcode 16.1 or greater. This job was not update and therefore it failed when releasing 0.81.0-rc.0.  This change should fix it and it should be cherry picked in the release branch too. By default, the macos executor in github actions are using Xcode 15.2  ## Changelog [Internal] -  Reviewed By: cortinico, fabriziocucci  Differential Revision: D78008316  fbshipit-source-id: 4d05233ca3b936cf128400030328124c453963ea",4,0,4
facebook/react-native,5e214f0dc88d32ff105e90bccca6d95972b56f15,Riccardo Cipolleschi,2025-07-09T15:12:58Z,"Read the React Native version from the react-native's package.json (#52509)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52509  When building the CI Workflow to build React Native prebuilds, we were reading the react-native's version from the root package.json. This package.json is not updated by the release script, so the version is always 1000. This makes the build process fail for stable releases.  With this change, we read the version from the right package.json file  ## Changelog: [Internal] - Read React Native version from the right package.json file  Reviewed By: cortinico  Differential Revision: D78007906  fbshipit-source-id: 35f868a1c203245fdcf518ee81957352e3ab1de7",1,1,2
facebook/react-native,f37e983255b0fb66719d27d053971f18f6678753,Riccardo Cipolleschi,2025-07-09T15:12:58Z,"Back out ""Add more logging around computeNightlyTarballURL"" (#52510)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52510  We reverted this change in the 0.81 release branch  ## Changelog: [Internal] -  Reviewed By: cortinico  Differential Revision: D78007905  fbshipit-source-id: fec3df04423300571f629da19bf95cd82c952f12",0,13,13
facebook/react-native,daf6ebd7b5386921748fd2f1e4c4a80216edc40a,Samuel Susla,2025-07-09T14:19:30Z,"fix race condition in C++ Animated (#52505)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52505  changelog: [internal]  there is a race condition where `startRenderCallbackIfNeeded` may be called from JS thread and the main thread at the same time, leading to a crash. To address this, this diff adds uses a boolean to make sure `startOnRenderCallback_` is only called once and `stopOnRenderCallback_` is only called after start was called.  Reviewed By: javache  Differential Revision: D77871230  fbshipit-source-id: 6d7fba596e7146adaff6f8dbe1f436ddd59950c6",26,2,28
facebook/react-native,f578038cb2984679244795b9afb89a7b3d8762bd,Rubén Norte,2025-07-09T12:59:27Z,Add test to show Fabric bug with intermediate states in JS and sync updates in UI (#52502)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52502  Changelog: [internal]  This is just a test to show the bug reported in https://github.com/facebook/react-native/issues/52373  Reviewed By: javache  Differential Revision: D78000010  fbshipit-source-id: 5f53a02eb875255f5e384a748057997491518adc,123,0,123
facebook/react-native,2ca88a0069969bf115da6f0ea9f2fbbae9c9226c,Anupriya Verma,2025-07-09T12:05:52Z,"'return': conversion from 'int' to 'uint8_t', possible loss of data in CSSHexColor (#52496)  Summary: Resolves https://github.com/microsoft/react-native-windows/issues/14666 We faced this issue while integrating [0.79.0-nightly-20250220-41b597c73](https://github.com/microsoft/react-native-windows/pull/14662/files#top)  This warning is treated as error and should be fixed here as well.  ## Changelog:  <!-- Help reviewers and the release process by writing your own changelog entry.  Pick one each for the category and type tags:  [GENERAL] [FIXED] - Message  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests  Pull Request resolved: https://github.com/facebook/react-native/pull/52496  Test Plan: Fixed error: ##[error]node_modules\react-native\ReactCommon\react\renderer\css\CSSHexColor.h(39,12): Error C4244: 'return': conversion from 'int' to 'uint8_t', possible loss of data 2>D:\a_work\1\s\node_modules\react-native\ReactCommon\react\renderer\css\CSSHexColor.h(39,12): error C4244: 'return': conversion from 'int' to 'uint8_t', possible loss of data [D:\a_work\1\s\vnext\Microsoft.ReactNative\Microsoft.ReactNative.vcxproj] (compiling source file '../../node_modules/react-native/ReactCommon/react/renderer/components/view/BaseViewProps.cpp')  Tested E2E in RNW  Reviewed By: javache  Differential Revision: D78000818  Pulled By: rshest  fbshipit-source-id: 5caafc5e92540f722b009480f030276e526355af",2,2,4
facebook/react-native,47957f9adcb4ee5f745ba6369fef2bf801d8759c,generatedunixname89002005287564,2025-07-09T11:56:35Z,60 (#52493)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52493  Reviewed By: dtolnay  Differential Revision: D77920274  fbshipit-source-id: 42a68d5666f43f606ebcbbe4d207bb9b299760e7,1,1,2
facebook/react-native,9c172fbba346e391ae2646fece1e6288fe326558,Nicola Corti,2025-07-09T11:50:29Z,Add more logging around computeNightlyTarballURL  Summary: This is a backport of a fix we applied to the 0.81 branch.  Changelog: [Internal] [Changed] -  bypass-github-export-checks  Reviewed By: vzaidman  Differential Revision: D78000573  fbshipit-source-id: 64a4e90632158c1f52c45f9fbc3452e848271e94,13,0,13
facebook/react-native,7725a0aee35ca3f4ac1932fae970d1f13f70c881,generatedunixname89002005287564,2025-07-09T10:03:48Z,"Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/rn-tester/android/app/src/main/jni (#52501)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52501  Reviewed By: javache, cortinico  Differential Revision: D77990137  fbshipit-source-id: 1fe4b7a0a821cf9bff5b21d38b6e78a3b164211d",2,4,6
facebook/react-native,b5329ecd6df75ff98c64a9440694fbbaa3d97be4,Christoph Purrer,2025-07-09T04:10:36Z,"NativeCxxModuleExample test for testing C++ TM E2E (#52477)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52477  Changelog: [Internal]  This adds a Fantom test for  https://github.com/facebook/react-native/blob/main/packages/rn-tester/NativeCxxModuleExample/NativeCxxModuleExample.js  to test a C++ Turbo Module End 2 End (loading the C++ implementation in native code, accessing in JavaScript via Hermes VM and verifying the results of the API calls)  Reviewed By: rshest  Differential Revision: D77848654  fbshipit-source-id: 48a4ab88a330e9282ae8dab589743eaace62d124",379,7,386
facebook/react-native,6892dde36373bbef2d0afe535ae818b1a7164f08,Nicola Corti,2025-07-08T23:33:18Z,Gradle to 8.14.3 (#52466)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52466  Just another patch bump of Gradle 8.14  Changelog: [Android] [Changed] - Gradle to 8.14.3  Reviewed By: NickGerleman  Differential Revision: D77865220  fbshipit-source-id: 450d175242f046909ab1984654d24e92a2536d5d,3,3,6
facebook/react-native,eb61e6f7836aeff1b43df728e5a22a2ecda102bb,Adan Moreno,2025-07-08T23:29:45Z,Revert D77143018: Cleanup react-native-codegen DEFS  Differential Revision: D77143018  Original commit changeset: 06ec43ce5149  Original Phabricator Diff: D77143018  fbshipit-source-id: cec53068f88548c4494da315914763beb6730573,244,244,488
facebook/react-native,df6ba3f1555607c379e33b5201ad4551cc82638b,Marco Wang,2025-07-08T19:50:53Z,Pre-suppress errors for boolean literals for xplat js (#52482)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52482  Changelog: [Internal]  Reviewed By: panagosg7  Differential Revision: D77915593  fbshipit-source-id: 9238b89e92410cea350c6057044167727de3601a,64,0,64
facebook/react-native,5baf1e6d00a3ca0edb9a95e543fbdedc47ece3d6,Fabrizio Cucci,2025-07-08T16:24:15Z,"Fix all workflows to use node 22.14.0 (#52491)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52491  We hit this error when trying to release 0.81.0 (see [action run](https://github.com/facebook/react-native/actions/runs/16147471618/job/45570030039)):  > error react-native/metro-babel-transformer@0.81.0-main: The engine ""node"" is incompatible with this module. Expected version "">= 22.14.0"". Got ""20.19.2""  This should fix the issue.  Changelog: [Internal]  Reviewed By: motiz88, cortinico  Differential Revision: D77938906  fbshipit-source-id: 48ca412f05d99459c4386499330584d9e560408b",3,1,4
facebook/react-native,fc5e33b582c6bfe935eccdedbb335aa086a40bb1,Alex Hunt,2025-07-08T13:10:36Z,Reorganise shared script utils (#52473)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52473  Shared utils that were located in the root of `scripts/` are now colocated closer to their dependencies or moved to `scripts/shared/` — simplifying the root directory layout.  Changelog: [Internal]  Reviewed By: robhogan  Differential Revision: D77873875  fbshipit-source-id: e04dba41a1ef811d32793931033fdfa93afad0cd,141,153,294
facebook/react-native,6dfe59e1df983f8225bb0b711d86f368525015a0,Pieter De Baets,2025-07-08T12:58:56Z,"Fix missing bundle errors not correctly reported on Android (#52441)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52441  When an error is thrown using `handleHostException` from within the (immediate) execution of a `Task`, the `Task` will capture the error. If those errors are never consumed, the error is just silently swallowed. Instead we should make sure that this is raised outside of the context of a `Task` so the error correctly bubbles up and crashes the app (in release).  Changelog: [Internal]  Reviewed By: rshest  Differential Revision: D77798248  fbshipit-source-id: 41803aba0cace0e364a235501cf34bb946e7ff51",8,11,19
facebook/react-native,db65cb70de9a1e9d16589c51b5ad3da46594bc2b,Moti Zilberman,2025-07-08T12:48:00Z,Fix typo in new app screen  Summary: TSIA  bypass-github-export-checks  Changelog: [Internal]  Reviewed By: vzaidman  Differential Revision: D77928389  fbshipit-source-id: 038d11bed3fbbb96c97b7e2c5727e91973de9078,1,1,2
facebook/react-native,a0e11904d6f870ad22c4a8626d128355c0aa4ffc,Mateo Guzmán,2025-07-08T12:31:11Z,Clean up unnecessary test setup for Android tests (#52471)  Summary: This came out of https://github.com/facebook/react-native/issues/52457 as I had to fix some tests and realised there is a lot of setup that could be shadow and other things that are not needed at all.  ## Changelog:  [INTERNAL] - Clean up unnecessary test setup for Android tests  Pull Request resolved: https://github.com/facebook/react-native/pull/52471  Test Plan: ```sh yarn test-android ```  Reviewed By: cortinico  Differential Revision: D77926887  Pulled By: javache  fbshipit-source-id: ff493d87633fcb4c4194b50cd374ad2e8acda974,41,166,207
facebook/react-native,120a417320dbd2628a8d1e39fc32e255717b6934,Pieter De Baets,2025-07-08T11:53:51Z,Cleanup react-native-codegen DEFS (#52468)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52468  * Re-enable tests * Simplify logic to avoid bypasses for arc focus  Changelog: [Internal]  Reviewed By: philIip  Differential Revision: D77143018  fbshipit-source-id: 06ec43ce5149a139db78d38630191b01bc520461,244,244,488
facebook/react-native,5a79ece1924661729cc144226377d694eeca6bcc,Rubén Norte,2025-07-08T11:40:49Z,"Use structuredClone to copy detail field in performance.mark and performance.measure (#52483)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52483  Changelog: [internal]  This is a small refinement for `performance.mark` and `performance.measure` to use `structuredClone` to copy the value of the `detail` field, instead of assigning it by reference.  This still doesn't completely fix the semantics of `performance.mark` and `performance.measure`, as the entries returned by those methods aren't referentially equal to the entries reported by `PerformanceObserver` (and the latter don't have the `detail` field yet).  Reviewed By: huntie  Differential Revision: D77863037  fbshipit-source-id: 54d959612ecd560250e49bb0887bb12112a0142f",21,12,33
facebook/react-native,f000116197933c852b71d30e3969c078e35f10fe,Ruslan Lesiutin,2025-07-08T11:34:14Z,Fix Timestamps conversion for Custom Tracks (#52479)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52479  # Changelog: [Internal]  The previous cast is incorrect.  Reviewed By: javache  Differential Revision: D77894512  fbshipit-source-id: 67e6b9a4ed43020a343a2a9b5d702509c34ae41a,1,3,4
facebook/react-native,5cf4d0899f53c96c29a53381a6788c9961ae82ef,Vitali Zaidman,2025-07-08T11:15:32Z,"Update debugger-frontend from 51a91a2...844f225 (#52486)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52486  Changelog: [Internal] - Update `react-native/debugger-frontend` from 51a91a2...844f225  Resyncs `react-native/debugger-frontend` from GitHub - see `rn-chrome-devtools-frontend` [changelog](https://github.com/facebook/react-native-devtools-frontend/compare/51a91a2ad62e7f585912ed314a350a72de84d6ed...844f225009e6445d088ed0e431d1fc430325ed95).  ### Changelog  | Commit | Author | Date/Time | Subject | | ------ | ------ | --------- | ------- | | [844f22500](https://github.com/facebook/react-native-devtools-frontend/commit/844f22500) | Vitali Zaidman (vzaidman@gmail.com) | 2025-07-08T10:16:09+01:00 | [Track when the stack trace symbolication succeeds (#187)](https://github.com/facebook/react-native-devtools-frontend/commit/844f22500) | | [ffa6bb6af](https://github.com/facebook/react-native-devtools-frontend/commit/ffa6bb6af) | Vitali Zaidman (vzaidman@gmail.com) | 2025-07-07T16:21:55+01:00 | [parse ""empty url"" and ""address at"" frames as non-hyperlinked text (#188)](https://github.com/facebook/react-native-devtools-frontend/commit/ffa6bb6af) |  Reviewed By: robhogan  Differential Revision: D77926362  fbshipit-source-id: cbcf8b17cd175400d3d027ce2e8ebefa497f5d79",4,4,8
facebook/react-native,68650badd26c4a421814e3d1eee8f882aea50938,Marco Wang,2025-07-08T03:35:08Z,Pre-suppress errors for null_void for xplat js (#52480)  Summary: Changelog: [Internal]  Pull Request resolved: https://github.com/facebook/react-native/pull/52480  Reviewed By: SamChou19815  Differential Revision: D77890434  fbshipit-source-id: cc0571e0ff1c7cec3fff8614f688d46e46970cc4,9,1,10
facebook/react-native,5ec8e60581093f6e55f0d9e0a79f6097b5722913,Luna Wei,2025-07-07T23:00:13Z,Refactor VirtualView target structure on Android (#52476)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52476  Changelog: [Internal] - Refactor package structure on Android to prepare for experimental VirtualView so that non-view related objects go under `virtual` and the native view goes under `view`. This breaks dependency circles for experimental VirtualView in upcoming change.  Reviewed By: yungsters  Differential Revision: D77335426  fbshipit-source-id: 3b978e9cc5ad376c71aebc039cfc74d2515d2cfa,13,6,19
facebook/react-native,918f02dcc3931a0b2931b4c84e9f291b2226c84a,Alex Hunt,2025-07-07T22:04:37Z,"Consolidate JS API scripts under scripts/js-api/, update docs (#52469)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52469  Organise `scripts/build-types/` and `scripts/diff-api-snapshot/` into a single grouping `scripts/js-api/` parent dir — matching the newly relocated `scripts/cxx-api/`.  Changelog: [Internal]  Reviewed By: robhogan  Differential Revision: D77865488  fbshipit-source-id: 33754d9275e65c3bda686294f18d855221ec7bff",44,25,69
facebook/react-native,5fe782a800ac7a17230364df0cad78050c097bb9,Alex Hunt,2025-07-07T22:04:37Z,"Move cxx-api scripts under scripts/, add README (#52467)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52467  Moves the WIP `cxx-public-api` project under `scripts/cxx-api/`, add minimal README docs.  Changelog: [Internal]  Reviewed By: christophpurrer  Differential Revision: D77865490  fbshipit-source-id: ce49845386c468ee7422b864c49f2a8c9eed5a70",33,28,61
facebook/react-native,abfb9cbd409845bc8ec06d68c4a3d267da956526,Christoph Purrer,2025-07-07T21:50:58Z,Update outdated ReactNativeCPP.api (#52475)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52475  Changelog: [Internal]  Reviewed By: philIip  Differential Revision: D77887914  fbshipit-source-id: 1431205eff716bac86610750103df729553d22b9,1076,289,1365
facebook/react-native,3bf5cb3d0e7d9d1749ef19a8392b9bbd3ec7ab7d,Pieter De Baets,2025-07-07T18:29:01Z,Deprecate MessageQueueThreadPerfStats (#52470)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52470  These metrics are not actively consumed and are highly noisy.  Changelog: [Android][Removed] Deprecated MessageQueueThreadPerfStats API and replaced with stub.  Reviewed By: cortinico  Differential Revision: D77867087  fbshipit-source-id: 8bf7423ad60cb3bb21a5dbe94771d5a71832633d,17,45,62
facebook/react-native,ead669ade31ee703c407f96c0ce98d8f2991bdc8,Christoph Purrer,2025-07-07T18:04:01Z,Remove unused ReactCommon/TurboModuleUtils functions #deepCopyJSIObject and #deepCopyJSIArray (#52443)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52443  Changelog: [General][Breaking] Remove unused ReactCommon/TurboModuleUtils functions #deepCopyJSIObject and #deepCopyJSIArray  Those are not used anymore  Reviewed By: cortinico  Differential Revision: D77771186  fbshipit-source-id: e1f5e34238567241b4204d58ff85fd9067e321df,3,60,63
facebook/react-native,625f69f284ddfd9c6beecaa4052a871d092053ef,Nicola Corti,2025-07-07T17:20:43Z,"@DeprecatedInNewArchitecture -> @Deprecated (#52399)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52399  I'm raising the deprecation warnings for those methods that are using legacy arch. Previously the `DeprecatedInNewArchitecture` was not generating warnings for user in their builds, while now the Kotlin's/Java's `DeprecatedInNewArchitecture` it will.  Changelog: [Android] [Changed] - Introduce more deprecation warnings for Legacy Arch classes  Reviewed By: mdvacca  Differential Revision: D77736713  fbshipit-source-id: bc21729ed8253d3ec6b6a40577bcd76622c3f8a6",125,77,202
facebook/react-native,06034554e41fba16f3ed665fe5fbc6de33a3e4dc,Christoph Purrer,2025-07-07T16:37:37Z,Remove SampleTurboCxxModule example (#52442)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52442  Changelog: [Internal]  The sample is from an outdated approach of enabling C++ Modules in RN which is not recommended anymore.  Prefer C++ Turbo Modules if you need to expose / access C or C++ APIs in RN apps:  https://reactnative.dev/docs/the-new-architecture/pure-cxx-modules  It is not included in any RNTester app at this time  Reviewed By: cortinico  Differential Revision: D77771111  fbshipit-source-id: a4fe1d13fd0224babc46f54b921a036f7b237a48,2,337,339
facebook/react-native,298ec6ca5de1a14cd70152364ecead5c8fcb04a5,Samuel Susla,2025-07-07T16:29:57Z,Deprecate ShadowNode::ListOfWeak and replace with std::vector<std::weak_ptr<const ShadowNode>> (#52401)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52401  changelog: [internal]  - Mark ShadowNode::ListOfWeak as deprecated with appropriate deprecation message - Replace all usages of ShadowNode::ListOfWeak with std::vector<std::weak_ptr<const ShadowNode>> - Updated primitives.h and ReactNativeCPP.api to use the explicit type instead of the alias  This change continues the effort to remove type aliases in favor of explicit standard library types for better code clarity and maintainability.  Reviewed By: christophpurrer  Differential Revision: D77652083  fbshipit-source-id: 79cad019e039c19f661346604ff49a44a4af7a79,9,4,13
facebook/react-native,c1200718a01e61a5c699039c6325a2fee5f42c60,Christoph Purrer,2025-07-07T15:59:56Z,Move RuntimeExecutor after copying it into BufferedRuntimeExecutor (#52404)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52404  Changelog: [Internal]  https://github.com/facebook/react-native/blob/main/packages/react-native/ReactCommon/runtimeexecutor/ReactCommon/RuntimeExecutor.h#L23  is a copy-able type (it will be copied when passed into the BufferedRuntimeExecutor constructor).  Hence we can `std::move` it in the `BufferedRuntimeExecutor` constructor  Reviewed By: javache  Differential Revision: D77758211  fbshipit-source-id: 634b1cd0e1ed4d27a013ad8927b2123dc6977ad8,2,4,6
facebook/react-native,a3933e687828eeda5b2faac1f24962c95adf4a37,Rubén Norte,2025-07-07T13:42:23Z,"Remove legacy tests for Performance API (#52465)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52465  Changelog: [internal]  Now that we have enough coverage for the Performance API in Fantom, Jest tests where most of the API is mocked are redundant and useless, so this removes them (and the mock).  Reviewed By: huntie  Differential Revision: D77860888  fbshipit-source-id: 7dbd1a8a43b056a3b34e4e37d578be9ccb521824",0,619,619
facebook/react-native,9f8179afa7c6d8ca98ea4cb871bde047e4fc5331,Rubén Norte,2025-07-07T13:42:23Z,Add tests for durationThreshold option for PerformanceObserver (#52464)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52464  Changelog: [internal]  This adds tests for the `durationThreshold` option for `PerformanceObserver.prototype.observe`.  Reviewed By: huntie  Differential Revision: D77860882  fbshipit-source-id: 1e56391166523d2c4f837f758bc367b58fe8e82e,61,0,61
facebook/react-native,e6bff3f1fec7db9dbffa454948b994be27ec0db5,Rubén Norte,2025-07-07T13:42:23Z,Add tests for performance.eventCounts (#52463)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52463  Changelog: [internal]  This adds Fantom tests for `performance.eventCounts`.  Reviewed By: huntie  Differential Revision: D77860881  fbshipit-source-id: 26b9ef56b9c610cbad7011bc0adde27251fda909,73,0,73
facebook/react-native,feeef975549f456a9aceabf94aa707908a39e1b2,Rubén Norte,2025-07-07T13:42:23Z,"Expand tests for the performance API (#52462)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52462  Changelog: [internal]  This adds a few more tests for `performance.getEntries`, `performance.getEntriesByName` and `performance.getEntriesByType`.  Reviewed By: huntie  Differential Revision: D77801746  fbshipit-source-id: 42f80c4e2b787c455b149ee38d071511181532b0",315,0,315
facebook/react-native,9005d93e3225fc0dbaaae93a299d0edf6c628d8a,Rubén Norte,2025-07-07T13:42:23Z,"Optimize performance.mark and performance.measure (#52429)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52429  Changelog: [internal]  This implements a significant optimization for `performance.mark` and `performance.measure`. After these changes, they take 1/3 of the time they took before.  We've seen these methods show up too often in traces (in the Hermes sampling profiler) so this should significantly reduce their overhead.  I found out that most of the time spent in `performance.mark` and `performance.measure` was creating the `PerformanceMark` and `PerformanceMeasure` instances returned by those methods. I applied the same playbook I did for `ReactNativeElement` (avoiding private fields and `super()` calls, which yielded these wins.  * Before  | (index) | Task name                                                 | Latency average (ns) | Latency median (ns) | Throughput average (ops/s) | Throughput median (ops/s) | Samples | | ------- | --------------------------------------------------------- | -------------------- | ------------------- | -------------------------- | ------------------------- | ------- | | 0       | 'mark (default)'                                          | '5579.80 ± 0.32%'    | '5479.00'           | '181368 ± 0.02%'           | '182515'                  | 179218  | | 1       | 'mark (with custom startTime)'                            | '5759.72 ± 0.99%'    | '5648.00'           | '176162 ± 0.02%'           | '177054'                  | 173620  | | 2       | 'measure (with start and end timestamps)'                 | '6506.38 ± 0.34%'    | '6390.00'           | '155503 ± 0.02%'           | '156495'                  | 153696  | | 3       | 'measure (with mark names)'                               | '6770.94 ± 0.72%'    | '6620.00'           | '149833 ± 0.03%'           | '151057'                  | 147691  | | 4       | 'clearMarks'                                              | '785.89 ± 0.07%'     | '771.00'            | '1291356 ± 0.01%'          | '1297017'                 | 1272442 | | 5       | 'clearMeasures'                                           | '777.98 ± 0.06%'     | '761.00'            | '1303362 ± 0.01%'          | '1314060'                 | 1285383 | | 6       | 'mark + clearMarks'                                       | '5995.34 ± 1.37%'    | '5779.00'           | '171874 ± 0.03%'           | '173040'                  | 166797  | | 7       | 'measure + clearMeasures (with start and end timestamps)' | '7040.28 ± 0.57%'    | '6830.00'           | '145289 ± 0.03%'           | '146413'                  | 142040  | | 8       | 'measure + clearMeasures (with mark names)'               | '7184.43 ± 0.40%'    | '6990.00'           | '141809 ± 0.03%'           | '143062'                  | 139190  |  * After  | (index) | Task name                                                 | Latency average (ns) | Latency median (ns) | Throughput average (ops/s) | Throughput median (ops/s) | Samples | | ------- | --------------------------------------------------------- | -------------------- | ------------------- | -------------------------- | ------------------------- | ------- | | 0       | 'mark (default)'                                          | '1678.19 ± 0.73%'    | '1633.00'           | '607139 ± 0.01%'           | '612370'                  | 595882  | | 1       | 'mark (with custom startTime)'                            | '1920.23 ± 1.30%'    | '1843.00'           | '538217 ± 0.01%'           | '542594'                  | 520772  | | 2       | 'measure (with start and end timestamps)'                 | '2651.72 ± 0.94%'    | '2554.00'           | '388312 ± 0.02%'           | '391543'                  | 377114  | | 3       | 'measure (with mark names)'                               | '2815.84 ± 0.75%'    | '2744.00'           | '362303 ± 0.02%'           | '364431'                  | 355134  | | 4       | 'clearMarks'                                              | '743.82 ± 0.06%'     | '731.00'            | '1363190 ± 0.01%'          | '1367989'                 | 1344417 | | 5       | 'clearMeasures'                                           | '776.69 ± 0.07%'     | '761.00'            | '1306563 ± 0.01%'          | '1314060'                 | 1287512 | | 6       | 'mark + clearMarks'                                       | '2043.97 ± 1.26%'    | '1973.00'           | '504750 ± 0.01%'           | '506842'                  | 489801  | | 7       | 'measure + clearMeasures (with start and end timestamps)' | '3048.39 ± 0.87%'    | '2965.00'           | '335285 ± 0.02%'           | '337268'                  | 328042  | | 8       | 'measure + clearMeasures (with mark names)'               | '3132.75 ± 0.80%'    | '3065.00'           | '324365 ± 0.02%'           | '326264'                  | 319209  |  Reviewed By: huntie  Differential Revision: D77790874  fbshipit-source-id: baf7aca07d281fef4373956d125c63f006fab592",80,24,104
facebook/react-native,74c03b67e397f75d3bff32162756de5c90a50d65,Rubén Norte,2025-07-07T13:42:23Z,Fix bugs in performance.mark and performance.measure (#52430)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52430  Changelog: [internal]  (This is marked as internal because this API hasn't been marked as stable yet).  This fixes multiple bugs and missing features in `performance.mark` and `performance.measure`. See re-enabled tests to see the specific behaviors.  Validated that performance isn't regressed by this change using the existing benchmark for `Performance` (`Performance-benchmark-itest`):  * Before  | (index) | Task name                                                 | Latency average (ns) | Latency median (ns) | Throughput average (ops/s) | Throughput median (ops/s) | Samples | | ------- | --------------------------------------------------------- | -------------------- | ------------------- | -------------------------- | ------------------------- | ------- | | 0       | 'mark (default)'                                          | '5557.96 ± 0.34%'    | '5459.00'           | '182114 ± 0.02%'           | '183184'                  | 179922  | | 1       | 'mark (with custom startTime)'                            | '5664.54 ± 1.71%'    | '5518.00'           | '180296 ± 0.02%'           | '181225'                  | 176537  | | 2       | 'measure (with start and end timestamps)'                 | '6653.62 ± 0.94%'    | '6530.00'           | '152296 ± 0.02%'           | '153139'                  | 150295  | | 3       | 'measure (with mark names)'                               | '6903.37 ± 0.42%'    | '6790.00'           | '146429 ± 0.02%'           | '147275'                  | 144857  | | 4       | 'clearMarks'                                              | '782.98 ± 0.04%'     | '771.00'            | '1287735 ± 0.01%'          | '1297017'                 | 1277173 | | 5       | 'clearMeasures'                                           | '792.24 ± 0.03%'     | '781.00'            | '1270847 ± 0.01%'          | '1280410'                 | 1262238 | | 6       | 'mark + clearMarks'                                       | '5883.69 ± 0.52%'    | '5759.00'           | '172863 ± 0.02%'           | '173641'                  | 169962  | | 7       | 'measure + clearMeasures (with start and end timestamps)' | '7222.22 ± 0.68%'    | '7021.00'           | '141204 ± 0.02%'           | '142430'                  | 138462  | | 8       | 'measure + clearMeasures (with mark names)'               | '7234.53 ± 0.34%'    | '7121.00'           | '139600 ± 0.02%'           | '140430'                  | 138227  |  * After  | (index) | Task name                                                 | Latency average (ns) | Latency median (ns) | Throughput average (ops/s) | Throughput median (ops/s) | Samples | | ------- | --------------------------------------------------------- | -------------------- | ------------------- | -------------------------- | ------------------------- | ------- | | 0       | 'mark (default)'                                          | '5579.80 ± 0.32%'    | '5479.00'           | '181368 ± 0.02%'           | '182515'                  | 179218  | | 1       | 'mark (with custom startTime)'                            | '5759.72 ± 0.99%'    | '5648.00'           | '176162 ± 0.02%'           | '177054'                  | 173620  | | 2       | 'measure (with start and end timestamps)'                 | '6506.38 ± 0.34%'    | '6390.00'           | '155503 ± 0.02%'           | '156495'                  | 153696  | | 3       | 'measure (with mark names)'                               | '6770.94 ± 0.72%'    | '6620.00'           | '149833 ± 0.03%'           | '151057'                  | 147691  | | 4       | 'clearMarks'                                              | '785.89 ± 0.07%'     | '771.00'            | '1291356 ± 0.01%'          | '1297017'                 | 1272442 | | 5       | 'clearMeasures'                                           | '777.98 ± 0.06%'     | '761.00'            | '1303362 ± 0.01%'          | '1314060'                 | 1285383 | | 6       | 'mark + clearMarks'                                       | '5995.34 ± 1.37%'    | '5779.00'           | '171874 ± 0.03%'           | '173040'                  | 166797  | | 7       | 'measure + clearMeasures (with start and end timestamps)' | '7040.28 ± 0.57%'    | '6830.00'           | '145289 ± 0.03%'           | '146413'                  | 142040  | | 8       | 'measure + clearMeasures (with mark names)'               | '7184.43 ± 0.40%'    | '6990.00'           | '141809 ± 0.03%'           | '143062'                  | 139190  |  Reviewed By: huntie  Differential Revision: D77795990  fbshipit-source-id: 97895065ca63f87f1f66710cf7bce97e1255a142,235,77,312
facebook/react-native,34201d8387a6f126dd14aa849e988de6d044b2e6,Rubén Norte,2025-07-07T13:42:23Z,"Fix Flow types for performance.measure (#52431)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52431  Changelog: [internal]  `performance.measure` supports passing mark names as `start` and `end` options, so this fixes the Flow type before fixing the actual implementation.  It also makes it so you can't specify both `end` and `duration`, enforced by the type system.  Reviewed By: huntie  Differential Revision: D77795991  fbshipit-source-id: e89f509c7efc2fa49d17d79bc19bc1d14e007871",11,13,24
facebook/react-native,2edda6d967c10db6c2f7a6a7cd0f0b5717af6d0d,Rubén Norte,2025-07-07T13:42:23Z,"Add basic Fantom tests for performance.mark and performance.measure (#52432)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52432  Changelog: [internal]  This creates a battery of tests for `performance.mark` and `performance.measure`. For this, it was necessary to add a new method in the native module to mock the current time.  Many of the tests are currently failing, as the API doesn't support all the options or behaviors defined in the spec. They're skipped here and will be re-enabled and fixed in a following diff.  Reviewed By: huntie  Differential Revision: D77795989  fbshipit-source-id: 3ebf18c8ac336df1fb43003a55a4678b52e8982d",434,25,459
facebook/react-native,1c51d6684b50f21f769ea51a0613967c639f5106,Samuel Susla,2025-07-07T13:15:29Z,Deprecate ShadowNode::ListOfShared and migrate to std::vector<std::shared_ptr<const ShadowNode>> (#52402)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52402  changelog: [internal]  Mark ShadowNode::ListOfShared as deprecated and replace most usages throughout the React Native renderer codebase with the explicit std::vector<std::shared_ptr<const ShadowNode>> type. This improves code clarity by making the container type explicit rather than relying on a type alias.  Reviewed By: christophpurrer  Differential Revision: D77651676  fbshipit-source-id: 8c4bd9b8cbbe467384b947ef9e7a4524f2053e36,96,59,155
facebook/react-native,9d630985205f81c45a9b6025b990bf8f03887277,szymonrybczak,2025-07-07T12:17:07Z,chore: bump @react-native-community/cli* devDependencies to 20.0.0-alpha (#52460)  Summary: Upgrade `react-native-community/cli` to version 20.  ## Changelog:  [INTERNAL] [CHANGED] - Upgrade react-native-community/cli to v20  Pull Request resolved: https://github.com/facebook/react-native/pull/52460  Test Plan: n/a  Reviewed By: huntie  Differential Revision: D77860027  Pulled By: cortinico  fbshipit-source-id: 3eb3942b38091b4216628b94cdf1449838daa8d3,73,73,146
facebook/react-native,9d4d8dcb0264273cc1522ed6e9de47cdb05606f4,Alex Hunt,2025-07-07T12:08:57Z,Move BugReporting module out of open source repo (#52425)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52425  Changelog: [General][Breaking] - All `react-native/Libraries/BugReporting` APIs have been removed  Reviewed By: javache  Differential Revision: D77014767  fbshipit-source-id: a074fb952948a58259be66033e1f85e04bacf2de,0,512,512
facebook/react-native,caff37df5ab9420fa3e1580c93120eab8f00b4e1,Alex Hunt,2025-07-07T12:08:57Z,Remove internal calls to BugReporting (#52374)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52374  Precursor to removing `BugReporting` from React Native's internals.  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77014724  fbshipit-source-id: 91cd38fe6c39656573fecdeff18162073df2fb42,0,10,10
facebook/react-native,79989144718064955ad1af38152e08ca5f45a727,Christoph Purrer,2025-07-07T05:35:20Z,Remove outdated SampleTurboCxxModuleLegacyImpl (#52412)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52412  Changelog: [Internal]  The sample is from an outdated approach of enabling C++ Modules in RN which is not recommended anymore.  Prefer C++ Turbo Modules if you need to expose / access C or C++ APIs in RN apps:  https://reactnative.dev/docs/the-new-architecture/pure-cxx-modules  It is not included in any RNTester app at this time  Reviewed By: cortinico  Differential Revision: D77770455  fbshipit-source-id: 987c9f2b9ab4145a2f6a724aad12d8473957dbe8,0,272,272
facebook/react-native,94aca598c7dd14902f585513b05b5c884aea898b,Christoph Purrer,2025-07-07T04:21:48Z,"Remove unused #include <ReactCommon/TurboModuleUtils.h> (#52411)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52411  Changelog: [Internal]  Reviewed By: javache, cortinico  Differential Revision: D77770244  fbshipit-source-id: a300e377f8c6e52256ae04813c1372799cf5af59",0,2,2
facebook/react-native,5e650d0105b77bbc51404ce39087af5a4e1211b3,Christoph Purrer,2025-07-07T03:56:16Z,Remove more unused #includes (#52389)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52389  Changelog: [Internal]  Reviewed By: philIip  Differential Revision: D77706943  fbshipit-source-id: b8662737699ec0857845cfded49302ee9e93b78e,2,9,11
facebook/react-native,9d5033afb058e268ae54601a826d763f548bb9ea,Christoph Purrer,2025-07-07T02:54:06Z,Delete non C++ Turbo Module SampleCxxModule (#52407)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52407  Changelog: [Internal]  The sample is from an outdated approach of enabling C++ Modules in RN which is not recommended anymore.  Prefer C++ Turbo Modules if you need to expose / access C or C++ APIs in RN apps:  https://reactnative.dev/docs/the-new-architecture/pure-cxx-modules  Reviewed By: javache  Differential Revision: D77765443  fbshipit-source-id: 112fef4c1a7e1c567f3c1d471728a1dfc926adc6,1,263,264
facebook/react-native,e8709355dc91c54c6ecc3151596028d928302c04,Christoph Purrer,2025-07-07T02:53:51Z,C++ Turbo Module > Allow Promise<void> types (#52388)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52388  Changelog: [Internal]  Similar to `AsyncCallback<>` (the foundation of `AsyncPromise`) we should allow `void` Promise types in C++ such as `AsyncPromise<>`  Reviewed By: rbergerjr  Differential Revision: D77712020  fbshipit-source-id: d7360df5cc1b77f1e03e5fb73b0b468f6e3a415b,33,15,48
facebook/react-native,255977a7b92e732d7775d702c163a7746401d92c,generatedunixname89002005287564,2025-07-06T20:33:29Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/react/utils (#52444)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52444  Reviewed By: dtolnay  Differential Revision: D77782134  fbshipit-source-id: 99989d45926a0eabcc6e19e12dce396a473e14ce,2,4,6
facebook/react-native,8531015941298a29da640acc6bcb3e0e157a19ef,generatedunixname89002005287564,2025-07-06T20:30:04Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/react/nativemodule/core/ReactCommon [A] (#52437)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52437  Reviewed By: cortinico  Differential Revision: D77790078  fbshipit-source-id: 3188cce596ffa382ca3a9bd27cd0aba8580bbb76,2,4,6
facebook/react-native,4e62558e43d5c9f9608c41602eb1dfae2e0974bd,generatedunixname89002005287564,2025-07-06T19:32:42Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/react/nativemodule/core/ReactCommon [B] (#52434)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52434  Reviewed By: cortinico  Differential Revision: D77790202  fbshipit-source-id: 35b5bb46e8056cddf874b05bf511754878f0e1fc,2,4,6
facebook/react-native,5cdea3c295cf49ffb8770035a065e6a16e68c67d,Rob Hogan,2025-07-06T12:33:25Z,Remove last use of Metro deep imports (#52456)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52456  Remove the last use of a Metro deep import in preparation for making all deep imports semver-private.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77450110  fbshipit-source-id: de7aa9c1f6b0d281fe8a6c3bd95e721c5bb58c63,2,2,4
facebook/react-native,083644647eff502f484b3ba24f9d361d5df56546,Rob Hogan,2025-07-06T11:30:38Z,Update to Metro ^0.82.5 (#52454)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52454  Bump Metro minimum from 0.82.4 to 0.82.5  Release notes: https://github.com/facebook/metro/releases/tag/v0.82.5  Changelog: [General][Changed] Bump Metro to ^0.82.5  Reviewed By: huntie  Differential Revision: D77450102  fbshipit-source-id: 7b0fdcbeb63d8021996ca82f98773145179c8a50,110,129,239
facebook/react-native,987e3f8c0031affe89218675061eca3a4620e0cd,Alex Hunt,2025-07-05T16:07:22Z,"Make NetworkingModule handlers internal (#52438)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52438  Motivation: After some investigation, these make sense as private APIs, and we intend to modify `UriHandler` slightly in order to report blob response body payloads via CDP for Network debugging.  Changelog: [Android][Removed] - Internalize `NetworkingModule`'s `UriHandler`, `RequestBodyHandler`, and `ResponseHandler` APIs  Reviewed By: cortinico  Differential Revision: D77799144  fbshipit-source-id: 20c36f52a900830091a253ab9917832c30b31d31",9,30,39
facebook/react-native,27723c70b7716fd4edb50ead158d8c3860b322ce,Nick Lefever,2025-07-05T13:19:23Z,Clean up prop diffing gen (#52436)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52436  Reordered the different property types in the switch/case to group similar outputs together.  Changelog: [Internal]  Reviewed By: christophpurrer  Differential Revision: D77799101  fbshipit-source-id: 5b7c6d188e9ffa0f1e41f44f82f438afeda04d74,12,41,53
facebook/react-native,dcd430721f621b6232a993ff8adc01a1531b11b4,generatedunixname89002005287564,2025-07-04T23:20:30Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/reactperflogger/reactperflogger [A] (#52433)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52433  Reviewed By: cortinico  Differential Revision: D77789924  fbshipit-source-id: 017ab5456bf25f40cd4b283d0405498f6e1e2e00,2,4,6
facebook/react-native,22ccf8a6f5f160f6881c06dd9c858b1da0b41e38,generatedunixname89002005287564,2025-07-04T22:38:07Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/reactperflogger/reactperflogger [B] (#52435)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52435  Reviewed By: cortinico  Differential Revision: D77789998  fbshipit-source-id: 9ac93f890c9df245a105b71369dc91501deb78a4,2,6,8
facebook/react-native,c302902b1db7e8f8ac5b61472c095dc0755d6d1c,Ruslan Lesiutin,2025-07-04T21:26:08Z,upgrade[react-devtools]: 6.1.5 (#52440)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52440  # Changelog: [General] [Changed] - Bumped React DevTools to 6.1.5  Reviewed By: huntie  Differential Revision: D77799615  fbshipit-source-id: aa010176f6378f6306e8a2a45fad7afe002a609c,5,5,10
facebook/react-native,0666885f6afe0f0bea0dabf487e37fcd0403f008,Sam Zhou,2025-07-04T18:55:28Z,Deploy 0.275.0 to xplat  Summary: Changelog: [Internal]  Reviewed By: marcoww6  Differential Revision: D77800436  fbshipit-source-id: ff5a6a629c950959678d6a6311cda053f6b5dd4c,9,6,15
facebook/react-native,efdf73983cef1f371511b6e1efa5e01835ebcabb,Nicola Corti,2025-07-04T17:33:18Z,"Deprecate the DefaultNewArchitectureEntryPoint.load(Boolean, Boolean, Boolean) (#52439)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52439  Users should not be passing true/false values for the 3 params in the `load()` method. The app template already uses the no param overload. I'm deprecating it so it can go in 0.81.  Changelog: [Android] [Changed] - Deprecate the DefaultNewArchitectureEntryPoint.load(Boolean, Boolean, Boolean)  Reviewed By: rubennorte  Differential Revision: D77739268  fbshipit-source-id: c901d1ed2e9623b0fa39f4e2d79f25404c284b8d",42,1,43
facebook/react-native,377baa2ef6493a8de3da3066574e548125680967,Ruslan Lesiutin,2025-07-04T15:09:12Z,Update debugger-frontend from 35c4630...51a91a2  Summary: Changelog: [Internal] - Update `react-native/debugger-frontend` from 35c4630...51a91a2  Resyncs `react-native/debugger-frontend` from GitHub - see `rn-chrome-devtools-frontend` [changelog](https://github.com/facebook/react-native-devtools-frontend/compare/35c4630bd58bbcbc6f4c54c084b4e52994dc4940...51a91a2ad62e7f585912ed314a350a72de84d6ed).  ### Changelog  | Commit | Author | Date/Time | Subject | | ------ | ------ | --------- | ------- | | [51a91a2ad](https://github.com/facebook/react-native-devtools-frontend/commit/51a91a2ad) | Ruslan Lesiutin (28902667+hoxyq@users.noreply.github.com) | 2025-07-04T14:04:02+01:00 | [bump: react-devtools@6.1.4 (#189)](https://github.com/facebook/react-native-devtools-frontend/commit/51a91a2ad) | | [761b96907](https://github.com/facebook/react-native-devtools-frontend/commit/761b96907) | Vitali Zaidman (vzaidman@gmail.com) | 2025-07-04T12:55:39+01:00 | [fixed missing new line before string error causes (#186)](https://github.com/facebook/react-native-devtools-frontend/commit/761b96907) | | [7774c38db](https://github.com/facebook/react-native-devtools-frontend/commit/7774c38db) | Alex Hunt (hello@alexhunt.dev) | 2025-06-30T13:20:49+01:00 | [Disable request initiator panel in NetworkItemView (#185)](https://github.com/facebook/react-native-devtools-frontend/commit/7774c38db) |  Reviewed By: huntie  Differential Revision: D77795834  fbshipit-source-id: 3c30f8e87593687415538902734b09b3144b70a4,10,10,20
facebook/react-native,c9e44fbcf2e5e766b39d04be03df56573109328a,Ruslan Lesiutin,2025-07-04T15:09:12Z,upgrade[react-devtools]: 6.1.4 (#52426)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52426  # Changelog: [General] [Changed] - Bumped React DevTools to 6.1.4  Reviewed By: huntie  Differential Revision: D77794756  fbshipit-source-id: 4b8a795a809f5e72e8753d65435c97212e38dd8a,74,48,122
facebook/react-native,f753158da49959bb3b4dca3a1d018a19517bce9f,Alex Hunt,2025-07-04T14:07:20Z,"Add JS implementation for PerformanceResourceTiming (#52427)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52427  Adds and wires up a minimal implementation of `PerformanceResourceTiming` on the JS side. This materialises D74245441 in user space.  When all feature flags are enabled, network requests can now be observed from JS via `PerformanceObserver`.  Changelog: [Internal]  Reviewed By: rubennorte  Differential Revision: D75062713  fbshipit-source-id: 06523e70f57feaaa53432ef21fa92676d1e90360",162,32,194
facebook/react-native,d2b55ad1bac3196b79a3389270d6dae858d76999,Ian Childs,2025-07-04T13:17:14Z,Use build instead of targets in check-api.sh (#52424)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52424  This makes sure the output is actually materialized.  Changelog: [Internal]  Reviewed By: GijsWeterings  Differential Revision: D77793365  fbshipit-source-id: 5505abd0f4c2994f4ced1c27a506d9199f9454ca,1,1,2
facebook/react-native,962a7dda440863e7888fd2cc01c065c8762857e6,Alex Hunt,2025-07-04T13:09:38Z,Expose unstable_TextAncestorContext API (#52368)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52368  Motivated by https://github.com/react-native-community/discussions-and-proposals/discussions/893#discussioncomment-13497461.  Also align naming for internal usages.  Changelog: [General][Added] - Expose `unstable_TextAncestorContext` API  Reviewed By: NickGerleman  Differential Revision: D77141176  fbshipit-source-id: d9a57d923994188f5ce7e0608ea28fdca98db860,46,26,72
facebook/react-native,bc4bce61df985feef764984a9c4efdd74e7a2366,Samuel Susla,2025-07-04T11:49:12Z,remove uses of ShadowNode::Shared from ShadowNode.cpp (#52422)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52422  changelog: [internal]  In https://github.com/facebook/react-native/pull/52393 not all uses of ShadowNode::Shared were removed. Github CI fails if a deprecated API is used. Let's remove the last uses.  Reviewed By: cortinico  Differential Revision: D77790411  fbshipit-source-id: 6fbbbffaa784de1f0939d1032dc7ea6586f2ce7d,3,3,6
facebook/react-native,b4dcc9831e12d5dc8cb851c8c051fb98fe5b2eb4,Mohamed Salama,2025-07-04T11:19:27Z,Revert D77547628: Fix Dimensions window values on Android < 15  Differential Revision: D77547628  Original commit changeset: 9d841f642d5b  Original Phabricator Diff: D77547628  fbshipit-source-id: 80ee528740eb4b39816e7873939d74e29d64caec,1,18,19
facebook/react-native,2d0aa1a7476fc14c3076cd83fb4a9a2522cd4017,Nicola Corti,2025-07-04T09:48:42Z,"Revert Refactor ViewManagerInterfaces codegen to generate kotlin classes  Summary: reverting Refactor ViewManagerInterfaces codegen to generate kotlin classes because of warning in OSS, we will reland after 0.81 cut  Changelog: [Android][Breaking] - Revert of Migrate ViewManagerInterfaces to kotlin. Some types in code generated ViewManagerInterfaces might differ. e.g. this will start enforcing nullability in parameters of viewManagerInterface methods (e.g. String commands parameters are not nullable, view params are not nullable in any method, etc)  Reviewed By: lenaic, mlord93  Differential Revision: D77759777  fbshipit-source-id: c24b216b231cdc53296d8c9fca8d789d80daa596",432,377,809
facebook/react-native,0e175ce5b6c80a21237f5cd0f20c9876fa975935,Samuel Susla,2025-07-04T07:29:54Z,Mark ShadowNode::Shared as deprecated and replace all usages (#52393)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52393  ## Changelog: [General][Deprecated] - ShadowNode::Shared is now deprecated. Use `std::shared_ptr<const ShadowNode>` instead.  - Mark ShadowNode::Shared as deprecated in ShadowNode.h - Replace all uses of ShadowNode::Shared with std::shared_ptr<const ShadowNode>.  This continues the systematic effort to remove ShadowNode type aliases in favor of explicit standard library types for improved code clarity and maintainability.  Reviewed By: christophpurrer  Differential Revision: D77650696  fbshipit-source-id: b4769e2a1e39f49d14d5927be105487ecf69fa3f,302,255,557
facebook/react-native,2ce7eab5f998788ffa8346b63cc4901d026456ba,Christoph Purrer,2025-07-03T23:44:16Z,Remove unused RAIICallbackWrapperDestroyer (#52390)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52390  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77710424  fbshipit-source-id: 7c1d7e3181450394311a001af117c6fbdcaeba31,0,19,19
facebook/react-native,ccb9edc7179ec1b568038408118971c2ee4c1b27,Nicola Corti,2025-07-03T22:28:06Z,"Remove deprecated `isStartSamplingProfilerOnInit` from `DeveloperSettings` (#52405)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52405  This field has been deprecated since RN 0.77, we can safely remove it ahead of the branch cut.  Changelog: [Android] [Removed] - Remove deprecated `isStartSamplingProfilerOnInit` from `DeveloperSettings`  Reviewed By: mdvacca, javache  Differential Revision: D77734913  fbshipit-source-id: 231ecb360921d48ec941a3a214e73b4b89446c13",0,11,11
facebook/react-native,f2ecb7e42cd75f361c3ced7a96224a018a2da0bc,Nicola Corti,2025-07-03T22:17:38Z,"Make loadWithFeatureFlags correctly internal (#52395)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52395  This method was exposed as `public` but there is no need for us to expose it in OSS. So I'm marking it as internal.  Changelog: [Internal] [Changed] - Make loadWithFeatureFlags correctly internal  Reviewed By: mlord93, mdvacca, javache  Differential Revision: D77734270  fbshipit-source-id: 34e1d7aaa4a5bf3563c78aad570e2310592bcc77",1,2,3
facebook/react-native,47fe09f505219dbfbe8f000bd3841ca543170b35,Christoph Purrer,2025-07-03T20:32:28Z,"Make virtual destructors default implemented - instead of empty one (#52382)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52382  Changelog: [Internal]  In C++, both `virtual ~CallInvoker() {}` and `virtual ~CallInvoker() = default` can be used to define a virtual destructor. However, they have slightly different implications:  1. `virtual ~CallInvoker() {}`:     * This is the traditional way of defining a virtual destructor.     * It provides an empty implementation for the destructor, which does nothing.     * The compiler will not generate a default implementation, as you've provided one explicitly. 2. `virtual ~CallInvoker() = default`:     * This is a more modern way of defining a virtual destructor (introduced in C++11).     * It tells the compiler to generate a default implementation for the destructor.     * The default implementation will perform the necessary cleanup operations, such as calling the destructors of base classes and member variables.  In general, `= default` is considered better because it: * Avoids unnecessary code duplication: By letting the compiler generate the default implementation, you avoid duplicating code that's already generated by the compiler. * Improves maintainability: If the class has member variables or base classes with non-trivial destructors, using `= default` ensures that the correct cleanup operations are performed without requiring manual updates. * Conveys intent: Using `= default` clearly indicates that the destructor should perform its default behavior, making the code easier to understand.  So, unless you have a specific reason to provide a custom implementation, `virtual ~CallInvoker() = default` is generally the better choice.  Reviewed By: rshest  Differential Revision: D77685932  fbshipit-source-id: 78c81f8e400069ad38d8d7405dafeb0b6db8e67b",12,12,24
facebook/react-native,c9f1778faf31cd9e260fc3522695f54b58c76f10,Jorge Cabiedes Acosta,2025-07-03T19:56:35Z,Implement accessibilityOrder by building the accessibilityTree through addChildrenForAccessibility (#52347)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52347  We can build an accessibility tree for Talkback by overriding addChildrenForAccessibility of ViewGroup.  With this we just manually build a tree that contains the elements we care about in the order we want.  We also try to keep most of the tree intact so that coopting works properly Changelog: [Internal]  Reviewed By: joevilches  Differential Revision: D77258926  fbshipit-source-id: 767ebc880a2efbf7934b9e7dee3013dd7822e5ad,224,63,287
facebook/react-native,5b245767d615d0fc58a44de7d46b33be2103e304,Jorge Cabiedes Acosta,2025-07-03T19:56:35Z,"Remove Virtual View accessibilityOrder implementation (#52297)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52297  Doing virtual views is the only way of making it possible to add the host view into the order. This however is too complex for very little gain, we are opting to go for a cleaner solution with the trade off of not being able to add the host view.  Changelog: [Internal]  Reviewed By: joevilches  Differential Revision: D77278752  fbshipit-source-id: 709b995f51a9a03f6d07f2e24f8aea21d62d95c4",8,311,319
facebook/react-native,76ff1aa5c6d30935ec33708d3a13ac7e5a82f551,David Vacca,2025-07-03T19:19:42Z,"Refactor ViewManagerInterfaces codegen to generate kotlin classes (#51735)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/51735  This diff refactors the ViewManagerInterfaces codegen to generate kotlin classes,  As a consequence of this change, there are some ViewManagerInterfaces that have changed their APIs  ## Changelog: [Android][Breaking] - Migrate ViewManagerInterfaces to kotlin. Some types in code generated ViewManagerInterfaces might differ. e.g. this will start enforcing nullability in parameters of viewManagerInterface methods (e.g. String commands parameters are not nullable, view params are not nullable in any method, etc)  Reviewed By: javache  Differential Revision: D75719542  fbshipit-source-id: 7e9aa7ccc24e827bd7b6df72b3302e852932e731",377,432,809
facebook/react-native,253606239b9fa00e3c24da36a46017301599b63f,Christoph Purrer,2025-07-03T18:56:03Z,CallInvoker > Remove unused includes (#52381)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52381  Changelog: [Internal]  Reviewed By: NickGerleman  Differential Revision: D77685836  fbshipit-source-id: a01aedf51463d228ca14d37dc4a0869e6e9208c9,4,5,9
facebook/react-native,3561791ff82df1a44b5906f1dd2b6ff823bb9f34,Ruslan Lesiutin,2025-07-03T18:38:05Z,"fix: rename bottom stack frame (#33680) (#52400)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52400  `react-stack-bottom-frame` -> `react_stack_bottom_frame`.  This survives `babel/plugin-transform-function-name`, but now frames will be displayed as `at Object.react_stack_bottom_frame (...)` in V8. Checks that were relying on exact function name match were updated to use either `.indexOf()` or `.includes()`  For backwards compatibility, both React DevTools and Flight Client will look for both options. I am not so sure about the latter and if React version is locked.  DiffTrain build for [91d097b2c588a0977a7a10ed12512dc8a34e3a5b](https://github.com/facebook/react/commit/91d097b2c588a0977a7a10ed12512dc8a34e3a5b)  Reviewed By: jackpope  Differential Revision: D77601866  fbshipit-source-id: 24ed8713af4bebbaeb7a612333cd79c51b696565",2,2,4
facebook/react-native,85d10ed90401a13de1f74aeddd773736195da285,Mathieu Acthernoene,2025-07-03T18:37:55Z,"Fix Dimensions window values on Android < 15 (#47554)  Summary: This PR (initially created for edge-to-edge opt-in support, rebased multiple times) fixes the `Dimensions` API `window` values on Android < 15, when edge-to-edge is enabled.  Currently the window height doesn't include the status and navigation bar heights (but it does on Android >= 15):  <img width=""300"" alt=""Screenshot 2025-06-27 at 16 23 02"" src=""https://github.com/user-attachments/assets/c7d11334-9298-4f7f-a75c-590df8cc2d8a"" />  Using `WindowMetricsCalculator` from AndroidX:  <img width=""300"" alt=""Screenshot 2025-06-27 at 16 34 01"" src=""https://github.com/user-attachments/assets/7a4e3dc7-a83b-421b-8f6d-fd1344f5fe81"" />  Fixes https://github.com/facebook/react-native/issues/47080  ## Changelog:  [Android] [Fixed] Fix `Dimensions` `window` values on Android < 15 when edge-to-edge is enabled  Pull Request resolved: https://github.com/facebook/react-native/pull/47554  Test Plan: Run the example app on an Android < 15 device.  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D77547628  Pulled By: alanleedev  fbshipit-source-id: 9d841f642d5b7ef3294dfbf3868137087a672ad6",18,1,19
facebook/react-native,facdc2f6f431645d68f423b157ecbdfae1ad9def,Ruslan Lesiutin,2025-07-03T16:34:58Z,Support rename of React stack bottom frame (#52398)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52398  # Changelog: [Internal]  Adaptation for https://github.com/facebook/react/pull/33680.  Reviewed By: jackpope  Differential Revision: D77737710  fbshipit-source-id: 6c6893935e8da8175c0cd9ceab21cc05e2092e7a,14,4,18
facebook/react-native,477d8df3126b325b8cc9b410f1eaeb56b727d4d9,Enrique López Mañas,2025-07-03T15:01:47Z,"Updated targetSdk to 36 (#52355)  Summary: We need to upgrade the targetSdk to 36, which requires ensuring compatibility with the latest Android APIs and addressing any deprecations or behavior changes introduced in this version.  ## Changelog:  [Android] [Changed] - Updated targetSdk to 36 in Android.  Pull Request resolved: https://github.com/facebook/react-native/pull/52355  Test Plan: - Verified that the app builds and runs successfully with targetSdkVersion 36.  - Ran the full suite of unit and instrumentation tests: all tests passed.  - Manually tested key user flows (login, navigation, data sync) on devices running Android 14 (API 34) and emulator with API 36  - Confirmed that there are no runtime crashes or warnings related to `targetSDK` upgrade.  Behavioral guide for migration: https://developer.android.com/about/versions/16/behavior-changes-16  Reviewed By: fabriziocucci  Differential Revision: D77728391  Pulled By: cortinico  fbshipit-source-id: 3f714f900bbeecc56c0cf46c54b4e42c532c8384",2,2,4
facebook/react-native,2e724e47431d4454ffa8e3022708e839a6d831c2,Nicola Corti,2025-07-03T13:57:20Z,Add changelog for 0.80.1 (#52392)  Summary: Just the changelog for 0.80.1  ## Changelog:  [INTERNAL] - Add changelog for 0.80.1  Pull Request resolved: https://github.com/facebook/react-native/pull/52392  Test Plan: N/A  Reviewed By: fabriziocucci  Differential Revision: D77725130  Pulled By: cortinico  fbshipit-source-id: 2eddb56e8893e0d8e71a6509b1303b3b9cab8769,16,0,16
facebook/react-native,f4a9aa352544c9b9387ba3b74a385341cba81414,Alex Hunt,2025-07-03T12:01:57Z,"Implement connectionTiming and dataReceived NetworkReporter methods (#52335)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52335  Adds support for `Network.requestWillBeSentExtraInfo` and `Network.dataReceived` CDP events in jsinspector-modern and wires up for iOS.  In particular, `Network.requestWillBeSentExtraInfo` is necessary to populate request headers in the UI.  **End of base Network implementation for iOS**  After this diff, we are spec-complete on all CDP Network methods for our V1, on iOS.  Changelog: [Internal]  Reviewed By: hoxyq  Differential Revision: D77489476  fbshipit-source-id: 84aa4da9d9fcbdc61eff236fc6bd2136496910a5",128,26,154
facebook/react-native,ebb831a0c96883bee7b2322392a403e0ca4f11d2,Alex Hunt,2025-07-03T12:01:57Z,Implement Network.loadingFailed (#52334)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52334  Adds support for `Network.loadingFailed` in jsinspector-modern and wires up for iOS.  Changelog: [Internal]  Reviewed By: hoxyq  Differential Revision: D77489477  fbshipit-source-id: dc8156979fe49583819019fa4b88b6eb99dea734,72,25,97
facebook/react-native,68342a4d12867f717428dd600c83feebdc4a847b,Alex Hunt,2025-07-03T12:01:57Z,"Support CDP response previews for chunked data (#52331)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52331  Updates the iOS inputs to `NetworkReporter` to support incremental string data HTTP responses (`Transfer-Encoding: chunked`).  This means that incremental responses, such as Metro bundle requests, can be displayed as previews in React Native DevTools.  Changelog: [Internal]  Reviewed By: hoxyq  Differential Revision: D77457109  fbshipit-source-id: 00a622dbac97c38e07c67b5ee3661c8d586f6fe1",86,4,90
facebook/react-native,94c97db4da6088767e7f640210f628e0668482fa,Alex Hunt,2025-07-03T12:01:57Z,"Implement Network.getResponseBody (#52332)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52332  Adds support for the [`Network.getResponseBody`](https://chromedevtools.github.io/devtools-protocol/tot/Network/#method-getResponseBody) CDP event in `jsinspector-modern` and configures this for iOS. This enables us to populate the ""Preview"" and ""Response"" tabs in the React Native DevTools Network panel.  This is integrated with `RCTNetworking.mm` to support synchronously received `text` or `blob` data types, with incremental response support added next in D77457109.  **Implementation notes**  - Adds a new `BoundedRequestBuffer` construct to safely buffer response previews at a max memory size. - `RCTNetworking` will always call `maybeStoreResponseBody` (when feature flag enabled), but is unaware whether there is an active CDP debugging session with network support or not.  Changelog: [Internal]  Reviewed By: rubennorte  Differential Revision: D74319394  fbshipit-source-id: c9dbb44551c15d1b1a7cce56b35bf829f8a99dc7",373,5,378
facebook/react-native,9253fc3b420d19734fe476e19be3f3f504cac91c,Eric Rozell,2025-07-03T11:15:41Z,"Defer focus cell render mask updates (#52380)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52380  Apps that rely support focus in FlatList rendered items are missing out on a FlatList optimization that defers rendering for offscreen content updates.  For example, on Android, if you focus and smooth scroll an item into view, the onScroll event will fire first. For most sufficiently large virtualization windows, the next render will be delayed by the render batch timeout as most materialization of virtualized views is not treated as a high pri render.  However, this batch / timeout mechanism isn't being used for cell render updates that occur as a result of a focus change.  This change adds the same timeout mechanism used for scroll events. In most cases, the view that is focused is in the viewport, and the extra rendering needed is already scheduled (or executed with high priority if needed) when the onScroll event is processed.  In cases where the focus change occurs outside the viewport, most platforms will want to do some kind of ""bring into view"" anyway, and the same applies - onScroll will take care of scheduling the cell rendering priority.  ## Changelog  [Internal]  Reviewed By: NickGerleman  Differential Revision: D77681274  fbshipit-source-id: 1ade377e513eca21338a380ff9299dd410606aec",25,2,27
facebook/react-native,45fd7feb9f083e5c8afc916732aed9795d344e09,Nicola Corti,2025-07-03T09:52:01Z,"Convert UIManagerModuleConstantsHelper to Kotlin (#52358)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52358  Another class going from Java to Kotlin. This is quite involved due to the amount of Raw generics we were using so I'd appreaciate a couple of further eyes here.  Changelog: [Android] [Changed] - Convert UIManagerModuleConstantsHelper to Kotlin  Reviewed By: mdvacca, javache  Differential Revision: D77589975  fbshipit-source-id: 477c1e2a8dfd31db60047fd1252f6d47c177f5c7",252,272,524
facebook/react-native,6cb8dc37c74995cba3f9f0a845919f305de53c3d,Nicola Corti,2025-07-03T09:27:08Z,"RNGP - Add support for `exclusiveEnterpriseRepository` (#52378)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52378  This adds a Gradle property called `exclusiveEnterpriseRepository` that users can set in their `android/gradle.properties` as such:  ```diff # Use this property to enable or disable the Hermes JS engine. # If set to false, you will be using JSC instead. hermesEnabled=true  +exclusiveEnterpriseRepository=https://my.internal.proxy.net/ ```  This will remove all the existing Maven repositories and only use the internal mirror they have.  Changelog: [Android] [Added] - RNGP - Add support for `exclusiveEnterpriseRepository` to specify an internal Maven mirror.  Reviewed By: mdvacca  Differential Revision: D77667573  fbshipit-source-id: 835004d2ae7aa4e250b6f7a88a41918b573f5bd5",77,1,78
facebook/react-native,cec0de8f991fa65f832cdaf92188e501fb285d8f,Joe Vilches,2025-07-03T05:13:16Z,"Change Scroller getter to protected (#52387)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52387  I would like to grab this in a subclass but unfortunately can't. It is kinda jank since this is a val obtained via reflection, but I figure this is better than copy and paste. I think that I could also expose a function that uses this scroller the way I want it to. Let me know if there are strong objections here  Changelog: [Internal]  Reviewed By: rozele  Differential Revision: D77684599  fbshipit-source-id: 6f02c1da5135c1cf34fa1483542e06bf8f0be75e",2,1,3
facebook/react-native,097d482446b7a03ca0f8c7e0254f4d770e05c79c,nishan (o^▽^o),2025-07-03T00:55:45Z,"fix(ios): Correct gradient interpolation for when transitioning to transparent color (#52249)  Summary: This change fixes an issue on iOS where gradients that fade to a transparent color-stop appear dark or ""muddy."" The fix ensures that the color's hue is preserved during the transition, matching the behavior on Android and web.  ### The Problem When creating a gradient on iOS (e.g., linear-gradient(red, transparent)), the transparent keyword is treated as transparent black (rgba(0,0,0,0)). The `CAGradientLayer` on iOS then interpolates all color channels linearly, causing the red, green, and blue components of the start color to fade to 0. This transition through black results in an undesirable dark or ""muddy"" appearance in the middle of the gradient.  ## Changelog: [IOS][FIXED] - Gradient interpolation for transparent colors <!-- Help reviewers and the release process by writing your own changelog entry.  Pick one each for the category and type tags:  [ANDROID|GENERAL|IOS|INTERNAL] [BREAKING|ADDED|CHANGED|DEPRECATED|REMOVED|FIXED|SECURITY] - Message  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests  Pull Request resolved: https://github.com/facebook/react-native/pull/52249  Test Plan: Checkout `LinearGradient` example in RNTester, checkout the newly added transparent color transition example, it should render same on android and iOS.  | Before | After | | --- | --- | | <img src=""https://github.com/user-attachments/assets/c0bb54ad-ed0e-4a80-b37f-0458af0f1f77"" width=""300""> | <img src=""https://github.com/user-attachments/assets/02da921a-bd0e-45c1-881c-cf6460d5ed43"" width=""300""> | | `linear-gradient(to right, red, transparent)` transitions to black on iOS, creating a dark effect. | The gradient correctly fades the red color's alpha channel to zero |  Reviewed By: javache  Differential Revision: D77312194  Pulled By: NickGerleman  fbshipit-source-id: 053df8e44f52cd22a3f28fd01f583f7d03c66af5",57,8,65
facebook/react-native,508b1526d9a7bf935ded23c91c7ee4f288ebbcdd,Nick Gerleman,2025-07-03T00:26:48Z,"Avoid array copies on every MapBuffer read (#52386)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52386  Enum `values()` function makes a copy of an underlying array on each call. This happens in a hot path, and seems to show up during profiling. Let's cache it.  Changelog: [Internal]  Reviewed By: lenaic  Differential Revision: D77623705  fbshipit-source-id: 5a33425822f477f63fe104ca9e5ed474385a2022",14,2,16
facebook/react-native,0d455f32724d05d8e765fa695483fb04b508f26f,Nick Gerleman,2025-07-03T00:26:48Z,"buildSpannableFromFragmentsOptimized (#52385)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52385  This replaces `buildSpannableFromFragmentsOptimized()` with a more optimized version. There are a couple main changes.  1. We don't need a complicated structure around ordering, and span priority, that made its way from the Java ShadowNode logic. AttributedString already ensures there are no overlapping attributes per fragment. 2. `SpannableStringBuilder` is a complicated text-editor style data structure, optimized to allow text content to be modified, and spans re-applied. We can use a much lighter `SpannableString`, on top of the ahead-of-time known text content, which is faster, and saves around 500 bytes per string (and prepared layout). If we assign this to an `EditText`, which later gets edited, Android will copy it to a `SpannableStringBuilder`.  Changelog: [Internal]  Reviewed By: lenaic  Differential Revision: D77622848  fbshipit-source-id: 69bbac86e1f0fd4a15dab6bc279cca305f2a53ae",177,16,193
facebook/react-native,a4b0d64395c391c14da618f925a0f0a3c1a415e1,Nick Gerleman,2025-07-03T00:26:48Z,"ReactNativeFeatureFlags.enableAndroidTextMeasurementOptimizations() (#52384)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52384  Adds the feature flag, controlling multiple optimizations up the stack.  Changelog: [Internal]  Reviewed By: lenaic  Differential Revision: D77622983  fbshipit-source-id: 16500e8557d36db627c62faa511eeb4c73dc7484",202,68,270
facebook/react-native,22b8b53c77cb2fe87aa54be92d1758a603b7dd35,Nolan O'Brien,2025-07-02T23:56:07Z,Fix exhaustive switches (#52383)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52383  Changelog: [General][Fixed] - Add `default:` case to avoid warnings/errors for targets that compile with `-Wswitch-enum` and `-Wswitch-default` enabled  Reviewed By: aary  Differential Revision: D77051150  fbshipit-source-id: a4f18bb7e47f027fd64cc42bacd7246263ef2454,6,9,15
facebook/react-native,9079b53c6fa4ec9494f22390a89d1d42b77108a8,Nolan O'Brien,2025-07-02T21:21:18Z,"Fix exhaustive switches (#52379)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52379  Changelog: [General][Fixed] - Add `default:` case to avoid warnings/errors for targets that compile with `-Wswitch-enum` and `-Wswitch-default` enabled  Reviewed By: aary, yungsters, astreet  Differential Revision: D77051152  fbshipit-source-id: 100b10f97cb3a5d73f1e3dcaf1b284baf6a43982",2,2,4
facebook/react-native,da23346c7e9f397b066320ae6defad8e59860069,Nick Lefever,2025-07-02T17:07:01Z,Fix UNDEFINED YGValue serialization (#52376)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52376  Correct the expected serialization based on the YogaValue parse implementation: https://www.internalfb.com/code/fbsource/[ecdf90fe69d0]/xplat/js/react-native-github/packages/react-native/ReactAndroid/src/main/java/com/facebook/yoga/YogaValue.java?lines=66-68  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77663413  fbshipit-source-id: e8b6091a5d57c6d0301411371c290a867c9b5224,1,1,2
facebook/react-native,ceb5f1dedbabe7723881cd934408196b88d97333,Christoph Purrer,2025-07-02T15:34:21Z,Remove unused SharedAttributedString alias (#52362)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52362  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77630091  fbshipit-source-id: df297bc5150416b6ddf719addc3ae926e3b39f48,0,7,7
facebook/react-native,faa8c7b8a173ffb6cfe24ff14255251450a231c3,Fabrizio Cucci,2025-07-02T13:34:06Z,Keep changelog references for previous versions in CHANGELOG (#52372)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52372  This is just a follow-up on top D77025333 to make sure that the links in the blog posts and the GitHub releases keep working.  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77654056  fbshipit-source-id: a1c6df44ebee058dd5b59e5b6a60c7c1e060e52c,876,0,876
facebook/react-native,e20bb56f3b4db0d3e69154b95b952b1fe8e29959,Nicola Corti,2025-07-02T11:36:22Z,Bump Gradle to 8.14.2 (#52370)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52370  This is just a patch bump of Gradle ahead of the 0.81 branch cut.  Changelog: [Android] [Changed] - Bump Gradle to 8.14.2  Reviewed By: fabriziocucci  Differential Revision: D77601121  fbshipit-source-id: b2fdc8b022f2ab43997f412c77e0c924c01f1a5d,2,2,4
facebook/react-native,4274d6f7c7f5f7c8eaab086ec4499e043e01de7e,Alex Hunt,2025-07-02T11:34:10Z,Tweak RNTester status bar on Android (#52369)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52369  Tiny fix where the system status bar elements were no longer visible under Android edge-to-edge.  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77653633  fbshipit-source-id: 1275a0de6665a6ef4599166fb205865cd581bb41,7,0,7
facebook/react-native,b578a70bd56e93e465b069ca1e768f45bcde7709,Nicola Corti,2025-07-02T10:53:34Z,Bump packages for next release (#52359)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52359  This is needed ahead of the 81 branch cut.  Changelog: [Internal] - Bump all packages to 0.81.0-main  Reviewed By: huntie  Differential Revision: D77602196  fbshipit-source-id: 1b52a7d1577783d72aba8d20f98032f29ffcc7df,54,54,108
facebook/react-native,bf51035e04635ba4029f672173748770f537f971,Moti Zilberman,2025-07-02T10:48:51Z,Scaffolding for custom RNDT shell binary (#52357)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52357  Changelog: [Internal]  Adds a hyper-minimal build script using `electron/packager` that produces custom binaries for the experimental React Native DevTools standalone shell. The main user-facing benefit of this is replacing the Electron name and icon with our own branding.  NOTE: `electron/packager` is designed to include the application code in the resulting binary. This is arguably overkill for us - the current launch model of `electron src/electron/index.js` is actually wholly sufficient for what we need - but I decided to go with the grain of the available tooling for simplicity.  Icon design courtesy of huntie. 🙏  Reviewed By: huntie  Differential Revision: D77591742  fbshipit-source-id: a968465df4f54fba54c874b6300788e151600ed7,712,28,740
facebook/react-native,2d68a733f8c99bdaa4f96db1f06edccf6c420596,Moti Zilberman,2025-07-02T10:09:18Z,"Fix run-ci-javascript-tests script (#52364)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52364  Changelog: [Internal]  D76512374 broke error reporting in `run-ci-javascript-tests.js`. This is partly because the file was untyped and we missed that the `.code` check on the result of `execSync` was always going to be falsy. Also, `execSync`'s default error handling mechanism is not human-friendly - it throws an `Error` with `Buffer`s for stdout and stderr (see [example](https://github.com/facebook/react-native/actions/runs/16003656383/job/45144825919?pr=52357&fbclid=IwY2xjawLRyfpleHRuA2FlbQIxMQBicmlkETFZSG1xeWhTWWczR1paS0lKAR4pF46Z-J2CbSk7YdHZJ-N3F9eQJ7hR4EowfLV6mUtzMLg8j-EWdZiGY1la6A_aem_1Zbvn6fD5NS9YO-B7QJssg)).  Here, I'm adding types, removing dead code and preserving stdout and stderr from all child processes in a human-readable format.  Reviewed By: huntie  Differential Revision: D77648312  fbshipit-source-id: c6d98e668d6edf15729fa02fecb3408b9dd6debc",51,71,122
facebook/react-native,326467c856de9a8038688828c0b34c084e1a07dd,Fabrizio Cucci,2025-07-02T09:52:12Z,Add changelog entry for 0.79.5 (#52367)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52367  As per title.  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77652098  fbshipit-source-id: c9ab8c7549e1f50b2e3ca7a1c7de6ec321926ee6,6,0,6
facebook/react-native,c1168cf9199f6ac5801732dc5cab2307e6b69683,Dawid Małecki,2025-07-02T09:13:31Z,Fix deep react native imports eslint rule (#52365)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52365  Adds type imports autofix support and pass `fb_internal` paths in react native deep imports eslint rule. The rule fixes imports with all matched types with static API mapping to prevent splits.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77445445  fbshipit-source-id: cd5b75b4b3b53792117b8297352dddc4d63dbf70,578,92,670
facebook/react-native,2a6b55f0b13dac251e58d32c2f864d6503263c27,Samuel Susla,2025-07-02T08:46:25Z,put optimisation for VirtualView on iOS behind a flag (#52345)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52345  changelog: [internal]  I would like to measure impact of D76597973 to get a better understanding of UIKit's rendering.  Reviewed By: yungsters  Differential Revision: D77542666  fbshipit-source-id: 4c2de4f36d2b374d83df934dd3a98d01b24f487f,166,36,202
facebook/react-native,b41b924b2d1a2cb6352a6b5d1faac3f17f5015ce,Dawid Małecki,2025-07-01T15:58:15Z,"Add diff-api-snapshot action to danger (#52045)  Summary: This PR connects breaking change detection with a danger bot. The action takes snapshot from main branch and from the PR as inputs to`diff-api-snapshot` (saved in runner temp directory).  ## Changelog: [Internal]  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests  Pull Request resolved: https://github.com/facebook/react-native/pull/52045  Reviewed By: huntie  Differential Revision: D76735630  Pulled By: coado  fbshipit-source-id: 9208117340c1e0bf10d58b67892727717d22e62f",46,0,46
facebook/react-native,71f2f05f0366f1073453c181ba072a0c67b907da,Dawid Małecki,2025-07-01T15:58:15Z,Align breaking change detection with new snapshot format (#52353)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52353  This diff aligns breaking change detection script with new snapshot format. It compares hashes to determine if the API changed for each specifier.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77377762  fbshipit-source-id: e1c69692ace389fb08ae9470b9f9631e53834206,108,205,313
facebook/react-native,1c7b04db4aee771c609e1d43b788e1e3e934bb7f,Dawid Małecki,2025-07-01T15:58:15Z,Delete public-api-test (#52342)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52342  This diff deletes `public-api-test` for detecting changes in public API. It is replaced with public API snapshot validation (in D76340729) for better detection and understanding of changes that influence external interfaces.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77531763  fbshipit-source-id: a8ef2b6f52fa6efb5b312598ea3e4746fc51e4ec,0,10032,10032
facebook/react-native,128f5eb9ac92372db27581531da569716f18c93f,Dawid Małecki,2025-07-01T15:58:15Z,Validate RN JS API snapshot on CI (#52352)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52352  This diff adds excution of `yarn build-types --validate` to run RN JS API snapshot validation on CI.  ### Motivation  Detect react-native public API changes before they land.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D76340729  fbshipit-source-id: 10c465418e0ba4eb05cf557a16119f9756843d9e,9,0,9
facebook/react-native,8f9bca5f74fb02cc03b6e685d93b11626274b029,Dawid Małecki,2025-07-01T15:58:15Z,Initial commit of ReactNativeApi.d.ts (#52343)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52343  This diff commits our V2 JavaScript API snapshot for React Native.  This is a new format and workflow that replaces the previous `public-api-test` Jest test.  Please look at the file header for up-to-date instructions on updating the API snapshot.  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77532617  fbshipit-source-id: d5faae815aa5071b0f472fcb02318b73772b11cf,6195,0,6195
facebook/react-native,dcbbf275cbc4150820691a4fbc254b198cc92bdd,David Vacca,2025-07-01T14:16:19Z,Reintroduce CppPropsIteratorSetter for Yoga Styles (#52351)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52351  Reintroduce CppPropsIteratorSetter for Yoga Styles  changelog: [internal] internal  Reviewed By: NickGerleman  Differential Revision: D77563504  fbshipit-source-id: 969c78e267db3e97ea567ad948489b5991c88678,669,518,1187
facebook/react-native,da520848c931f356d013623c412af11dce7ff114,Tim Yung,2025-07-01T14:07:33Z,"RN: Always Flatten Animated Styles (#52268)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52268  Ships the feature flag introduced in https://github.com/facebook/react-native/pull/51719 to fix crahes that result from shadowed animated style values.  Changelog: [General][Changed] - Animated now always flattens `props.style`, which fixes an error that results from `props.style` objects in which `AnimatedNode` instances are shadowed (i.e. flattened to not exist in the resulting `props.style` object).  Reviewed By: javache  Differential Revision: D77314904  fbshipit-source-id: b442d0256aee7a8925e28c7e87aee5e0a3f39425",9,41,50
facebook/react-native,ce306aca34636b3928837d427d386083050729fb,Pieter De Baets,2025-07-01T10:49:58Z,Remove redundant check for NativeReactNativeFeatureFlags (#52354)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52354  These should no longer be needed as `ReactNativeFeatureFlags` handles the missing native module gracefully.  Changelog: [Internal]  Reviewed By: rubennorte  Differential Revision: D77365271  fbshipit-source-id: 92c6789b2175f24c79838118f681107a43c9ff0a,18,45,63
facebook/react-native,5cc4d0a086d450e0f9d8ab6194013348f9de1f58,Nick Gerleman,2025-07-01T03:46:39Z,"Reland Fix possible invalid measurements when width or height is zero pixels (#52348)  Summary: X-link: https://github.com/facebook/yoga/pull/1823  Pull Request resolved: https://github.com/facebook/react-native/pull/52348  Fixes https://github.com/facebook/yoga/issues/1819  Yoga has a fast path when measuring a node, if it thinks it knows its dimensions ahead of time.  This path has some eroneous logic, to set both axis to owner size, if *either* will evaluate to zero, while having an `YGMeasureModeAtMost`/`FitContent` constraint. This means that if a node is given a zero width, and Yoga later measures with with `FitContent`, its height will become the maximum allowable height, even if it shouldn't be that large.  We can fix this, by only allowing if both axis are this fixed case, instead of just one.  This bug has existed for about a decade (going back to at least D3312496).  Changelog: [General][Fixed] - Fix possible invalid measurements with width or height is zero pixels  Reviewed By: yungsters  Differential Revision: D76851589  fbshipit-source-id: 6f5a0e6beccc51f591726c9e83e9b90f3350ed0f",8,6,14
facebook/react-native,3eeda07a69dee452b09f0fe5d1d99f6df626b0ac,Jack Pope,2025-07-01T00:19:32Z,Align `AttributeConfiguration` type in `ReactNativeTypes` (#33671)  Summary: DiffTrain build for [1e0d12b6f273d7345e32c16cd937475ed7c512ad](https://github.com/facebook/react/commit/1e0d12b6f273d7345e32c16cd937475ed7c512ad)  Reviewed By: kassens  Differential Revision: D77541776  fbshipit-source-id: ef9a99bfc7f16feee1d27685de62a970305f8e5a,2,2,4
facebook/react-native,7d01060a8bf12342a321ec286116e4e20e84a9ab,Mateo Guzmán,2025-06-30T22:54:57Z,"Kotlin: fix static code analysis weak warnings (6/n) (#52338)  Summary: Static code analysis reports several weak warnings, many of which seem to be leftovers after Kotlin migration. This PR addresses quite a few:  - [Accessor call that can be replaced with property access syntax](https://www.jetbrains.com/help/inspectopedia/UsePropertyAccessSyntax.html)  ## Changelog:  [INTERNAL] - Kotlin: fix static code analysis weak warnings (6/n)  Pull Request resolved: https://github.com/facebook/react-native/pull/52338  Test Plan: ```sh yarn android yarn test-android ```  Reviewed By: NickGerleman  Differential Revision: D77504913  Pulled By: cortinico  fbshipit-source-id: 62661ba6adafb7893ce27811357020966d5ea4c1",27,29,56
facebook/react-native,69e4252ccba4d76476194dcff377b65099212928,Pieter De Baets,2025-06-30T20:22:36Z,"Fix access to observers outside lock in ImageResponseObserverCoordinator (#52346)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52346  This is bypassing the mutex, and potentially not thread-safe.  Changelog: [Internal]  Reviewed By: sammy-SC  Differential Revision: D77541041  fbshipit-source-id: f97415d066786864806836768dbce2d5e68487ef",1,1,2
facebook/react-native,69a55d7b76f74924b9746dacb660829e709479bd,Ruslan Lesiutin,2025-06-30T19:55:28Z,Console: prioritize original console.timeStamp implementation (#52319)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52319  # Changelog: [Internal]  Reviewed By: vzaidman  Differential Revision: D77315831  fbshipit-source-id: b4d7fd9c816dcb4b76cc7d026f509a6a24da58f8,1,1,2
facebook/react-native,5340a00ac010492c3c84cae894899bbcde3bd1c6,Ruslan Lesiutin,2025-06-30T19:55:28Z,Define isProfiling option when Fusebox is used in Production mode (#52320)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52320  # Changelog [Internal]  We are gating `__RCTProfileIsProfiling` global definition under this `isProfiling` option - [1].  Reviewed By: vzaidman  Differential Revision: D77315833  fbshipit-source-id: f71175a573aa6d77c16a657475c59820f9830aa6,9,2,11
facebook/react-native,b8b79a3fc11c1793f8347d8306a17cc82a520fdd,generatedunixname89002005287564,2025-06-30T19:22:37Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/react/nativemodule/core/platform/ios/ReactCommon (#52344)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52344  Reviewed By: javache  Differential Revision: D77526780  fbshipit-source-id: 6ec8cac95cd0cf9bfc29c57b7ad85fb5e9ab65cb,6,12,18
facebook/react-native,c4325c335b1d1578a526110b2ed771047d79aebb,Nicola Corti,2025-06-30T17:16:55Z,"Fix broken Modal OSS E2E test due to `createNewDialog` setter (#52341)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52341  The setter for `createNewDialog` is now wrong (after D76834213). If the `createNewDialog` has been set to `true` by any other field, we should respect it and not set it to true/false regardless (only considering the `isEdgeToEdgeFeatureFlagOn`) property.  This fixes it.  Changelog: [Internal] [Changed] -  Reviewed By: javache  Differential Revision: D77539533  fbshipit-source-id: a1deaf1f1b856895304e8b73fa5d0c0367e677af",2,2,4
facebook/react-native,73e513280d5fcdd7a4b4142f4ebbb04ee5ebbe08,Mateo Guzmán,2025-06-30T10:38:26Z,"Kotlin: fix static code analysis weak warnings (5/n) (#52337)  Summary: Static code analysis reports several weak warnings, many of which seem to be leftovers after Kotlin migration. This PR addresses quite a few:  - [Unnecessary type argument](https://www.jetbrains.com/help/inspectopedia/RemoveExplicitTypeArguments.html) - [Variable declaration could be moved inside 'when'](https://www.jetbrains.com/help/inspectopedia/MoveVariableDeclarationIntoWhen.html) - [Assignment can be replaced with operator assignment](https://www.jetbrains.com/help/inspectopedia/AssignmentReplaceableWithOperatorAssignment.html) - [Negated call can be simplified](https://www.jetbrains.com/help/inspectopedia/SimplifyNegatedBinaryExpression.html)  ## Changelog:  [INTERNAL] - Kotlin: fix static code analysis weak warnings (5/n)  Pull Request resolved: https://github.com/facebook/react-native/pull/52337  Test Plan: ```sh yarn android yarn test-android ```  Reviewed By: cortinico  Differential Revision: D77525702  Pulled By: rshest  fbshipit-source-id: b0bd2e7616340c22b22e7f58387c53c51cbf073e",12,18,30
facebook/react-native,9a2c422b80a0e7fa7c369a2b2a4d77c60e0e30b8,George Zahariev,2025-06-28T19:23:25Z,Deploy 0.274.2 to xplat (#52329)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52329  Changelog: [Internal]  Reviewed By: SamChou19815  Differential Revision: D77485965  fbshipit-source-id: 6a0b1a85696335a796133e665f41034e00d47ea3,6,6,12
facebook/react-native,2e6cf96e476a623fd4bba160949e50fdd4c56f71,George Zahariev,2025-06-28T04:48:28Z,Update hermes-parser and related packages in xplat/arvr/socialvr to 0.29.1 (#52316)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52316  Bump hermes-parser and related packages to [0.29.1](https://github.com/facebook/hermes/blob/static_h/tools/hermes-parser/js/CHANGELOG.md).  Changelog: [internal]  Reviewed By: rshest  Differential Revision: D77431991  fbshipit-source-id: d0ab4d7a338fdb68a529ed8151c7e1924600a809,56,56,112
facebook/react-native,132c2cdf12b8c4fefc90776aeef0c502da6c3cad,Joe Vilches,2025-06-28T01:02:06Z,"Fix keyboard navigation if snapToAlignment is set  Summary: There is an issue with keyboard navigation if some scroll view sets `snapToAlignment`. In this case, we are unable to find potential focus candidates if clipping is enabled since this prop will make it so that certain views in the hierarchy under the scroll view form a native view without any traits being set. The fix we have in place currently relies on `FormsStackingContext` to be set to discover potential candidates so it will break in this case. To fix this, we just return the entire ancestor list, since native will know how to deal with the cases that are not actual views, and in general has the official knowledge of what can be in the hierarchy or not.  Changelog: [Internal]  Reviewed By: NickGerleman  Differential Revision: D77467933  fbshipit-source-id: 35daaba06347c738cf7a85eef86adb7944a9cb26",1,4,5
facebook/react-native,2d1db71bc019913b7d7fd82f911b119b7d26f01f,Nick Gerleman,2025-06-27T21:37:33Z,"Add global cache for Facsimile Layouts (#52308)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52308  Experimentation shows, that we very heavily rely on the global text cache for performance (not sure how much of this is invalidation, vs repeated text, or revisiting previous surfaces).  This adds a global LRU cache, of prepared layouts, given a specific AttributedString and constraints. This is similar to the existing cache, with the caveat, that we need to have separate entries for any display states, instead of just those that effect metrics.  I sized it at 200 elements for now, since an Android `Layout` is much heavier than a `Size` (in practice, each seem to weight 1-3KB (though this will be significantly reduced with future change to move from `SpannableStringBuilder` to `SpannableString` and also contributes to the global JNI ref table, but set this up to be customizable via flag, so we can experiment, on perf impact, vs memory.  Changelog: [Internal]  Reviewed By: rshest  Differential Revision: D77341994  fbshipit-source-id: b453250dc475f6a281a3260b876bf80f301dd5dd",265,64,329
facebook/react-native,d96bbcdf0c6eb0b1508592288c74231b5b738fda,Soe Lynn,2025-06-27T18:55:44Z,"Back out ""Back out ""Adding `shouldForwardToReactInstance` check in ReactDelegate for Bridgeless"""" (#52323)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52323  Original commit changeset: b144ca6db6f7  Original Phabricator Diff: D77388413  Reverting the revert since it did not fix our javascript crash problem for v270 https://fburl.com/scuba/errorreporting_system_vros_javascripterrors/mtexik9e  Original diff stack: D76908041 Revert diff stack: D77388940  Changelog[Internal]: Puting back the Kotlin Migration for ReactDelegate file  Reviewed By: cortinico  Differential Revision: D77448293  fbshipit-source-id: ed40836c3ecb4ca551b23cb64de2c34cfda0dea1",2,1,3
facebook/react-native,faef2b12522ab80a98c4621e5ccc02f5d088dcbc,Soe Lynn,2025-06-27T18:55:44Z,"Back out ""Back out ""[react-native][PR] Migrate `ReactDelegate` to Kotlin"""" (#52322)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52322  Original commit changeset: 4a366205ea9c  Original Phabricator Diff: D77388940  Reverting the revert since it did not fix our javascript crash problem for v270 https://fburl.com/scuba/errorreporting_system_vros_javascripterrors/mtexik9e  Original diff stack: D76908041 Revert diff stack: D77388940  Changelog[Internal]: Puting back the Kotlin Migration for ReactDelegate file  Reviewed By: cortinico  Differential Revision: D77448238  fbshipit-source-id: f41faa19f6761b7ed644e804019f5ec4738326a7",433,485,918
facebook/react-native,ee02152fee1719ff9f6482e614dc52b7bea69842,Andrew Datsenko,2025-06-27T16:47:34Z,"Fix non standard hermes config internally (#52321)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52321  Changelog: [Internal] Allow non standard hermes internally.  Reviewed By: lenaic, rubennorte  Differential Revision: D77446774  fbshipit-source-id: 09919c8216932e15b2938d3e99b3df5d53e11c92",4,1,5
facebook/react-native,d5cd6ed15279f1a3e7ab1a0acb84e75cd48541fb,Vitali Zaidman,2025-06-27T14:57:58Z,Update debugger-frontend from d95ac13...35c4630 (#52317)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52317  Changelog: [Internal] - Update `react-native/debugger-frontend` from d95ac13...35c4630  Resyncs `react-native/debugger-frontend` from GitHub - see `rn-chrome-devtools-frontend` [changelog](https://github.com/facebook/react-native-devtools-frontend/compare/d95ac13bf0ab64a5e6c2eb18eb138587063b9c34...35c4630bd58bbcbc6f4c54c084b4e52994dc4940).  ### Changelog  | Commit | Author | Date/Time | Subject | | ------ | ------ | --------- | ------- | | [35c4630bd](https://github.com/facebook/react-native-devtools-frontend/commit/35c4630bd) | Vitali Zaidman (vzaidman@gmail.com) | 2025-06-26T09:47:45+01:00 | [track stack trace symbolication failures (#183)](https://github.com/facebook/react-native-devtools-frontend/commit/35c4630bd) | | [e4487ef2e](https://github.com/facebook/react-native-devtools-frontend/commit/e4487ef2e) | Vitali Zaidman (vzaidman@gmail.com) | 2025-06-24T14:29:35+01:00 | [support symbolication with native frames (#181)](https://github.com/facebook/react-native-devtools-frontend/commit/e4487ef2e) |  Reviewed By: huntie  Differential Revision: D77437936  fbshipit-source-id: 5b64195064aa5e157ae1adad01a3f2dc94045f98,4,4,8
facebook/react-native,55d8581584657a58919fcd144fecb58da448a9d8,Jakub Piasecki,2025-06-27T14:00:39Z,Cover versionExportedApis transform with tests (#52311)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52311  Changelog: [Internal]  Adds test coverage for `versionExportedApis` transform  Reviewed By: huntie  Differential Revision: D77427733  fbshipit-source-id: 7bc6279602ce6a4194930fdaf0eb790c88425cd5,729,0,729
facebook/react-native,5723de58b81990f2d358d882d16641c644274c01,Jakub Piasecki,2025-06-27T14:00:39Z,Explicitly cover more node types in versionExportedApis (#52310)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52310  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77427734  fbshipit-source-id: d9b8caee508166b2d47d5a160b0e326c4cd7783e,26,0,26
facebook/react-native,09ef774ff6dac10a00a8b35670f9b3941d810dfb,Mathieu Acthernoene,2025-06-27T13:16:23Z,"Add edge-to-edge opt-in support (#52088)  Summary: This follows https://github.com/facebook/react-native/pull/47554  Compared to the initial proposal, I had to remove the `edgeToEdgeEnabled` property from the root `gradle.properties` and put it in the app `gradle.properties` instead (explaining the `AgpConfiguratorUtils.kt` / `GenerateEntryPointTask.kt` / `ProjectUtils.kt` / `PropertyUtils.kt` changes)  This PR: - Enable edge-to-edge for `MainActivity` (when `edgeToEdgeEnabled` is set to `true`) - Disable `StatusBar` `backgroundColor` and `translucent` (when `edgeToEdgeEnabled` is set to `true`) - Enforce `statusBarTranslucent` and `navigationBarTranslucent` on `Modal` when edge-to-edge is enabled - Add an `isEdgeToEdge` constant to `DeviceInfoModule` for [`react-native-is-edge-to-edge`](https://github.com/zoontek/react-native-edge-to-edge/tree/main/react-native-is-edge-to-edge) detection  ## Changelog:  <!-- Help reviewers and the release process by writing your own changelog entry.  Pick one each for the category and type tags:  [ANDROID|GENERAL|IOS|INTERNAL] [BREAKING|ADDED|CHANGED|DEPRECATED|REMOVED|FIXED|SECURITY] - Message  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests -->  - [Android] [Added] - Add edge-to-edge opt-in support  Pull Request resolved: https://github.com/facebook/react-native/pull/52088  Test Plan: - Update `enableEdgeToEdge` value in `packages/rn-tester/android/app/gradle.properties` - Recompile  https://github.com/user-attachments/assets/4c6beb98-fa88-427c-b62d-a42ffe5330f0  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76834213  Pulled By: alanleedev  fbshipit-source-id: c39b2cff1a5e94e31306e3b35651aa2de83d2fe6",200,54,254
facebook/react-native,78c9671c241a86bedb17862e549842b7e36d77ea,Nicola Corti,2025-06-27T12:00:05Z,"Migrate ThemedReactContext to Kotlin (#52309)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52309  This is another class going from Java to Kotlin. Thish should have no breaking changes, but I'll keep an eye to see if this is disruptive for users in the ecosystem.  I also haven't removed any of the Deprecated method, which can be cleaned up afterwards.  Changelog: [Android] [Changed] - Migrate ThemedReactContext to Kotlin  Reviewed By: javache  Differential Revision: D77374236  fbshipit-source-id: d1787b21897b01c45bbf841fdda00972e0be58db",157,208,365
facebook/react-native,d4bf1b7af047e5fd8c100990f0df831985c02f46,Alex Hunt,2025-06-27T11:49:28Z,Remove experimental notice from V2 API snapshot and build by default (#52301)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52301  Readying for imminent productionisation.  Changelog: [Internal]  Reviewed By: j-piasecki  Differential Revision: D77386064  fbshipit-source-id: 2769545eace4e6c09da0b2f0f34cf74b2fdcb730,14,25,39
facebook/react-native,a0d4e18020107f5796828679d054faf83f0d3610,generatedunixname89002005287564,2025-06-27T08:20:27Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactAndroid/src/main/jni/react/hermes/instrumentation (#52285)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52285  Reviewed By: cortinico  Differential Revision: D77359122  fbshipit-source-id: ad425cdfecf57210ae79a8bad25fde4896b476c1,4,12,16
facebook/react-native,fbd8281ab298e9efeee3b0758793ef66af656ab1,Soe Lynn,2025-06-26T21:44:36Z,"Back out ""Migrate `ReactDelegate` to Kotlin"" (#52304)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52304  Investigating javascript crash regression between Store APK v269 and v270 T228736366 with mid https://www.internalfb.com/logview/system_vros_javascripterrors/4a0131b8b79e3994b639c7ca212db717?ds=%7B%22start%22%3A%221750796919%22%2C%22constraints%22%3A[]%2C%22end%22%3A%22now%22%7D&ds_nux_type=task  We suspect that this diff stack may be causing the issue could be caused by this Kotlin migration diff stack D76908041  Changelog: [Internal] Reverting Kotlin migration for `ReactDelegate`  Reviewed By: gorodscy, mullender  Differential Revision: D77388940  fbshipit-source-id: 4a366205ea9c515a1561a4624b8d29e81ab9bae9",485,433,918
facebook/react-native,c360251b4a460375aa0e06d50647f52ee720eca9,Soe Lynn,2025-06-26T21:44:36Z,"Back out ""Adding `shouldForwardToReactInstance` check in ReactDelegate for Bridgeless"" (#52303)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52303  Investigating javascript crash regression between Store APK v269 and v270 T228736366 with mid https://www.internalfb.com/logview/system_vros_javascripterrors/4a0131b8b79e3994b639c7ca212db717?ds=%7B%22start%22%3A%221750796919%22%2C%22constraints%22%3A[]%2C%22end%22%3A%22now%22%7D&ds_nux_type=task  We suspect that this diff stack may be causing the issue could be caused by this Kotlin migration diff stack D76908041  Changelog: [Internal] Reverting Kotlin migration for ReactDelegate  Reviewed By: mullender  Differential Revision: D77388413  fbshipit-source-id: b144ca6db6f75614c7988e474ef89f19714a4a09",1,2,3
facebook/react-native,793023a4e24e8a284af6a98b1420ef58e7ae6776,Zeya Peng,2025-06-26T21:17:27Z,"Fewer calls to direct manipulation callback (#52296)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52296  ## Changelog:  [Internal] [Changed] - Fewer calls to direct manipulation callback  `NativeAnimatedNodesManager::onRender` is supposed to run each frame for c++ animation, from the callstack sample trace, the vast majority of time is spent on `updateNodes` (run update on all AnimatedNodes) and `commitProps` (where either Fabric ShadowTree commit or direct manipulation is called). Change in this PR is supposed to reduce time spent in `commitProps`  {F1979788964}  Reviewed By: sammy-SC  Differential Revision: D77380842  fbshipit-source-id: 2f25ca1fba4171a7b3e485298738379d0daff3ad",3,6,9
facebook/react-native,ffd6e5537d4c145e191e62c910ffd655f580f31b,Riccardo Cipolleschi,2025-06-26T21:15:45Z,Remove RCTPushNotificationManager from umbrella header (#52306)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52306  The RCTPushNotificationManager is deprecated and not part of the prebuilds as it is optional. We mistakenly added it to the umbrella header and nightlies do not work with prebuilds.  This change removes the header ad should fix the build.  ## Changelog: [Internal] -  Reviewed By: philIip  Differential Revision: D77395754  fbshipit-source-id: 66371650dc56f5be16a00319d9e4a1078a7b68bd,0,2,2
facebook/react-native,505588b9aac651dafba3a4384a1715c0e6ad6321,Sam Zhou,2025-06-26T20:24:24Z,Add annotations or make things readonly to prepare for object literal soundness fix in react-native (#52305)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52305  Changelog: [Internal]  Reviewed By: marcoww6  Differential Revision: D77386425  fbshipit-source-id: d69184abb1c8f7c516229aafe24dd418b5dd887e,49,56,105
facebook/react-native,a6a2884d63717a42ac2bafd2054991ce8b32a2e9,Nick Gerleman,2025-06-26T19:09:54Z,"Fix onTextLayout metrics not incorporating ReactTextViewManagerCallback (#52276)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52276  The line metrics reported do not process the Spannable, meaning their layout results may disagree with those used for measurement and display.  Changelog: [Android][Fixed] - Fix onTextLayout metrics not incorporating ReactTextViewManagerCallback  Reviewed By: lenaic  Differential Revision: D77261839  fbshipit-source-id: 87bdc86ce16a2ae9fa69532c5721c19567a53595",9,3,12
facebook/react-native,56ccc87e63712f024ecba82dfdb3b73555b72f1f,George Zahariev,2025-06-26T18:48:02Z,Enable experimental.pattern_matching=true [DO NOT SHIP] (#52302)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52302  Enable experimental.pattern_matching=true  Changelog: [internal]  Reviewed By: pieterv  Differential Revision: D77367102  fbshipit-source-id: a71352a58470c30fa7e466a67cb1909d80f0363e,0,1,1
facebook/react-native,ed756edd92932cee13ed7e209bf0b03ca63aa5d6,Soe Lynn,2025-06-26T18:21:43Z,"Back out ""Revert D76757706: [iOS][RN] Fix LegacyViewManagerInteropComponentDescriptor"" (#52269)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52269  Relanding the reverted PR.  Differential Revision: D77282452  fbshipit-source-id: 1480d8ab067bbbb1b41a9cd03315748c1311f910",188,60,248
facebook/react-native,d0770ce4251d6b6cb472c5fd078db4c949e791fa,Andrew Datsenko,2025-06-26T18:03:20Z,Introduce isOSS (#52222)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52222  Changelog: [Internal] Introduce environment option to force usage of OSS fantom test runner. If env is not set - check for BUCK file in tester which is checked in for FB but not for OSS.  Reviewed By: rubennorte  Differential Revision: D77160761  fbshipit-source-id: 1701ff140ff2be1bbeacfb4305e9f89089cacb42,184,110,294
facebook/react-native,e3f029fd178ad4a6b04bba627c8db755eb66e473,Samuel Susla,2025-06-26T17:51:32Z,"make VirtualView hidden when it is not visible on screen (#52294)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52294  changelog: [internal]  Views that are hidden provide couple perf benefits: - The layer is skipped during hit-testing, so the view no longer receives touches. - Compositing work for the layer is skipped, so nothing is uploaded to the GPU for that view.  Note, VirtualView still occupies space in memory and because this is infinite list and its numbers will grow unbounded.  In this diff, hidden = YES is only set when VirtualView does not participate in accessibility features.  Reviewed By: yungsters  Differential Revision: D76597973  fbshipit-source-id: 10eb36fccabba9e37cc6322ed5969b8502193a5f",41,0,41
facebook/react-native,afb2afec268fa6c124665075b13007e2d559be34,Riccardo Cipolleschi,2025-06-26T17:46:39Z,"Fix React-Fabric podspec to only use the sources for iOS (#52295)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52295  The current setup for several of our podspecs abuses the `**` globbing mechanism, forcing us to specify some excluded folders. By excplicitly mention the folders that we want to use on iOS, we can avoid the usage of the `exclude_files` property.  This should make the setup more reliable and it will also avoid to leak to OSS the presence of some folders we only use internally like `platform/macos` and `platform/windows`  ## Changelog: [Internal] -  Reviewed By: huntie  Differential Revision: D77381512  fbshipit-source-id: 4cb9118bf9f0ecd253d7d871341f733564d84c83",1,2,3
facebook/react-native,895f9b444acc9d90c0fac1daee0b9e14708091c8,Alex Hunt,2025-06-26T17:46:23Z,"Improve stable hash input for local type names (#52300)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52300  Targeted improvement to `versionExportedApis` (D77303917) to reduce noise.  This eliminates the false positive from a rename to a local (unexported) type, that does not structurally change the shape of exported types.  Changelog: [Internal]  Reviewed By: rubennorte  Differential Revision: D77314292  fbshipit-source-id: 4de90f5b5f1b622225762b2a73e386538000d54a",42,5,47
facebook/react-native,e50133a43dff812305c4483ade192558db908f63,Alex Hunt,2025-06-26T17:46:23Z,Support namespaced references in snapshot type versioning (#52299)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52299  Correctness improvement to the `versionExportedApis` transform (D77303917). Now handles namespaced references (e.g. `Animated.Value`) by redirecting to the locally defined type name.  Changelog: [Internal]  Reviewed By: cipolleschi  Differential Revision: D77314293  fbshipit-source-id: 6442d3ab0a3c8bebf6593455b1c2fb74266e657f,35,4,39
facebook/react-native,050fb25c14cf4dd3c8024201a8a1ca9310786cd5,Alex Hunt,2025-06-26T17:46:23Z,"Add debug flag to show versionExportedApis graph in output (#52298)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52298  Exposes the ability to output inline debug annotations for the `versionExportedApis` transform (D77303917) as a formalised `--debug-version-annotations` CLI flag.  This is helpful for debugging and future maintenance, and will be used to show the effect of the next diffs.  Changelog: [Internal]  Reviewed By: cipolleschi  Differential Revision: D77373723  fbshipit-source-id: 91c91abcb657ab88ee2f8209efccb4024602acc7",264,203,467
facebook/react-native,94987205ded7153c4eb78223c4fae790ea7a346a,Alex Hunt,2025-06-26T17:46:23Z,"Add versionExportedApis transform to JS API snapshot (#52292)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52292  Adds a new transform that annotates all exported symbols in our V2 JS API snapshot with a version hash based on the shape of all input types.  This intends to be a reliable mechanism to indicate how changes to local types will ultimately affect exported types.  **Advantages** (over our alternative type inlining prototype)  - More intuitive to developers — in that source type changes are preserved closer to their original source code shapes. - Enables useful Git blaming of individual exported APIs — hash for each export line will change every time a type is affected, and relevant commits can be looked up based on this. - Handles recursive types. - Can be **best-effort** with minimal structural effect over time. We are okay with false positives that over-match input type changes (these are refined later in the stack). - Similar to this, is **lower risk** in terms of requiring future updates that may pollute the diff of the body of the API snapshot structurally.  **Example change**  Example type change with multiple references: D77378010  {F1979784798}  ✅ 8 char hash based on input type shapes printed next to each root-exported identifier ✅ For a source change to the `AccessibilityProps` type, 33 dependent exported types are updated with a new hash  Changelog: [Internal]  Reviewed By: cipolleschi  Differential Revision: D77303917  fbshipit-source-id: 9d43a617697418218eb4951e8e9858d125e222b3",282,9,291
facebook/react-native,ffa6630243d6c7c6846771cb2f1ec25d3343d12a,Ruslan Shestopalyuk,2025-06-26T17:34:38Z,"Add API to get image loader instance from rncxx IMountingManager interface (#52293)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52293  # Changelog: [Internal] -  Adds a helper method to the `IMountingManager` API in order to get the platform specific image loader implementation, if available.  Reviewed By: christophpurrer  Differential Revision: D77379053  fbshipit-source-id: b7595d78c83e9270ec1818daf2d0f1d342661e52",5,0,5
facebook/react-native,47b2fe414075b40a29b53a22d8deccd1a538179d,Christian Falch,2025-06-26T17:25:35Z,"Refactored how we create umbrella, modulemap and header files (#52286)  Summary: To make sure we are exposing the same public API to swift as without prebuilt, this commit changes the follow:  - ModuleMap / Umbrella file is generated from template, not dynamically to align with non-prebuilt (cocoapods). This is temporary, we are already working toward a solution to generate them dynamically. - Headers are extracted by reading from podspec files and expanding their globs. This is now easy since we can use the podspec_sources function to look for file globs.  ## Changelog: [Internal] -  refactored header/umbrella/modulemap generation for prebuild  Pull Request resolved: https://github.com/facebook/react-native/pull/52286  Test Plan: - Run RN-tester with/without prebuilts - Create new RN app based on nightly, build with/without prebuiltsTo make sure we expose all the swift features that we should, we expose and declare a variable from React_RCTAppDelegate  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D77368255  Pulled By: cipolleschi  fbshipit-source-id: 88e2c9d1622753895c8667a9b5aeae4a0d332cc4",600,321,921
facebook/react-native,ff97ca313419ddbfaecb7e15b67b3010cfd1a5dc,Ruslan Lesiutin,2025-06-26T16:57:32Z,"Re-land Implement console.timeStamp  Summary: # Changelog: [Internal]  Adds support for experimental non-standardized `console.timeStamp` API for capturing performance entries on a timeline. The main idea of the API is to be highly performant. More details in the corresponding RCP [1].  NOTE: Because of the `jsinspector-modern` stack gating logic, this won't be installed in production builds. `console.timeStamp` will be polyfilled with a stub - D76987507.  Reviewed By: rubennorte  Differential Revision: D77374707  fbshipit-source-id: cb66b9fda06168f4b13af764afe95a63a0a8d5a0",530,0,530
facebook/react-native,0386b9bd5144b785af51c96ea6bada5c55127e98,pchalupa,2025-06-26T15:00:31Z,"Rename arguments of `onContentSizeChange` callback (#52291)  Summary: The argument names in the `onContentSizeChange` callback's type definition differ from the [documentation](https://reactnative.dev/docs/scrollview#oncontentsizechange).  ## Changelog:  <!-- Help reviewers and the release process by writing your own changelog entry.  Pick one each for the category and type tags:  [ANDROID|GENERAL|IOS|INTERNAL] [BREAKING|ADDED|CHANGED|DEPRECATED|REMOVED|FIXED|SECURITY] - Message  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests -->  [GENERAL] [FIXED] - Renamed argument names in the `onContentSizeChange` callback's type definition  Pull Request resolved: https://github.com/facebook/react-native/pull/52291  Test Plan: The IDE reflects updated argument names. ![Screenshot 2025-06-26 at 14 59 40](https://github.com/user-attachments/assets/1579998a-d9a8-4b98-a664-e5106ffb42f5)  Reviewed By: fabriziocucci  Differential Revision: D77373877  Pulled By: rshest  fbshipit-source-id: 2a171e1bc16103320f5ec31efab896f6b840fb96",3,1,4
facebook/react-native,49b7fff2a041aca5d8bfaa750d03ff26fc310b9f,Moti Zilberman,2025-06-26T14:59:16Z,Support IPv6 dev server URLs in legacy standalone RDT connection  Summary: Changelog: [Internal]  A minimal tweak to a legacy code path for React DevTools in React Native (**NOT** Fusebox!) that enables it to work / not crash when encountering an IPv6 dev server address. See doc comment for more.  Reviewed By: hoxyq  Differential Revision: D77150288  fbshipit-source-id: c11c742aad7b83861a1242dd13c5ed2753fbdf29,21,4,25
facebook/react-native,63d8d978f5545bae4ec3452e713d119b685de98c,Zeya Peng,2025-06-26T13:52:05Z,Reduce call to `folly::dynamic::object` insert and remove unnecessary AnimatedNode::update calls (#52270)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52270  ## Changelog:  [Internal] [Changed] - Reduce call to `folly::dynamic::object` insert and remove unnecessary AnimatedNode::update calls  Reviewed By: christophpurrer  Differential Revision: D77315659  fbshipit-source-id: 656d7bcc957126ee8fa5a7463223273a93d31369,13,37,50
facebook/react-native,556957d4583595e993aae0b8f92295fada75cd20,Jim Jetsada Machom,2025-06-26T13:09:05Z,Revert D76284119: Implement console.timeStamp  Differential Revision: D76284119  Original commit changeset: c87c6645fe32  Original Phabricator Diff: D76284119  fbshipit-source-id: 186b09de34c3bb3a80eb62d5c14b47d04ca5a8e0,0,530,530
facebook/react-native,7d841587003ff5aea82367626b4244757f7217b6,George Zahariev,2025-06-26T12:45:51Z,Deploy 0.274.1 to xplat (#52287)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52287   Deploy 0.274.1 to xplat  Changelog: [Internal]  Reviewed By: marcoww6  Differential Revision: D77349884  fbshipit-source-id: 44ebd2c111a6077dbf2e7beb60369283b2256feb,6,6,12
facebook/react-native,df0a2c847bac1d9c0322f1123e9701d153212ed3,Ruslan Lesiutin,2025-06-26T12:25:09Z,"Implement console.timeStamp (#52091)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52091  # Changelog: [Internal]  Adds support for experimental non-standardized `console.timeStamp` API for capturing performance entries on a timeline. The main idea of the API is to be highly performant. More details in the corresponding RCP [1].  NOTE: Because of the `jsinspector-modern` stack gating logic, this won't be installed in production builds. `console.timeStamp` will be polyfilled with a stub - D76987507.  Reviewed By: rubennorte  Differential Revision: D76284119  fbshipit-source-id: c87c6645fe32f56d84f5915ff57865cfd9723a47",530,0,530
facebook/react-native,53d7e0f43be25df8e5ead09677731b0c665d824e,Ruslan Lesiutin,2025-06-26T12:25:09Z,Move up forwardToOriginalConsole declaration (#52193)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52193  # Changelog: [Internal]  Will be re-used for `console.timeStamp` installation.  Reviewed By: motiz88  Differential Revision: D77027561  fbshipit-source-id: ef251541d67011acd21fe9b2be87f9ac1a85a01e,31,27,58
facebook/react-native,c612ae424ad58da0a5c5e9d3ef97bebecc5413ec,Ruslan Lesiutin,2025-06-26T12:25:09Z,"@react-native/js-polyfills: polyfill console.timeStamp (#52168)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52168  # Changelog: [Internal]  The main reason for the stub is to make sure this method is always installed. The actual implementation will be part of the `jsinspector-modern` stack, which is fully initialized in production builds.  Once there is a gurantee that RuntimeTarget globals are always installed in any environments, we can remove polyfills altogether.  Reviewed By: rubennorte, GijsWeterings  Differential Revision: D76987507  fbshipit-source-id: 2602af28f9e4359cf58dfafdf84802c0bf92372d",323,277,600
facebook/react-native,3ed1af8a3cb40aa729e2bec79d491b0402014785,Ruslan Lesiutin,2025-06-26T11:50:40Z,"Fix incorrect rebase, apply lost changes (#52288)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52288  # Changelog: [Internal]  Reviewed By: motiz88, rubennorte  Differential Revision: D77368159  fbshipit-source-id: 3beefb01d8e25596269c1212ce90864f39fd9f0c",49,34,83
facebook/react-native,fe0dc19131d80b67dc74442d8509bdb791369eaf,Alex Hunt,2025-06-26T11:20:04Z,Align devtoolsFrontendUrl within /json/list (#52289)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52289  The old `devtools://devtools/...` URL is **unsupported** with our modern debugger backend.  This reference was something we'd been intentionally leaving in place to preserve the old experience in Flipper — we can now remove.  Changelog: [Internal]  Reviewed By: motiz88  Differential Revision: D77368319  fbshipit-source-id: 400183e9bc477a887d66d79b412277971cf425e5,10,7,17
facebook/react-native,322142aab316c4e02f57c476f0ae7fdda46e9759,Jakub Piasecki,2025-06-26T10:37:05Z,Further reduce naming collisions in the API snapshot (#52281)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52281  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77355160  fbshipit-source-id: b1a59b3817b88bf6de953816fc272633b14b3a54,85,73,158
facebook/react-native,74ae2ae8b6d386ade47944f2da3aa37e433c68c3,Moti Zilberman,2025-06-26T10:22:17Z,Upgrade Electron to 36.3.0 (#52261)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52261  TSIA  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77244751  fbshipit-source-id: 97c45286d18d3b266e1acd33408ea6067504f790,6,6,12
facebook/react-native,df5cd55cdb2ebf620fec4df587cc72fb9b8c6509,Jakub Piasecki,2025-06-26T10:05:27Z,"Flatten built-in utility types in the API snapshot (#52280)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52280  Changelog: [Internal]  Adds a type-simplifyng transform for the API snapshot, with the goal of resolving some built-in TS types during build time. Most notably, it's able to simplify `Omit` structures emitted by the `flow-api-translator` when translating Flow's type spread operator.  It builds upon a simplified type inlining transform from the previous approach. The type inlining transform is able to handle inlining type references and resolution of built-in TS types on literal types: - `Omit` - `Readonly` - `Partial` - `keyof`  Reference inlining is performed top-down and built-in type resolution is performed bottom-up, which makes it possible for the second step to assume working on type literals.  Type simplifying transform uses the type inlining to reduce type references encountered inside `Omits` to their literal shapes, which makes possible to determine whether `Omit` is neccessary case-by-case. If `Omit` is redundant, it can be safely removed. If it's not, the omitted keys can be reduced to represent a subset of keys existing in the target type.  It also keeps the ability to resolve `Partial` and `Readonly` types on type literals, simplifying the snapshot further.  An example diff the transform can handle: Before: ``` export declare type AccessibilityProps = Readonly<   Omit<     AccessibilityPropsAndroid,     | keyof {         accessibilityActions?: ReadonlyArray<AccessibilityActionInfo>         accessibilityHint?: string         accessibilityLabel?: string         accessibilityRole?: AccessibilityRole         accessibilityState?: AccessibilityState         accessibilityValue?: AccessibilityValue         accessible?: boolean         ""aria-busy""?: boolean         ""aria-checked""?: ""mixed"" | (boolean | undefined)         ""aria-disabled""?: boolean         ""aria-expanded""?: boolean         ""aria-hidden""?: boolean         ""aria-label""?: string         ""aria-selected""?: boolean         ""aria-valuemax""?: AccessibilityValue[""max""]         ""aria-valuemin""?: AccessibilityValue[""min""]         ""aria-valuenow""?: AccessibilityValue[""now""]         ""aria-valuetext""?: AccessibilityValue[""text""]         role?: Role       }     | keyof AccessibilityPropsIOS   > &     Omit<       AccessibilityPropsIOS,       keyof {         accessibilityActions?: ReadonlyArray<AccessibilityActionInfo>         accessibilityHint?: string         accessibilityLabel?: string         accessibilityRole?: AccessibilityRole         accessibilityState?: AccessibilityState         accessibilityValue?: AccessibilityValue         accessible?: boolean         ""aria-busy""?: boolean         ""aria-checked""?: ""mixed"" | (boolean | undefined)         ""aria-disabled""?: boolean         ""aria-expanded""?: boolean         ""aria-hidden""?: boolean         ""aria-label""?: string         ""aria-selected""?: boolean         ""aria-valuemax""?: AccessibilityValue[""max""]         ""aria-valuemin""?: AccessibilityValue[""min""]         ""aria-valuenow""?: AccessibilityValue[""now""]         ""aria-valuetext""?: AccessibilityValue[""text""]         role?: Role       }     > & {       accessibilityActions?: ReadonlyArray<AccessibilityActionInfo>       accessibilityHint?: string       accessibilityLabel?: string       accessibilityRole?: AccessibilityRole       accessibilityState?: AccessibilityState       accessibilityValue?: AccessibilityValue       accessible?: boolean       ""aria-busy""?: boolean       ""aria-checked""?: ""mixed"" | (boolean | undefined)       ""aria-disabled""?: boolean       ""aria-expanded""?: boolean       ""aria-hidden""?: boolean       ""aria-label""?: string       ""aria-selected""?: boolean       ""aria-valuemax""?: AccessibilityValue[""max""]       ""aria-valuemin""?: AccessibilityValue[""min""]       ""aria-valuenow""?: AccessibilityValue[""now""]       ""aria-valuetext""?: AccessibilityValue[""text""]       role?: Role     } > ```  After: ``` export declare type AccessibilityProps = Readonly<   AccessibilityPropsAndroid &     AccessibilityPropsIOS & {       accessibilityActions?: ReadonlyArray<AccessibilityActionInfo>       accessibilityHint?: string       accessibilityLabel?: string       accessibilityRole?: AccessibilityRole       accessibilityState?: AccessibilityState       accessibilityValue?: AccessibilityValue       accessible?: boolean       ""aria-busy""?: boolean       ""aria-checked""?: ""mixed"" | (boolean | undefined)       ""aria-disabled""?: boolean       ""aria-expanded""?: boolean       ""aria-hidden""?: boolean       ""aria-label""?: string       ""aria-selected""?: boolean       ""aria-valuemax""?: AccessibilityValue[""max""]       ""aria-valuemin""?: AccessibilityValue[""min""]       ""aria-valuenow""?: AccessibilityValue[""now""]       ""aria-valuetext""?: AccessibilityValue[""text""]       role?: Role     } > ```  Reviewed By: huntie  Differential Revision: D77295302  fbshipit-source-id: 213aef46035bde4f9783353b5344a6986a418399",1977,0,1977
facebook/react-native,c6608685cb7acd3a8017c925de24728bf3d5d62f,Nick Lefever,2025-06-26T01:28:22Z,Mark prop diffing availability for codegen props (#52246)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52246  This diff adds the required override to codegen props to make the `FabricMountingManager` aware of the availability of a prop diffing implementation for native components using codegen props.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234066  fbshipit-source-id: 8e95628348f491c5ee08609bc7d7b3d30bc7151b,414,0,414
facebook/react-native,53ce247dbd702c2a728d309be10f6edb7dfabc89,Nick Lefever,2025-06-26T01:28:22Z,Add codegen for MixedType diffing (#52266)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52266  Native components may use `MixedType` properties in rare cases to hold untyped data. This diff adds support for serializing and prop diffing these types of props so that all of the props and object fields would be included in prop diffing results.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77307169  fbshipit-source-id: ae6b00207ef857c9cfa4bdf9c235972915410a29,14,3,17
facebook/react-native,e441954c823270521c4fed6e4cbfd0db01227329,Nick Lefever,2025-06-26T01:28:22Z,Add codegen for ArrayType diffing (#52244)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52244  The ArrayType props converts to std::vector. This prompted the need for `toDynamic(const T&)` conversion functions as this breaks to potential reliance on all type instances having a `toDynamic()` function available. This includes: - array of arrays types - array of objects types - object with arrays  The ArrayType conversion uses the availability of the `toDynamic` conversion methods for all supported types to convert the values stored by the `std::vector` to `folly::dynamic` values to be stored on a `folly::dynamic::array`.  The diff removes unnecessary conversion methods implemented previously for the core components prop diffing. These are now handled by the generic `toDynamic(const std::vector<T>&)` conversion method.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234065  fbshipit-source-id: 97a3b175ff07fe4a6de3adb14ee6cb42db1a2cfe,179,23,202
facebook/react-native,b50ad49a4df1ff046cd56e326f34e9e839c70427,Nick Lefever,2025-06-26T01:28:22Z,"Add codegen for ObjectType diffing (#52243)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52243  Building on the availability of `toDynamic` conversion methods for all supported property types, this diff adds support for diffing of `ObjectType` props.  The template adds the generation of a default comparator for the generated C++ struct. The struct also gains a `toDynamic` conversion method that will convert each property of the object type to a `folly::dynamic` value.  Primitive types make use of the implicit conversion supported by `folly::dynamic`, all other types are converted using `toDynamic`.  The `toDynamic` logic is implemented as a method defined on the struct to avoid increased binary size when required multiple times by the prop diffing implementation.  The external `toDynamic` conversion function calls the struct method directly. This enables support for converting object types using object types within their props.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234064  fbshipit-source-id: 21deb3104303aa374fb65b969af57a6aca6db38c",451,1,452
facebook/react-native,8c806ec31b15c2853e3aef94b89a0da5aa36c03f,Nick Lefever,2025-06-26T01:28:22Z,Add codegen for DimensionType diffing (#52242)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52242  Codegen supports `DimensionType` props which represents a YGValue. This diff adds a conversion to `folly::dynamic` supporting all the existing value types `YGValue` can represent.  This completes codegen support for all allowed `ReservedPropTypeAnnotation` prop types.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234061  fbshipit-source-id: 6c3aef5e3ab0459d8a68ebd8efaccfecb83b0b08,47,3,50
facebook/react-native,a164874b1a6aa7c28839d028c29c9da08e181b5e,Nick Lefever,2025-06-26T01:28:22Z,Add codegen for EnumType diffing (#52241)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52241  Add support for converting string and int32 enum types to `folly::dynamic` and generating the correct property diffing for it conditionally adding the prop value to the prop diff result.  This diff updates the template to convert the enum back to the original string representation provided from the JS side based on the current generated C++ enum value.  The string enum re-uses the existing `toString` conversion. The number enum generates the switch-case mapping required to map back the C++ enum value to the original value assigned to it.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234070  fbshipit-source-id: 8c669d5b2e21bd6022c6ba36149465495e4d4bf3,148,0,148
facebook/react-native,0031377ae6489bbca69393e703d864de49799008,Moti Zilberman,2025-06-25T20:49:00Z,"Correctly synchronise access to WebSocketDelegate  Summary: Changelog: [Internal]  Fixes a thread safety bug in the C++ platform's `InspectorPackagerConnectionDelegate::WebSocket` implementation. Since D60520747 `IWebSocketDelegate` event calls have been required to be made on the inspector thread, but the C++ platform was making them on the platform's WebSocket thread instead.  Reviewed By: christophpurrer  Differential Revision: D77150289  fbshipit-source-id: f57de05eaccbbe9db674076fc9e60f8d0dd243c5",35,15,50
facebook/react-native,6b85c54ef401bc0c2601bfcea20b5e4971da906a,Sam Zhou,2025-06-25T20:44:09Z,Add annotations to array and object literal declarations to fix future natural inference errors (#52267)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52267  Changelog: [Internal]  Reviewed By: marcoww6  Differential Revision: D77308192  fbshipit-source-id: 21fa2f6d3df632941327b9b2d7910b035f16b7d2,27,22,49
facebook/react-native,7e8eadc0415962e25f98ac3ea40a0de788fabd1e,Joe Vilches,2025-06-25T20:06:08Z,"Fix accessibility order example (#52271)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52271  In my haste I messed up a few of these. Either type in the text, or giving them props they should not have.  Changelog: [Internal]  Reviewed By: jorge-cab  Differential Revision: D77310876  fbshipit-source-id: 9c5a28285d4bb3673fe99630fa7ed97033b17904",9,19,28
facebook/react-native,bc7a9d9c4ece36bfe6ac45e49bed599e627a7e02,Moti Zilberman,2025-06-25T19:02:22Z,Add dev server host/port settings to ReactInstanceConfig (#52263)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52263  Changelog: [Internal]  Adds a bare-bones API to set the dev server host and port at the time of creating a `ReactInstance` in the C++ platform.  Reviewed By: rshest  Differential Revision: D77050457  fbshipit-source-id: 642dc96d3cb486a2e7faa177adcbf8a15b8fb668,21,17,38
facebook/react-native,167ec92f86af2b735b8959d776f061f374a377e2,Pieter De Baets,2025-06-25T16:30:08Z,"Consume ReactNativeAttributePayloadFabric from ReactNativePrivateInterface (#33616) (#52256)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52256  ## Summary  ReactNativeAttributePayloadFabric was synced to react-native in https://github.com/facebook/react-native/commit/0e42d33cbcfadcf5d787108da785d56a83d07a9f. We should now consume these methods from the ReactNativePrivateInterface.  Moving these methods to the React Native repo gives us more flexibility to experiment with new techniques for bridging and diffing props payloads.  I did have to leave some stub implementations for existing unit tests, but moved all detailed tests to the React Native repo.  ## How did you test this change?  * `yarn prettier` * `yarn test ReactFabric-test`  DiffTrain build for [7a3ffef70339c10f8d65a27b88cd73bfbe13eb8a](https://github.com/facebook/react/commit/7a3ffef70339c10f8d65a27b88cd73bfbe13eb8a)  Reviewed By: rubennorte  Differential Revision: D77296286  fbshipit-source-id: a26aa0fe0f7f1c8a42407d759351734a4c85f970",4,13,17
facebook/react-native,1348d7ee78b7e1d6693f0e87e4f7c7b18d5d0376,generatedunixname89002005287564,2025-06-25T15:23:43Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/jsc (#52250)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52250  Reviewed By: javache  Differential Revision: D77290996  fbshipit-source-id: 582a090ea0b0ab6171f625b7a2147607abef1cab,4,8,12
facebook/react-native,2ae154f650df7b8c2315e9d572bdd30b00708752,generatedunixname89002005287564,2025-06-25T15:08:12Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactAndroid/src/main/jni/first-party/fbgloginit/fb (#52251)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52251  Reviewed By: javache  Differential Revision: D77289931  fbshipit-source-id: ff61aa3a92a96492027c111ea2db25d5b86a777e,1,3,4
facebook/react-native,5ba0e1f97ad40f84d83efaa9cfdbaf9ad22a18e8,Vitali Zaidman,2025-06-25T14:54:55Z,"Improve how throws from components are reported to the console (#52050)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52050  Uncaught errors are currently raising a custom error to `console.error`: * With somewhat unclear messaging. * Only the **component stack** is reported. * The top-most stack leads to the component where the throw occurred and not to the actual error being thrown. * The actual error being thrown is never logged  After this change: * We print the actual error thrown * The *Owner stack* is attached  (see test plan for examples)  ## Changelog: [General][Breaking] Improve messaging and add error stack trace in console errors generated on throws from components.  ----  This is a breaking change because someone might be monkey-patching console.errors, or just listens to them.  Reviewed By: rickhanlonii  Differential Revision: D75080385  fbshipit-source-id: 824f30a804a3bb836ea1be7257784e56c00077c1",48,50,98
facebook/react-native,482f737ee164061683e70a47c14294409a8fd206,Jakub Piasecki,2025-06-25T14:47:38Z,Move stripping unstable identifiers earlier in the API Snapshot pipeline (#52260)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52260  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77304456  fbshipit-source-id: 2c623fa6d5b6c75e985dc8aa79872019582c50d5,18,1,19
facebook/react-native,02203f860826444aa8507e43f919d22130702f5a,Christian Falch,2025-06-25T14:36:56Z,"revert changes in ReactCodegen template (#52257)  Summary: After switching to the new backwards compatible cocoapods structure with prebuilts, we no longer need any change in the ReactCodegen template.  This commit fixes this.  ## Changelog:  [IOS] [FIXED] - revert changes in ReactCodegen template  Pull Request resolved: https://github.com/facebook/react-native/pull/52257  Test Plan: Build RN-tester with prebuilt  Reviewed By: cortinico  Differential Revision: D77303429  Pulled By: cipolleschi  fbshipit-source-id: d251d7d67b1c902082891ba705db5158c558e842",56,77,133
facebook/react-native,d6efe9a56f2eb11285f8b83e51dd6ac8ac3a6132,Mateo Guzmán,2025-06-25T14:21:27Z,Migrate `ReactContextBaseJavaModule` to Kotlin (#52210)  Summary: Migrate com.facebook.react.bridge.ReactContextBaseJavaModule to Kotlin.  ## Changelog:  [INTERNAL] - Migrate com.facebook.react.bridge.ReactContextBaseJavaModule to Kotlin  Pull Request resolved: https://github.com/facebook/react-native/pull/52210  Test Plan: ```bash yarn test-android yarn android ```  Reviewed By: rshest  Differential Revision: D77290330  Pulled By: cortinico  fbshipit-source-id: 1218af30c8a94ed11cc4db557ba34c7bfff2fc0c,33,44,77
facebook/react-native,0b4429a33e5cf01f1b2de053ed7516d9d45ef943,Andrew Datsenko,2025-06-25T13:20:10Z,Use RegExp instead of micromatch (#52234)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52234  Changelog: [Internal]  Use raw regex instead of micromatch as it depends on node imports.  Reviewed By: christophpurrer  Differential Revision: D77241819  fbshipit-source-id: c579b42f064f67c2e44e15e40ab6262f45a90797,13,13,26
facebook/react-native,ca647c13c22f60ef302ffdbf460d298f1367f3c5,Ruslan Lesiutin,2025-06-25T12:38:31Z,"Avoid copying strings when serializing TraceEvent / lock only on buffer operations (#52220)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52220  # Changelog: [Internal]  Mainly, 2 changes: 1. `PerformanceTracer::serializeTraceEvent(const TraceEvent& event)` -> `PerformanceTracer::serializeTraceEvent(TraceEvent&& event)` for less copies, actually move strings from the `TraceEvent` into the serialized `folly:object`. 2. When collecting events from the buffer, only lock when accessing buffer, not when serializing.  Reviewed By: rubennorte  Differential Revision: D77164969  fbshipit-source-id: c7dd84dd3c94dae22b89ffd4b229974e6d8084de",25,17,42
facebook/react-native,448fe573e079868db0fa4bf1e95bb9056888b511,Ruslan Lesiutin,2025-06-25T12:38:31Z,"Avoid potential copies of TraceEvent before serialization (#52196)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52196  # Changelog: [Internal]  Probably been overlooked for quite some time, but shouldn't be a bottleneck.  Reviewed By: motiz88  Differential Revision: D77148271  fbshipit-source-id: e8eb32137086d6c280aab2ec5903be03f96175ad",1,1,2
facebook/react-native,823414e691c882d0fcf9c489c00e0041ffedaee2,Ruslan Lesiutin,2025-06-25T12:38:31Z,"Avoid potential copies of TraceEvent when buffering (#52188)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52188  # Changelog: [Internal]  `buffer_.push_back` -> `buffer_.emplace_back`  I didn't measure if there were any runtime wins from this, because I don't expect there would be. Let's avoid potential copies, if possible.  Reviewed By: rubennorte  Differential Revision: D77053032  fbshipit-source-id: 80a0d3759bf95b1945ebe560806712bfa6a4f924",10,10,20
facebook/react-native,e5049091c561c54074463cb6b356bc33c2569574,Ruslan Lesiutin,2025-06-25T12:38:31Z,"refactor: well-defined behaviour (#52187)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52187  # Changelog: [Internal]  - `bool tracing_` -> `std::atomic<bool> tracingAtomic_`. - More doc-comments to explain the usage of mutex and atomics. - `PerformanceTracer::isTracing()` -> `inline PerformanceTracer::isTracing()`. - `uint64_t processId_` -> `const uint64_t processId_`.  The main change is that the boolean flag that controls ""if we are tracing"" is now atomic, which should eliminate potential data races. To avoid ""logic"" races, we are still going to lock mutex, and then check again. The use of `std::atomic` allows us to perform cheaper check first to avoid potentially unnecessary serializations from other systems that report events into `PerformanceTracer`.  Reviewed By: rubennorte  Differential Revision: D77053030  fbshipit-source-id: 82966055db0d75f828e7b95ad4c6cd7f18902265",46,41,87
facebook/react-native,818e62e977edda33b4598a2b754952e131fdfc2d,Samuel Susla,2025-06-25T12:33:49Z,fix crash in view culling when culling context is incorrectly compared (#52254)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52254  changelog: [internal]  View culling would generate incorrect mounting instructions because view culling context is checked before it is changed by a view.  Reviewed By: javache  Differential Revision: D77298889  fbshipit-source-id: 2f98dc4de90f34673ff6f627b597942d80fda865,10,10,20
facebook/react-native,3d97bac5f2dfbcf14858cdd470bb10d05b535fc9,Nick Lefever,2025-06-25T11:33:12Z,Add codegen for EdgeInset type diffing (#52239)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52239  Add `toDynamic` conversion function for `EdgeInset` which allowed for removing the custom conversion implemented for the `ViewProps`.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234069  fbshipit-source-id: 3aecad8a6d78468f0056167fa1523ccdfb68f369,18,9,27
facebook/react-native,9b82e706fb8db1e9fb5965908a583655c8c7c6fd,Nick Lefever,2025-06-25T11:33:12Z,Add codegen for PointPrimitive prop type diffing (#52238)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52238  Add prop diffing codegen for `PointPrimitive` prop type by adding a `toDynamic` conversion for the struct and the prop diffing conditional result update.  The addition of the `toDynamic` function will allow for converting the type when used in array and object types.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234062  fbshipit-source-id: d0f52e8fd78ac7712925ea2a47cdd0fe3392d5b0,16,28,44
facebook/react-native,da0938edfdaf18a1108a4daeded244808b022d18,Nick Lefever,2025-06-25T11:33:12Z,"Add toDynamic conversion function for ImageSource (#52237)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52237  For array props conversion following later in this stack, each type should have a toDynamic conversion available that can be called upon to convert all supported types to a `folly::dynamic` result.  This diff adds the toDynamic conversion function for `ImageSource`   Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77234063  fbshipit-source-id: 392cbaf172595936f7f66faa824900dadd58bdcf",16,10,26
facebook/react-native,dca83bc1589da41d6996b798091e2971595a55ae,Jakub Piasecki,2025-06-25T11:17:28Z,Move remaining transform to the typescript dir (#52247)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52247  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77284561  fbshipit-source-id: 46a5a9d00223283423b791456db3613abfc063aa,1,1,2
facebook/react-native,04858ecbab808ddca80e20e76f1359619bb5e865,Nicola Corti,2025-06-25T10:49:48Z,Bump AGP to 8.11.0 (#52248)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52248  Just keep the AGP version update.  Changelog: [Android] [Changed] - Bump AGP to 8.11.0  Reviewed By: rshest  Differential Revision: D77292284  fbshipit-source-id: 2d0bfe1b50e613690bc3cc6b81ae352136543fd4,2,2,4
facebook/react-native,d8e00f0bb1940fc9cc7e5cbb68b26c2d05824486,Christian Falch,2025-06-25T10:44:03Z,"Added backwards compatible use of prebuild through cocoapods (#52252)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52252  Instead of declaring two different sets of Pods for prebuilt and build from source, this commit now keeps the pod structure the same for both modes so that consuming libraries can expect to have the same pods and header files available - without this, libraries would have to be updated to take advantage of the prebuilds.  This PR does: - Added React-Core-prebuilt as a pod in React-Core if prebuilt is enabled - Simplified react_native_pods to keep pods structure and add React-Core-prebuilt pod if prebuilts are enabled - Added function for selecting source sets based on prebuilt/build from source  To be able to function both in prebuilt and in regular build from source mode, all podspecs are now using the switch function podspec_sources so that they only include header files if we are in prebuild mode.  Also added React-Core-prebuilt as dependency on React-Core if we are in prebuilt mode so that we install the React.XCFramework.  ## Changelog:  [IOS] [FIXED] - Added backwards compatible use of prebuild through cocoapods  Pull Request resolved: https://github.com/facebook/react-native/pull/52223  Test Plan: Tested in RN-Tester both with and without prebuild.  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D77296047  Pulled By: cipolleschi  fbshipit-source-id: f3eb4d56b2a78bfc8e10ad852746be1ceaf828b2",320,378,698
facebook/react-native,07f6f70aefb9cf0b9e3f21fe7594c5415a6a6364,Christian Falch,2025-06-25T10:44:03Z,Add missing RCTVibration target in SwiftPM (#52223)  Summary: `Package.swift` was missing the `RCTVibration` target. This commit adds this target.  ## Changelog:  [Internal] - Added RCTVibration to SwiftPM  Pull Request resolved: https://github.com/facebook/react-native/pull/52223  Test Plan: Tested in RN-Tester both with and without prebuild.  Reviewed By: cortinico  Differential Revision: D77257066  Pulled By: cipolleschi  fbshipit-source-id: 13c918387a2ed4a8e3941ddce8b7ba11c24eaab5,10,0,10
facebook/react-native,ece8ca82cd03460ba7ceda242e89bc71ba195e15,Alex Hunt,2025-06-25T09:55:42Z,"Update JS API snapshot to group exports in single block (#52235)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52235  Adds `organizeDeclarations` transform, replacing `sortTypeDefinitions`.  All `export declare ...` statements are now collected and represented at the end of the snapshot in a single `export {}` block — significantly improving readability and diffing.  Changelog: [Internal]  Reviewed By: j-piasecki  Differential Revision: D77150017  fbshipit-source-id: 1bd451c0e2a18fd6fc0504970b10a5d2502ac872",110,57,167
facebook/react-native,08a59c59e09fe3b92824e55d98cb7961d138a4ea,Tim Yung,2025-06-25T09:18:52Z,VirtualView: Minimize Events w/ Render State (#52245)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52245  Changes `VirtualView` to avoid dispatching redundant mode change events by reading the last committed `renderState` to determine whether the desired render state is already in effect.  This enables `VirtualView` to avoid dispatching synchronous `Visible` mode change events when a previous `Prerender` mode change event has already been committed.  Changelog: [Internal]  Reviewed By: lunaleaps  Differential Revision: D77271865  fbshipit-source-id: 75418aec1416995737f308a1beff407f2cedb940,267,41,308
facebook/react-native,fbd44ade3ab4657c668cd0cf8ef150a06af22e6e,Jakub Piasecki,2025-06-25T07:16:24Z,Change Animated methods' local names to avoid symbol collisions in the API snapshot (#52219)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52219  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77221690  fbshipit-source-id: 149711ee8c9d89c50178bf3d41de8b44fbc1d464,84,84,168
facebook/react-native,4f94028ca686cac8bf2b772de518d385879dbb06,Jakub Piasecki,2025-06-25T07:16:24Z,Reduce symbol collisions in the API snapshot (#52213)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52213  Changelog: [Internal]  Reviewed By: huntie  Differential Revision: D77207979  fbshipit-source-id: 10d8b9c8f24ddb52423197f5aa300402b1e45ebe,70,57,127
facebook/react-native,0a567a63cd65c6e1856d6fe5c3656fcaf6d24654,generatedunixname89002005287564,2025-06-25T05:55:27Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactAndroid/src/main/jni/first-party/fbgloginit (#52217)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52217  Reviewed By: javache  Differential Revision: D77211475  fbshipit-source-id: 22a89c5211ffc5f9f09ad27dc5e2597c6ceefd99,2,4,6
facebook/react-native,19ebd4c1886f17527b58bb1defe1fc8eb96881bb,Tim Yung,2025-06-25T05:33:07Z,VirtualView: Prerender w/o Window Focus (#52240)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52240  Changes `VirtualView` to detect when its window is not in a focused window (e.g. scroll position or layout changes when it is blurred) and to instead dispatch an async `Prerender` event instead of a sync `Visible` event.  This minimizes unnecessary main thread synchronous work that is needed for a view that is not important to the user experience.  Changelog: [Internal]  Reviewed By: mdvacca  Differential Revision: D77261958  fbshipit-source-id: 32acef9bc938005a0d73c5166f1741aebadf23bb,172,35,207
facebook/react-native,a2a72e239d7aad9226e1a091ba7b0d70e5af9884,George Zahariev,2025-06-25T00:55:57Z,Enable experimental Flow 'match' syntax for react-native-github/packages/react-native/src/private/components/virtualview/ (#52236)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52236  Enable experimental Flow 'match' syntax for `react-native-github/packages/react-native/src/private/components/virtualview/` and adopt in one case to see if there are any issues.  Changelog: [Internal]  Reviewed By: yungsters  Differential Revision: D77250963  fbshipit-source-id: 0b2a5817a05f3332031f0c0590fe956eaa74ddd3,6,7,13
facebook/react-native,fedceecc3731e387e531d3aaa170eba1914f5a9e,Cao Doan,2025-06-24T22:38:23Z,"Correct some cpp imports (#52212)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52212  Correcting some C++ imports that show up when build with Xcode 26: - Missing `<string>` imports. - `<tgmath.h>` is a deprecated C++ header file, which in this case can be substituted with `<cmath>`.  ## Changelog: [Internal]  [iOS][Fixed] - Fix deprecated C++ imports  Reviewed By: zhenma  Differential Revision: D77192276  fbshipit-source-id: 30c836947cb3eb54f6e7ac42b87fd2493334a4f4",5,4,9
facebook/react-native,e3047db0dc9caf06075554cc7abc0beb4f361aba,Sam Zhou,2025-06-24T19:58:53Z,Deploy 0.274.0 to xplat  Summary: Changelog: [Internal]  Reviewed By: gkz  Differential Revision: D77246379  fbshipit-source-id: 4a86da380109e85b5e1d53f5723f6ea07e6ea429,6,6,12
facebook/react-native,1e212f91bc7fd85d3d4e7b3a025937e98cd53297,Andrew Datsenko,2025-06-24T19:33:59Z,Add remaining dependencies (#52202)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52202  Changelog: [Internal]  Build fantom_tester for OSS  Reviewed By: mdvacca  Differential Revision: D76928253  fbshipit-source-id: a95e8751326f45a25cd512b7a5d05260b37a0305,342,217,559
facebook/react-native,4f1f72ea3483fe9b339c71fa465de998252882b0,Riccardo Cipolleschi,2025-06-24T19:05:51Z,"Fix downloading nightly prebuilds (#52233)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52233  When working on [c1bf39bfdf](https://github.com/facebook/react-native/commit/c1bf39bfdfaa0381be3a20d0d89ce159e482afe1) I forgot to add a `.body` to extract the body from the response.  As a result, we can't install prebuilds in a nightly.  This change fixes this.  ## Changelog: [Internal] -  Reviewed By: realsoelynn  Differential Revision: D77241914  fbshipit-source-id: 013ed927e1a3cd6476a551995577ade80c477dd7",3,3,6
facebook/react-native,fe1aacae6d1bd184118454526330f314b39a0647,Sam Zhou,2025-06-24T18:04:37Z,Pre-suppress errors in fbsource ahead of 0.274.0 release (#52232)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52232  Changelog: [Internal]  Reviewed By: gkz  Differential Revision: D77230727  fbshipit-source-id: 890b819ffa3ea9996fa11d254215ea1304ba02b4,6,1,7
facebook/react-native,a82b5acf3d04cc2907627de0f74837bcd52cbfa6,Jorge Cabiedes Acosta,2025-06-24T16:37:36Z,Fix jumping talkback triggering scroll when reaching a view with accessibilityOrder (#52231)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52231  Not calling `super.onInitializeAccessibilityNodeInfo` on the host view with accessibilityOrder prevents setting proper dimensions for the node that backs the view which leads TalkBack to trigger scrolling when under a ScrollVIew.  We still need the host's node to not be accessible so we still set it to not be focusable and not have a content description since this should be handled by the virtual views  Changelog: [Internal]  Reviewed By: joevilches  Differential Revision: D77180494  fbshipit-source-id: fe8794cf421cdc9548cf3e18a62d4bb3e8c26b09,3,1,4
facebook/react-native,8cc2874d3f654960122186e54f5a5dc599e9d1db,Jorge Cabiedes Acosta,2025-06-24T16:37:36Z,"Fix View Coopting View edge case on Android (#52066)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52066  Before, to disable views that were excluded from the order we were setting them to be not important for accessibility. This however breaks coopting behavior of parent views, because parent views will not announce content descriptions of children that are not important for accessibility.  Instead of disabling by setting `important for accessibility = no` now we just set `isFocusable = false` which disables focusing but still allows parent views to coopt  We also add functionality to restore view focusability when enabling disabling screen readers since `isFocusable` changes keyboard focusability and when screen readers are disabled we don't want to change it.  Changelog: [Internal]  Reviewed By: joevilches  Differential Revision: D76745057  fbshipit-source-id: cc237c5f8a4b894a7caa3e34207080777de440ac",73,5,78
facebook/react-native,d012b2c19b14c8634458a401dd5b61ab3b7e2699,Alex Hunt,2025-06-24T16:15:53Z,Fix stripUnstableApis to match type alias declarations (#52229)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52229  Changelog: [Internal]  Reviewed By: j-piasecki  Differential Revision: D77148443  fbshipit-source-id: 423da38dfe5ca42e639e274461868a51e9987384,5,0,5
facebook/react-native,cfc6960bc4aa2d03be6f6f1f3d57a30061e71fbe,Alex Hunt,2025-06-24T16:15:53Z,"Update all transforms to apply sequentially (#52228)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52228  To avoid unexpected behaviour, apply all Babel transforms within `build-types` sequentially, so that each transform plugin has an accurate starting AST.  Changelog: [Internal]  Reviewed By: j-piasecki  Differential Revision: D77148444  fbshipit-source-id: f86beac12b7a08ef800e28db1ff88755970cf64e",57,28,85
facebook/react-native,ef742dbc68bacbfadbc647e6100643975555e11c,Alex Hunt,2025-06-24T16:15:53Z,Subfolder build-types transforms by language (#52230)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52230  Reorganisation/refactoring.  Changelog: [Internal]  Reviewed By: j-piasecki  Differential Revision: D77148446  fbshipit-source-id: fd29c6d47347efd5ad3da933b2112e864064dba7,32,38,70
facebook/react-native,11a1ad7a98a71cd1189550a8ae5666e5a2ed8d57,Alex Hunt,2025-06-24T15:55:21Z,Expose *AnimationConfig types (#52227)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52227  Changelog: [General][Added] - Expose additional `*AnimationConfig` types on the `Animated` namespace  Differential Revision: D77222030  fbshipit-source-id: 8fd01d820c3c8d6e952a4115578ecc83ae7a0d0f,8,1,9
facebook/react-native,b01a5f91fedc19495e8a9d6ce079feb5898e7b87,Alex Hunt,2025-06-24T15:55:21Z,Expose Animated.InterpolationConfig type (#52224)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52224  Changelog: [General][Added] - `InterpolationConfig` is now exposed on the `Animated` namespace  Differential Revision: D77222031  fbshipit-source-id: c64c2f348bc899c598ee86c637300037a5a8de6f,2,0,2
facebook/react-native,65ae3dafcdb4a8346799ebfe8c3684ff0d56e691,Mateo Guzmán,2025-06-24T15:06:13Z,Migrate `UIManagerHelper` to Kotlin (#52209)  Summary: Migrate com.facebook.react.uimanager.UIManagerHelper to Kotlin.  ## Changelog:  [INTERNAL] - Migrate com.facebook.react.uimanager.UIManagerHelper to Kotlin  Pull Request resolved: https://github.com/facebook/react-native/pull/52209  Test Plan: ```bash yarn test-android yarn android ```  Reviewed By: javache  Differential Revision: D77210140  Pulled By: cortinico  fbshipit-source-id: 7a6669a6d92d33241d3f42edbabf20170a5a6ddf,242,245,487
facebook/react-native,d3495fd16265c9fe09a8629369e7cde5865bf251,Mateo Guzmán,2025-06-24T15:03:22Z,Migrate `ReactApplicationContext` to Kotlin (#52208)  Summary: Migrate com.facebook.react.bridge.ReactApplicationContext to Kotlin.  ## Changelog:  [INTERNAL] - Migrate com.facebook.react.bridge.ReactApplicationContext to Kotlin  Pull Request resolved: https://github.com/facebook/react-native/pull/52208  Test Plan: ```bash yarn test-android yarn android ```  Reviewed By: javache  Differential Revision: D77209812  Pulled By: cortinico  fbshipit-source-id: 2dae094d363e60efe05b4f2b3d55f0f84d921495,22,27,49
facebook/react-native,252e1345bfe890bf786f50af471adcc48995ad35,Andrew Datsenko,2025-06-24T14:24:41Z,Move fantom into OSS (#52201)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52201  Changelog: [Internal]  Moving fantom tester into OSS.  Reviewed By: rubennorte  Differential Revision: D76928252  fbshipit-source-id: 3faf4a236eacba17896e0a440bac7a5032d063f9,1425,62,1487
facebook/react-native,dd1b795abe09c1a0205673d3b0cd332a577203d4,Andrew Datsenko,2025-06-24T14:24:41Z,Introduce react_native_android_dep (#52194)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52194  Changelog: [Internal]  Introducing a way to include sources and deps via function that react_native_android_dep.  This will help with Fantom OSS build.  Reviewed By: cortinico  Differential Revision: D77146189  fbshipit-source-id: 06b09d433741506bc1f58fbf1f9e6add9a9cff91,149,41,190
facebook/react-native,c125f306c2b2f10317c5aac7491c4acc40ff0ef8,Mateo Guzmán,2025-06-24T13:36:11Z,"Kotlin: fix static code analysis weak warnings (4/n) (#52207)  Summary: Static code analysis reports several weak warnings, many of which seem to be leftovers after Kotlin migration. This PR addresses quite a few:  - [Redundant curly braces in string template](https://www.jetbrains.com/help/inspectopedia/RemoveCurlyBracesFromTemplate.html) - [Redundant call to toString() in string template](https://www.jetbrains.com/help/inspectopedia/RemoveToStringInStringTemplate.html)  ## Changelog:  [INTERNAL] - Kotlin: fix static code analysis weak warnings (4/n)  Pull Request resolved: https://github.com/facebook/react-native/pull/52207  Test Plan: ```sh yarn android yarn test-android ```  Reviewed By: javache  Differential Revision: D77209873  Pulled By: cortinico  fbshipit-source-id: 2bf5fcf7dcbf02632e721aab0688f73d15f220b9",18,23,41
facebook/react-native,03ab6a3098cc10b0035ff6cf93b0a7094d0ca0fb,Alex Hunt,2025-06-24T13:31:04Z,Add nocommit to V2 JS API snapshot (#52200)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52200  Remains in an experimental format. Add `\nocommit` to prevent accidental inclusion in the repo right now.  Also disable ESLint rule `redundant-undefined/redundant-undefined`.  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77150743  fbshipit-source-id: 645e7db5af2c2a648eef7c8f7e324bc1264b8065,4,0,4
facebook/react-native,46b562b9b3bf4c0b8c5af25ab84a43509979c4a7,Riccardo Cipolleschi,2025-06-24T13:01:36Z,"Ship the new React-Core-prebuilt.podspec in the package.json (#52221)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52221  It is currently not possible to use prebuilds, because we are missing the `React-Core-prebuilt.podspec` from the npm package we publish.  This change should fix it.  ## Changelog: [iOS][Added] - Ship the `React-Core-prebuilt.podspec` in the package.json  Reviewed By: cortinico  Differential Revision: D77223271  fbshipit-source-id: ab068e1711fdd86f3f0069dc9aa3c0a591fcd26b",1,0,1
facebook/react-native,c1bf39bfdfaa0381be3a20d0d89ce159e482afe1,Riccardo Cipolleschi,2025-06-24T13:01:36Z,Fix download of nightlies with SwiftPM (#52215)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52215  We were not handling the download of the XML properly. Using `Net::HTTP.get` will directly return the body and that won't let us check on the status code of the response.  ## Changelog: [Internal] - use get_response instead of get when downloading the maven metadata  Reviewed By: cortinico  Differential Revision: D77216121  fbshipit-source-id: 4da0abff1624c687977a7b77db8a15f19e6b887d,6,7,13
facebook/react-native,f238b74658fd155366d4909872ab06781403f31d,nishan (o^▽^o),2025-06-24T12:10:30Z,"- Use CAGradientLayer for radial gradient (#52117)  Summary: This PR replaces Core Graphics implementation with Core Animation for radial gradients. I found that `endPoints` for radial gradient type works differently than linear gradient type. The `endPoint.x` accounts for horizontal length and `endPoint.y` accounts for vertical. This makes it possible to draw ellipse gradients. So we don't need the core graphics API anymore.  ## Changelog:  [IOS] [CHANGED] - Optimised Radial Gradients.  <!-- Help reviewers and the release process by writing your own changelog entry.  Pick one each for the category and type tags:  For more details, see: https://reactnative.dev/contributing/changelogs-in-pull-requests  Pull Request resolved: https://github.com/facebook/react-native/pull/52117  Test Plan: Non breaking change. Test Radial gradient example from RNTester. Compare results with web, android and iOS. Each platform should render the gradients identically.  Reviewed By: rshest  Differential Revision: D77140709  Pulled By: javache  fbshipit-source-id: 6e3ad9fcf8e819d340ccf5f5946beb140e616cb0",70,70,140
facebook/react-native,76e2ab4ac8a911dd2ed062773694ca15f61d5bb9,Mateo Guzmán,2025-06-24T11:55:33Z,"Kotlin: fix static code analysis weak warnings (3/n) (#52206)  Summary: Static code analysis reports several weak warnings, many of which seem to be leftovers after Kotlin migration. This PR addresses quite a few:  - [Return or assignment can be lifted out](https://www.jetbrains.com/help/inspectopedia/LiftReturnOrAssignment.html) - [Verbose nullability and emptiness check](https://www.jetbrains.com/help/inspectopedia/VerboseNullabilityAndEmptiness.html) - [Size check can be replaced with 'isNotEmpty()'](https://www.jetbrains.com/help/inspectopedia/ReplaceSizeCheckWithIsNotEmpty.html)  ## Changelog:  [INTERNAL] - Kotlin: fix static code analysis weak warnings (3/n)  Pull Request resolved: https://github.com/facebook/react-native/pull/52206  Test Plan: ```sh yarn android yarn test-android ```  Reviewed By: javache  Differential Revision: D77209766  Pulled By: cortinico  fbshipit-source-id: c154ec6578125c16ad37c9dd15295a2edcacee4a",44,49,93
facebook/react-native,35dba097243ff2d21466f860ec9831e1ff2a97ac,Mo Javad,2025-06-24T11:34:46Z,"Add explicit Build Tools Version to RN Tester Android App Benchmark (#52216)  Summary: After bumping to SDK version 36, the build process for Android was still pulling in SDK v35 unnecessarily. This PR fixes that issue.  ## Changelog:  [ANDROID] [FIXED] - Added explicit build tool version to RN Tester build.gradle to avoid automatic installation of Android SDK Build Tools.  Pull Request resolved: https://github.com/facebook/react-native/pull/52216  Test Plan: Tested in fork pipeline to ensure it's working correctly.  This is the logs from the pipeline before: ![image](https://github.com/user-attachments/assets/9dc7f158-8dea-437e-836e-e5f500b3d5ff)  And this is after the fix: ![image](https://github.com/user-attachments/assets/c6cc1c0a-5823-41cb-ba32-027b69d6eaa6)  Reviewed By: rshest  Differential Revision: D77219569  Pulled By: cortinico  fbshipit-source-id: 7a0ca462d00bfc4b015a30807aaef999ff60c719",1,0,1
facebook/react-native,9e96acbd0f4476453b62d9c80409b299b505c260,Mateo Guzmán,2025-06-24T10:40:58Z,"Kotlin: fix static code analysis weak warnings (2/n) (#52205)  Summary: Static code analysis reports several weak warnings, many of which seem to be leftovers after Kotlin migration. This PR addresses:  - [Kotlin Java methods should be replaced with Kotlin analog](https://www.jetbrains.com/help/inspectopedia/ReplaceJavaStaticMethodWithKotlinAnalog.html)  ## Changelog:  [INTERNAL] - Kotlin: fix static code analysis weak warnings (2/n)  Pull Request resolved: https://github.com/facebook/react-native/pull/52205  Test Plan: ```sh yarn android yarn test-android ```  Reviewed By: javache  Differential Revision: D77209667  Pulled By: cortinico  fbshipit-source-id: 09b01a170abf43248b8fdb6a08498d278b9d03bd",44,32,76
facebook/react-native,40b8f4ad224d0f4299a0c8e4acfec900b6178e8d,Alex Hunt,2025-06-24T09:57:34Z,Adjust source types for better output (#52199)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52199  Minor fixes to naming and generic type compatibility (→ TypeScript).  Changelog: [Internal]  Reviewed By: cortinico  Differential Revision: D77148914  fbshipit-source-id: 2d3e65170f261b97ea8cf705d1a40a6f7bc5bcc7,6,6,12
facebook/react-native,3306691d643374e9534b33ff842b40e0aa747864,George Zahariev,2025-06-24T02:19:50Z,Update hermes-parser and related packages in xplat and socialvr to 0.29.0 (#52211)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52211  Update hermes-parser and related packages in xplat and socialvr to 0.29.0  Changelog: [Internal]  Blocked on: https://fb.workplace.com/groups/relay.support/posts/28766057099682865  Reviewed By: SamChou19815  Differential Revision: D77004095  fbshipit-source-id: 5400ac07c0cbf1f9709d374929d842af9dd15d08,61,42,103
facebook/react-native,f184b591cfb49ed372efb0bdd55a145230112f45,Antonio Pires,2025-06-23T19:13:02Z,"adding `scrollTo`, and imperative handle exports for ScrollView (#52204)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52204  Changelog: [General][Added] - Expose `ScrollViewImperativeMethods` and `ScrollViewScrollToOptions` types to public API  Reviewed By: huntie  Differential Revision: D76920770  fbshipit-source-id: 01b0a2788f7b8a3bad0b57e24b04a7380233ac34",4,0,4
facebook/react-native,62d8d306520b6dc18e2790cd767cd42bb62bc548,Joe Vilches,2025-06-23T18:07:52Z,Revamp the accessibility order example in RNTester (#52122)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52122  Would love to have a place with all the edge cases we can come back to when we try and tweak things.  Changelog: [Internal]  Reviewed By: NickGerleman  Differential Revision: D76942595  fbshipit-source-id: ce6e293e2c068383e54404af71a29a0586dbc04e,374,37,411
facebook/react-native,60967fdffb164c318a3a741f332978562814d078,generatedunixname89002005287564,2025-06-23T16:55:44Z,Fix CQS signal modernize-use-nullptr in xplat/js/react-native-github/packages/react-native/ReactCommon/react/renderer/components/textinput/platform/android/react/renderer/components/androidtextinput (#52145)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52145  Reviewed By: javache  Differential Revision: D77010402  fbshipit-source-id: db2823f888b1fca279ff13f8a323e074fcdf61f0,1,1,2
facebook/react-native,4b91b630945b3d0f82656791d089451066aad538,Zane Bauman,2025-06-23T16:55:32Z,"fix: add missing `getNativeScrollRef` type for `ScrollView` (#52203)  Summary: ### The Problem  When trying to measure the location of a `View` within a `ScrollView` (ie. for scrolling to the view), the current recommended method is to use `measureLayout` on the nested view to determine its location inside the containing scroll view:  ```tsx const MyComponent = () => {   const scrollViewRef = useRef<ScrollView>(null);   const nestedViewRef = useRef<View>(null);    const scrollToNestedView = () => {     if (!scrollViewRef.current || !nestedViewRef.current) {       return;     }      nestedViewRef.current.measureLayout(       scrollViewRef.current.getInnerViewNode(),       (x, y) => { scrollViewRef.current.scrollTo({ y, animated: true }); },     );   }    return (     <ScrollView ref={scrollViewRef}>       <View ref={nestedViewRef}>         { /* content */ }       </View>     </ScrollView>   ); } ```  This is valid in the Typescript types layer. However, the only two methods on `ScrollView` to use in this scenario that are [available in the type definitions](https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Components/ScrollView/ScrollView.d.ts#L830) are `getScrollableNode` and `getInnerViewNode` – both of these methods [return a `number`](https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Components/ScrollView/ScrollView.js#L139-L140). The issue is that a `number` not a valid value to use with `measureLayout` because [its source returns early for that type](https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricHostComponent.js#L91-L102).  (Note, you can also use `findNodeHandle` with the scroll view ref, but this also returns a `number`.)  ### The Solution  The long-term solution would be to update the types for both `measureLayout` and `ScrollView`. However, that would constitute a breaking change and require some fairly expansive updates. Instead, I am proposing an additive solution.  `ScrollView` has [a public method called `getNativeScrollRef`](https://github.com/facebook/react-native/blob/e69f0726cd2616fb112d2e4fabfeaafc8cada5d7/packages/react-native/Libraries/Components/ScrollView/ScrollView.js#L142) which returns the underlying `HostInstance`. This method correctly works in the runtime layer, but is not supported in the types layer. This PR exposes the public method in the type definition so that we can properly access the underlying instance without using `ts-ignore`.  ## Changelog:[GENERAL] [FIXED] - Expose `ScrollView.getNativeScrollRef` on the type definition to allow accessing the underlying `HostInstance`.  Pull Request resolved: https://github.com/facebook/react-native/pull/52203  Test Plan: None needed. This is only a type update exposing existing functionality.  Reviewed By: cortinico  Differential Revision: D77153959  Pulled By: rshest  fbshipit-source-id: 5880695da85406ed9fe49a1b736b5754db0e6382",7,0,7
facebook/react-native,7f7655d7113f5f018e24d8d8404412c764eb23ee,generatedunixname89002005287564,2025-06-23T16:52:30Z,Fix CQS signal modernize-concat-nested-namespaces in xplat/js/react-native-github/packages/react-native/ReactCommon/cxxreact (#52146)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52146  Reviewed By: javache  Differential Revision: D77014011  fbshipit-source-id: 35afa03482c9a4d1fe11325421615a7214337e2a,14,36,50
facebook/react-native,76e04fac820c38b86df46ab6673643999b0730cc,Dawid Małecki,2025-06-23T16:39:44Z,"Replace shelljs in run-ci-javascript-tests.js (#52095)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52095  This diff removes `shelljs` from `run-ci-javascript-tests.js` and replaces `echo, exec, and exit` methods.  ### Motivation  Decrease number of references to `shelljs` across the react-native-github.  Changelog: [Internal]  Reviewed By: NickGerleman  Differential Revision: D76512374  fbshipit-source-id: 6e02901b570cf9a36bd13a075106a7066a85a2d9",23,24,47
facebook/react-native,18f4db44ef109668dc1e59180dd4ed8bf275e6f5,Rubén Norte,2025-06-23T15:34:50Z,"Clean up dead logic in RuntimeScheduler_Modern and simplify logic (#52192)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52192  Changelog: [internal]  When we shipped the event loop we removed the need to run only expired tasks in `RuntimeScheduler_Modern`, but we never cleaned up the code properly. This does it.  Reviewed By: javache  Differential Revision: D77142978  fbshipit-source-id: f808edf80a134f487723fa36ab7a3593e4efe2d3",16,34,50
facebook/react-native,251eb3fd4c522c2624e14f96954e47c386bdba84,Rubén Norte,2025-06-23T15:34:50Z,Log task ID when scheduling and executing tasks in RuntimeScheduler (#52191)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52191  Changelog: [internal]  Some time ago we added logging for the timer ID in Systrace/Perfetto so we could see where timers were scheduled vs. executed.  This diff adds support for the same functionality for tasks in the runtime scheduler.  Reviewed By: javache  Differential Revision: D77039038  fbshipit-source-id: 792d2fe29b44fb209f9129f46f9d661dad7ebdff,26,17,43
facebook/react-native,3782fe865dd881b6c261c05dd8fc36bdd54b7347,Rubén Norte,2025-06-23T15:34:50Z,Improve tracing metadata for IntersectionObserverManager (#52190)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52190  Changelog: [internal]  This adds some tracing metadata to IntersectionObserver to contextualize the performance of certain operations (logging how many observers it's processing).  Reviewed By: javache  Differential Revision: D77039037  fbshipit-source-id: 9cee79ac0509f57e4658a16142f3fe2d10d71fdf,11,4,15
facebook/react-native,5742227dd839129fa4be1fcfd6921091c1b6e6ad,Rubén Norte,2025-06-23T15:34:50Z,Add Fantom benchmark for RuntimeScheduler (#52189)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52189  Changelog: [internal]  This creates a benchmark to measure the changes in performance in RuntimeScheduler.  Reviewed By: javache  Differential Revision: D77142979  fbshipit-source-id: 1a6e6824f4c6fdb8d2c5cbad77fb4b8ba406ef29,73,4,77
facebook/react-native,90654e4ba2f3cc2f6b0d8f08769ce58b4e5d1b51,Christian Falch,2025-06-23T15:13:56Z,"Integrate React Core prebuilds with apps (#52138)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52138  Integrate React Core prebuilds with apps  ## Context This PR introduces the first working version of building React Native apps on iOS using prebuilt RNCore and cocoapods.  - Added React-Core-prebuilt.podspec for installing/consuming XCFrameworks - Added logic in react_native_pods.rb for switching between build from source and using prebuilts - Added rncore.rb - utilities for the ReactCore prebuilts - Updated rndependencies with some extra error handling modelled after rncode.rb - Added support for hard linking headers and modules in each inner framework in the XCFramework in xcframework.js  ## Swift: To enable support for the objective-c types from swift, the swift compiler uses a module map to gather exports from the framework (module.modulemap). This file basically points to an umbrella header file that exports the valid objective-c types (non c++) to Swift. In addition these files are read from the DerivedData and not the project source - so it is a bit hard to control everyting.  I was initially not able to use cocoapods own module definitions (module_name, module_file props) to use a custom module map. I finally found that these files are expected in the deriveddata (build folder) where only the active inner framework is copied - so then I had to hard link both module map and header files for each arch.  ## Changelog:  [IOS] [ADDED] - Added support for using prebuilt RNCore with Cocoapods  Pull Request resolved: https://github.com/facebook/react-native/pull/52109  Test Plan: Run with RN Tester. We need to remove all extra pods from RNTester pod file since none of them are yet compatible with prebuilt (they reference non-prebuilt pods)  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76980286  Pulled By: cipolleschi  fbshipit-source-id: 0ef34599cf7a60e54f799708bce93bcf6fb9d950",84,76,160
facebook/react-native,60c01b4715053bccbeca2673ff1be1fca60bce9b,Christian Falch,2025-06-23T15:13:56Z,"Update RNDependencies podspec to fail fast if framework is missing (#52134)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52134  Update RNDependencies podspec to fail fast if framework is missing  ## Context This PR introduces the first working version of building React Native apps on iOS using prebuilt RNCore and cocoapods.  - Added React-Core-prebuilt.podspec for installing/consuming XCFrameworks - Added logic in react_native_pods.rb for switching between build from source and using prebuilts - Added rncore.rb - utilities for the ReactCore prebuilts - Updated rndependencies with some extra error handling modelled after rncode.rb - Added support for hard linking headers and modules in each inner framework in the XCFramework in xcframework.js  ## Swift: To enable support for the objective-c types from swift, the swift compiler uses a module map to gather exports from the framework (module.modulemap). This file basically points to an umbrella header file that exports the valid objective-c types (non c++) to Swift. In addition these files are read from the DerivedData and not the project source - so it is a bit hard to control everyting.  I was initially not able to use cocoapods own module definitions (module_name, module_file props) to use a custom module map. I finally found that these files are expected in the deriveddata (build folder) where only the active inner framework is copied - so then I had to hard link both module map and header files for each arch.  ## Changelog:  [IOS] [CHANGED] - Fail fast when pod install i f using prebuild if frameworks are not present in the disk.  Pull Request resolved: https://github.com/facebook/react-native/pull/52109  Test Plan: Run with RN Tester. We need to remove all extra pods from RNTester pod file since none of them are yet compatible with prebuilt (they reference non-prebuilt pods)  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76980282  Pulled By: cipolleschi  fbshipit-source-id: 6ab029d0cb06e2f0a3d99ea9fc7b375865e7a966",14,1,15
facebook/react-native,69e028da45471dfd1f65bc630a71ec4ece9e57fb,Christian Falch,2025-06-23T15:13:56Z,"Update the xcframework.js script to support swift (#52135)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52135  Update the xcframework.js script to support Swift  ## Context This PR introduces the first working version of building React Native apps on iOS using prebuilt RNCore and cocoapods.  - Added React-Core-prebuilt.podspec for installing/consuming XCFrameworks - Added logic in react_native_pods.rb for switching between build from source and using prebuilts - Added rncore.rb - utilities for the ReactCore prebuilts - Updated rndependencies with some extra error handling modelled after rncode.rb - Added support for hard linking headers and modules in each inner framework in the XCFramework in xcframework.js  ## Swift: To enable support for the objective-c types from swift, the swift compiler uses a module map to gather exports from the framework (module.modulemap). This file basically points to an umbrella header file that exports the valid objective-c types (non c++) to Swift. In addition these files are read from the DerivedData and not the project source - so it is a bit hard to control everyting.  I was initially not able to use cocoapods own module definitions (module_name, module_file props) to use a custom module map. I finally found that these files are expected in the deriveddata (build folder) where only the active inner framework is copied - so then I had to hard link both module map and header files for each arch.  ## Changelog:  [INTERNAL] - Update the xcframework.js script to support Swift  Pull Request resolved: https://github.com/facebook/react-native/pull/52109  Test Plan: Run with RN Tester. We need to remove all extra pods from RNTester pod file since none of them are yet compatible with prebuilt (they reference non-prebuilt pods)  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76980285  Pulled By: cipolleschi  fbshipit-source-id: 4e5486b79c406ba4b375e2ada24cbe5450e2346f",115,5,120
facebook/react-native,152cb538f69cd07422526802defe3f3617302098,Christian Falch,2025-06-23T15:13:56Z,"Update ReactCodegen to support Core prebuilds (#52137)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52137  Update ReactCodegen to support Core prebuilds  ## Context This PR introduces the first working version of building React Native apps on iOS using prebuilt RNCore and cocoapods.  - Added React-Core-prebuilt.podspec for installing/consuming XCFrameworks - Added logic in react_native_pods.rb for switching between build from source and using prebuilts - Added rncore.rb - utilities for the ReactCore prebuilts - Updated rndependencies with some extra error handling modelled after rncode.rb - Added support for hard linking headers and modules in each inner framework in the XCFramework in xcframework.js  ## Swift: To enable support for the objective-c types from swift, the swift compiler uses a module map to gather exports from the framework (module.modulemap). This file basically points to an umbrella header file that exports the valid objective-c types (non c++) to Swift. In addition these files are read from the DerivedData and not the project source - so it is a bit hard to control everyting.  I was initially not able to use cocoapods own module definitions (module_name, module_file props) to use a custom module map. I finally found that these files are expected in the deriveddata (build folder) where only the active inner framework is copied - so then I had to hard link both module map and header files for each arch.  ## Changelog:  [IOS] [CHANGED] - Update ReactCodegen to support Core prebuilds  Pull Request resolved: https://github.com/facebook/react-native/pull/52109  Test Plan: Run with RN Tester. We need to remove all extra pods from RNTester pod file since none of them are yet compatible with prebuilt (they reference non-prebuilt pods)  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76980283  Pulled By: cipolleschi  fbshipit-source-id: 4b120203e9e1628a63580b0b3b2e882837c0b818",213,122,335
facebook/react-native,2ec6e3d90131c3b2b39c9fe03f5f1c4d2967e5be,Christian Falch,2025-06-23T15:13:56Z,"Update rndependencies.rb to use the same logic of rncore.rb (#52136)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52136  Update rndependencies.rb to use the same logic of rncore.rb  ## Context This PR introduces the first working version of building React Native apps on iOS using prebuilt RNCore and cocoapods.  - Added React-Core-prebuilt.podspec for installing/consuming XCFrameworks - Added logic in react_native_pods.rb for switching between build from source and using prebuilts - Added rncore.rb - utilities for the ReactCore prebuilts - Updated rndependencies with some extra error handling modelled after rncode.rb - Added support for hard linking headers and modules in each inner framework in the XCFramework in xcframework.js  ## Swift: To enable support for the objective-c types from swift, the swift compiler uses a module map to gather exports from the framework (module.modulemap). This file basically points to an umbrella header file that exports the valid objective-c types (non c++) to Swift. In addition these files are read from the DerivedData and not the project source - so it is a bit hard to control everyting.  I was initially not able to use cocoapods own module definitions (module_name, module_file props) to use a custom module map. I finally found that these files are expected in the deriveddata (build folder) where only the active inner framework is copied - so then I had to hard link both module map and header files for each arch.  ## Changelog:  [INTERNAL] - Update rndependencies.rb to use the same logic of rncore.rb  Pull Request resolved: https://github.com/facebook/react-native/pull/52109  Test Plan: Run with RN Tester. We need to remove all extra pods from RNTester pod file since none of them are yet compatible with prebuilt (they reference non-prebuilt pods)  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76980284  Pulled By: cipolleschi  fbshipit-source-id: a7f09d931c66e2fdf468a09da4be1d40847f472b",64,23,87
facebook/react-native,1a86ee17fb80cfa1b8bcff30f4f3d5cdb193900d,Christian Falch,2025-06-23T15:13:56Z,"Add React-Core-prebuild.podspec to integrate React native core prebuilds using cocoapods (#52133)  Summary: Pull Request resolved: https://github.com/facebook/react-native/pull/52133  Add React-Core-prebuild.podspec to integrate React native core prebuilds using cocoapods  ## Context This PR introduces the first working version of building React Native apps on iOS using prebuilt RNCore and cocoapods.  - Added React-Core-prebuilt.podspec for installing/consuming XCFrameworks - Added logic in react_native_pods.rb for switching between build from source and using prebuilts - Added rncore.rb - utilities for the ReactCore prebuilts - Updated rndependencies with some extra error handling modelled after rncode.rb - Added support for hard linking headers and modules in each inner framework in the XCFramework in xcframework.js  ## Swift: To enable support for the objective-c types from swift, the swift compiler uses a module map to gather exports from the framework (module.modulemap). This file basically points to an umbrella header file that exports the valid objective-c types (non c++) to Swift. In addition these files are read from the DerivedData and not the project source - so it is a bit hard to control everyting.  I was initially not able to use cocoapods own module definitions (module_name, module_file props) to use a custom module map. I finally found that these files are expected in the deriveddata (build folder) where only the active inner framework is copied - so then I had to hard link both module map and header files for each arch.  ## Changelog:  [IOS] [ADDED] - Add `React-Core-prebuild.podspec` to integrate React native core prebuilds using cocoapods  Pull Request resolved: https://github.com/facebook/react-native/pull/52109  Test Plan: Run with RN Tester. We need to remove all extra pods from RNTester pod file since none of them are yet compatible with prebuilt (they reference non-prebuilt pods)  Rollback Plan:  Reviewed By: cortinico  Differential Revision: D76980281  Pulled By: cipolleschi  fbshipit-source-id: ce102837d6df6ab0fa2e55862cc0c954125bd362",109,0,109
