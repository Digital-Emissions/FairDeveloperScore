# Generated by Django 5.2.4 on 2025-07-17 19:07

from django.db import migrations, models
import django.core.validators
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('dev_productivity', '0001_initial'),
    ]

    operations = [
        # Delete old models
        migrations.DeleteModel(
            name='ProductivityMetric',
        ),
        migrations.DeleteModel(
            name='Developer',
        ),
        migrations.DeleteModel(
            name='Project',
        ),
        
        # Create new models
        migrations.CreateModel(
            name='LinuxKernelCommit',
            fields=[
                ('hash', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Commit Hash')),
                ('author_name', models.CharField(max_length=255, verbose_name='Author Name')),
                ('author_email', models.EmailField(max_length=254, verbose_name='Author Email')),
                ('commit_timestamp', models.DateTimeField(verbose_name='Commit Timestamp')),
                ('dt_prev_commit_sec', models.FloatField(blank=True, null=True, verbose_name='Seconds Since Previous Commit')),
                ('dt_prev_author_sec', models.FloatField(blank=True, null=True, verbose_name="Seconds Since Author's Previous Commit")),
                ('files_changed', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Files Changed')),
                ('insertions', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Lines Inserted')),
                ('deletions', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Lines Deleted')),
                ('is_merge', models.BooleanField(default=False, verbose_name='Is Merge Commit')),
                ('dirs_touched', models.TextField(blank=True, verbose_name='Directories Touched')),
                ('file_types', models.TextField(blank=True, verbose_name='File Types')),
                ('msg_subject', models.CharField(max_length=255, verbose_name='Commit Message Subject')),
                ('batch_id', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Batch ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Linux Kernel Commit',
                'verbose_name_plural': 'Linux Kernel Commits',
                'db_table': 'test_pretrained_data_linux_kernel_commits',
                'ordering': ['commit_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='BatchStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.IntegerField(unique=True, verbose_name='Batch ID')),
                ('commit_count', models.IntegerField(default=0, verbose_name='Number of Commits')),
                ('total_insertions', models.IntegerField(default=0, verbose_name='Total Insertions')),
                ('total_deletions', models.IntegerField(default=0, verbose_name='Total Deletions')),
                ('total_files_changed', models.IntegerField(default=0, verbose_name='Total Files Changed')),
                ('start_time', models.DateTimeField(verbose_name='Batch Start Time')),
                ('end_time', models.DateTimeField(verbose_name='Batch End Time')),
                ('duration_seconds', models.FloatField(verbose_name='Batch Duration (seconds)')),
                ('primary_author_email', models.EmailField(max_length=254, verbose_name='Primary Author Email')),
                ('primary_author_name', models.CharField(max_length=255, verbose_name='Primary Author Name')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Batch Statistics',
                'verbose_name_plural': 'Batch Statistics',
                'ordering': ['batch_id'],
            },
        ),
        
        # Add indexes
        migrations.RunSQL(
            "CREATE INDEX test_pretra_author__eff96a_idx ON test_pretrained_data_linux_kernel_commits (author_email);",
            reverse_sql="DROP INDEX test_pretra_author__eff96a_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX test_pretra_batch_i_601519_idx ON test_pretrained_data_linux_kernel_commits (batch_id);",
            reverse_sql="DROP INDEX test_pretra_batch_i_601519_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX test_pretra_commit__90169f_idx ON test_pretrained_data_linux_kernel_commits (commit_timestamp);",
            reverse_sql="DROP INDEX test_pretra_commit__90169f_idx;"
        ),
        migrations.RunSQL(
            "CREATE INDEX test_pretra_is_merg_cb7fe8_idx ON test_pretrained_data_linux_kernel_commits (is_merge);",
            reverse_sql="DROP INDEX test_pretra_is_merg_cb7fe8_idx;"
        ),
    ]
