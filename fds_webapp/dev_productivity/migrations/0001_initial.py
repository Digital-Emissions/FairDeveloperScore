# Generated by Django 5.2.4 on 2025-07-31 22:31

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FDSAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo_url', models.URLField(help_text='GitHub repository URL', max_length=500)),
                ('access_token', models.CharField(help_text='GitHub access token', max_length=200)),
                ('commit_limit', models.IntegerField(default=300, help_text='Number of commits to analyze')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_commits', models.IntegerField(blank=True, null=True)),
                ('total_batches', models.IntegerField(blank=True, null=True)),
                ('total_developers', models.IntegerField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, help_text='Execution time in seconds', null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'FDS Analysis',
                'verbose_name_plural': 'FDS Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeveloperScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_email', models.EmailField(max_length=254)),
                ('fds_score', models.FloatField(help_text='Fair Developer Score')),
                ('avg_effort', models.FloatField(help_text='Average effort score')),
                ('avg_importance', models.FloatField(help_text='Average importance score')),
                ('total_commits', models.IntegerField()),
                ('unique_batches', models.IntegerField()),
                ('total_churn', models.FloatField()),
                ('total_files', models.IntegerField()),
                ('share_mean', models.FloatField(help_text='Average share in collaborative work')),
                ('scale_z_mean', models.FloatField(help_text='Average scale (normalized)')),
                ('reach_z_mean', models.FloatField(help_text='Average reach (normalized)')),
                ('centrality_z_mean', models.FloatField(help_text='Average centrality (normalized)')),
                ('dominance_z_mean', models.FloatField(help_text='Average dominance (normalized)')),
                ('novelty_z_mean', models.FloatField(help_text='Average novelty (normalized)')),
                ('speed_z_mean', models.FloatField(help_text='Average speed (normalized)')),
                ('first_commit_date', models.DateTimeField()),
                ('last_commit_date', models.DateTimeField()),
                ('activity_span_days', models.FloatField()),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developer_scores', to='dev_productivity.fdsanalysis')),
            ],
            options={
                'ordering': ['-fds_score'],
                'unique_together': {('analysis', 'author_email')},
            },
        ),
        migrations.CreateModel(
            name='BatchMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.IntegerField()),
                ('unique_authors', models.IntegerField()),
                ('total_contribution', models.FloatField()),
                ('avg_contribution', models.FloatField()),
                ('max_contribution', models.FloatField()),
                ('avg_effort', models.FloatField()),
                ('importance', models.FloatField()),
                ('total_churn', models.FloatField()),
                ('total_files', models.IntegerField()),
                ('commit_count', models.IntegerField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('duration_hours', models.FloatField()),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_metrics', to='dev_productivity.fdsanalysis')),
            ],
            options={
                'ordering': ['-total_contribution'],
                'unique_together': {('analysis', 'batch_id')},
            },
        ),
    ]
